// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sohuRTB.proto

#ifndef PROTOBUF_sohuRTB_2eproto__INCLUDED
#define PROTOBUF_sohuRTB_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {
namespace sohuadx {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_sohuRTB_2eproto();
void protobuf_AssignDesc_sohuRTB_2eproto();
void protobuf_ShutdownFile_sohuRTB_2eproto();

class Request;
class Request_Device;
class Request_Impression;
class Request_Impression_Banner;
class Request_Impression_Video;
class Request_Site;
class Request_User;
class Response;
class Response_Bid;
class Response_SeatBid;

enum Request_Impression_ScreenLocation {
  Request_Impression_ScreenLocation_UNKNOWN = 0,
  Request_Impression_ScreenLocation_FIRSTVIEW = 1,
  Request_Impression_ScreenLocation_OTHERVIEW = 2
};
bool Request_Impression_ScreenLocation_IsValid(int value);
const Request_Impression_ScreenLocation Request_Impression_ScreenLocation_ScreenLocation_MIN = Request_Impression_ScreenLocation_UNKNOWN;
const Request_Impression_ScreenLocation Request_Impression_ScreenLocation_ScreenLocation_MAX = Request_Impression_ScreenLocation_OTHERVIEW;
const int Request_Impression_ScreenLocation_ScreenLocation_ARRAYSIZE = Request_Impression_ScreenLocation_ScreenLocation_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_Impression_ScreenLocation_descriptor();
inline const ::std::string& Request_Impression_ScreenLocation_Name(Request_Impression_ScreenLocation value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_Impression_ScreenLocation_descriptor(), value);
}
inline bool Request_Impression_ScreenLocation_Parse(
    const ::std::string& name, Request_Impression_ScreenLocation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_Impression_ScreenLocation>(
    Request_Impression_ScreenLocation_descriptor(), name, value);
}
// ===================================================================

class Request_Impression_Banner : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.sohuadx.Request.Impression.Banner) */ {
 public:
  Request_Impression_Banner();
  virtual ~Request_Impression_Banner();

  Request_Impression_Banner(const Request_Impression_Banner& from);

  inline Request_Impression_Banner& operator=(const Request_Impression_Banner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Impression_Banner& default_instance();

  void Swap(Request_Impression_Banner* other);

  // implements Message ----------------------------------------------

  inline Request_Impression_Banner* New() const { return New(NULL); }

  Request_Impression_Banner* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Impression_Banner& from);
  void MergeFrom(const Request_Impression_Banner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Impression_Banner* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mimes = 1;
  int mimes_size() const;
  void clear_mimes();
  static const int kMimesFieldNumber = 1;
  ::google::protobuf::uint32 mimes(int index) const;
  void set_mimes(int index, ::google::protobuf::uint32 value);
  void add_mimes(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mimes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mimes();

  // optional uint32 width = 2;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // optional uint32 height = 3;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // optional string template = 4;
  bool has_template_() const;
  void clear_template_();
  static const int kTemplateFieldNumber = 4;
  const ::std::string& template_() const;
  void set_template_(const ::std::string& value);
  void set_template_(const char* value);
  void set_template_(const char* value, size_t size);
  ::std::string* mutable_template_();
  ::std::string* release_template_();
  void set_allocated_template_(::std::string* template_);

  // @@protoc_insertion_point(class_scope:protocol.sohuadx.Request.Impression.Banner)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_template_();
  inline void clear_has_template_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mimes_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::internal::ArenaStringPtr template__;
  friend void  protobuf_AddDesc_sohuRTB_2eproto();
  friend void protobuf_AssignDesc_sohuRTB_2eproto();
  friend void protobuf_ShutdownFile_sohuRTB_2eproto();

  void InitAsDefaultInstance();
  static Request_Impression_Banner* default_instance_;
};
// -------------------------------------------------------------------

class Request_Impression_Video : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.sohuadx.Request.Impression.Video) */ {
 public:
  Request_Impression_Video();
  virtual ~Request_Impression_Video();

  Request_Impression_Video(const Request_Impression_Video& from);

  inline Request_Impression_Video& operator=(const Request_Impression_Video& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Impression_Video& default_instance();

  void Swap(Request_Impression_Video* other);

  // implements Message ----------------------------------------------

  inline Request_Impression_Video* New() const { return New(NULL); }

  Request_Impression_Video* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Impression_Video& from);
  void MergeFrom(const Request_Impression_Video& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Impression_Video* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mimes = 1;
  int mimes_size() const;
  void clear_mimes();
  static const int kMimesFieldNumber = 1;
  ::google::protobuf::uint32 mimes(int index) const;
  void set_mimes(int index, ::google::protobuf::uint32 value);
  void add_mimes(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mimes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mimes();

  // optional uint32 durationLimit = 2;
  bool has_durationlimit() const;
  void clear_durationlimit();
  static const int kDurationLimitFieldNumber = 2;
  ::google::protobuf::uint32 durationlimit() const;
  void set_durationlimit(::google::protobuf::uint32 value);

  // optional uint32 protocol = 3;
  bool has_protocol() const;
  void clear_protocol();
  static const int kProtocolFieldNumber = 3;
  ::google::protobuf::uint32 protocol() const;
  void set_protocol(::google::protobuf::uint32 value);

  // optional uint32 width = 4;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 4;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // optional uint32 height = 5;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 5;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // optional string pageurl = 6;
  bool has_pageurl() const;
  void clear_pageurl();
  static const int kPageurlFieldNumber = 6;
  const ::std::string& pageurl() const;
  void set_pageurl(const ::std::string& value);
  void set_pageurl(const char* value);
  void set_pageurl(const char* value, size_t size);
  ::std::string* mutable_pageurl();
  ::std::string* release_pageurl();
  void set_allocated_pageurl(::std::string* pageurl);

  // optional string external = 7;
  bool has_external() const;
  void clear_external();
  static const int kExternalFieldNumber = 7;
  const ::std::string& external() const;
  void set_external(const ::std::string& value);
  void set_external(const char* value);
  void set_external(const char* value, size_t size);
  ::std::string* mutable_external();
  ::std::string* release_external();
  void set_allocated_external(::std::string* external);

  // repeated string category = 8;
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 8;
  const ::std::string& category(int index) const;
  ::std::string* mutable_category(int index);
  void set_category(int index, const ::std::string& value);
  void set_category(int index, const char* value);
  void set_category(int index, const char* value, size_t size);
  ::std::string* add_category();
  void add_category(const ::std::string& value);
  void add_category(const char* value);
  void add_category(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& category() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_category();

  // optional string title = 9;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 9;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string region = 10;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 10;
  const ::std::string& region() const;
  void set_region(const ::std::string& value);
  void set_region(const char* value);
  void set_region(const char* value, size_t size);
  ::std::string* mutable_region();
  ::std::string* release_region();
  void set_allocated_region(::std::string* region);

  // @@protoc_insertion_point(class_scope:protocol.sohuadx.Request.Impression.Video)
 private:
  inline void set_has_durationlimit();
  inline void clear_has_durationlimit();
  inline void set_has_protocol();
  inline void clear_has_protocol();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_pageurl();
  inline void clear_has_pageurl();
  inline void set_has_external();
  inline void clear_has_external();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_region();
  inline void clear_has_region();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mimes_;
  ::google::protobuf::uint32 durationlimit_;
  ::google::protobuf::uint32 protocol_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::internal::ArenaStringPtr pageurl_;
  ::google::protobuf::internal::ArenaStringPtr external_;
  ::google::protobuf::RepeatedPtrField< ::std::string> category_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr region_;
  friend void  protobuf_AddDesc_sohuRTB_2eproto();
  friend void protobuf_AssignDesc_sohuRTB_2eproto();
  friend void protobuf_ShutdownFile_sohuRTB_2eproto();

  void InitAsDefaultInstance();
  static Request_Impression_Video* default_instance_;
};
// -------------------------------------------------------------------

class Request_Impression : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.sohuadx.Request.Impression) */ {
 public:
  Request_Impression();
  virtual ~Request_Impression();

  Request_Impression(const Request_Impression& from);

  inline Request_Impression& operator=(const Request_Impression& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Impression& default_instance();

  void Swap(Request_Impression* other);

  // implements Message ----------------------------------------------

  inline Request_Impression* New() const { return New(NULL); }

  Request_Impression* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Impression& from);
  void MergeFrom(const Request_Impression& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Impression* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Request_Impression_Banner Banner;
  typedef Request_Impression_Video Video;

  typedef Request_Impression_ScreenLocation ScreenLocation;
  static const ScreenLocation UNKNOWN =
    Request_Impression_ScreenLocation_UNKNOWN;
  static const ScreenLocation FIRSTVIEW =
    Request_Impression_ScreenLocation_FIRSTVIEW;
  static const ScreenLocation OTHERVIEW =
    Request_Impression_ScreenLocation_OTHERVIEW;
  static inline bool ScreenLocation_IsValid(int value) {
    return Request_Impression_ScreenLocation_IsValid(value);
  }
  static const ScreenLocation ScreenLocation_MIN =
    Request_Impression_ScreenLocation_ScreenLocation_MIN;
  static const ScreenLocation ScreenLocation_MAX =
    Request_Impression_ScreenLocation_ScreenLocation_MAX;
  static const int ScreenLocation_ARRAYSIZE =
    Request_Impression_ScreenLocation_ScreenLocation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ScreenLocation_descriptor() {
    return Request_Impression_ScreenLocation_descriptor();
  }
  static inline const ::std::string& ScreenLocation_Name(ScreenLocation value) {
    return Request_Impression_ScreenLocation_Name(value);
  }
  static inline bool ScreenLocation_Parse(const ::std::string& name,
      ScreenLocation* value) {
    return Request_Impression_ScreenLocation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 idx = 1;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::google::protobuf::uint32 idx() const;
  void set_idx(::google::protobuf::uint32 value);

  // optional string pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  const ::std::string& pid() const;
  void set_pid(const ::std::string& value);
  void set_pid(const char* value);
  void set_pid(const char* value, size_t size);
  ::std::string* mutable_pid();
  ::std::string* release_pid();
  void set_allocated_pid(::std::string* pid);

  // optional uint32 bidFloor = 3;
  bool has_bidfloor() const;
  void clear_bidfloor();
  static const int kBidFloorFieldNumber = 3;
  ::google::protobuf::uint32 bidfloor() const;
  void set_bidfloor(::google::protobuf::uint32 value);

  // optional .protocol.sohuadx.Request.Impression.Banner banner = 4;
  bool has_banner() const;
  void clear_banner();
  static const int kBannerFieldNumber = 4;
  const ::protocol::sohuadx::Request_Impression_Banner& banner() const;
  ::protocol::sohuadx::Request_Impression_Banner* mutable_banner();
  ::protocol::sohuadx::Request_Impression_Banner* release_banner();
  void set_allocated_banner(::protocol::sohuadx::Request_Impression_Banner* banner);

  // optional .protocol.sohuadx.Request.Impression.Video video = 5;
  bool has_video() const;
  void clear_video();
  static const int kVideoFieldNumber = 5;
  const ::protocol::sohuadx::Request_Impression_Video& video() const;
  ::protocol::sohuadx::Request_Impression_Video* mutable_video();
  ::protocol::sohuadx::Request_Impression_Video* release_video();
  void set_allocated_video(::protocol::sohuadx::Request_Impression_Video* video);

  // optional .protocol.sohuadx.Request.Impression.ScreenLocation screenLocation = 6;
  bool has_screenlocation() const;
  void clear_screenlocation();
  static const int kScreenLocationFieldNumber = 6;
  ::protocol::sohuadx::Request_Impression_ScreenLocation screenlocation() const;
  void set_screenlocation(::protocol::sohuadx::Request_Impression_ScreenLocation value);

  // optional bool isPreferredDeals = 7;
  bool has_ispreferreddeals() const;
  void clear_ispreferreddeals();
  static const int kIsPreferredDealsFieldNumber = 7;
  bool ispreferreddeals() const;
  void set_ispreferreddeals(bool value);

  // optional string campaignId = 8;
  bool has_campaignid() const;
  void clear_campaignid();
  static const int kCampaignIdFieldNumber = 8;
  const ::std::string& campaignid() const;
  void set_campaignid(const ::std::string& value);
  void set_campaignid(const char* value);
  void set_campaignid(const char* value, size_t size);
  ::std::string* mutable_campaignid();
  ::std::string* release_campaignid();
  void set_allocated_campaignid(::std::string* campaignid);

  // optional string pageurl = 9;
  bool has_pageurl() const;
  void clear_pageurl();
  static const int kPageurlFieldNumber = 9;
  const ::std::string& pageurl() const;
  void set_pageurl(const ::std::string& value);
  void set_pageurl(const char* value);
  void set_pageurl(const char* value, size_t size);
  ::std::string* mutable_pageurl();
  ::std::string* release_pageurl();
  void set_allocated_pageurl(::std::string* pageurl);

  // repeated string category = 10;
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 10;
  const ::std::string& category(int index) const;
  ::std::string* mutable_category(int index);
  void set_category(int index, const ::std::string& value);
  void set_category(int index, const char* value);
  void set_category(int index, const char* value, size_t size);
  ::std::string* add_category();
  void add_category(const ::std::string& value);
  void add_category(const char* value);
  void add_category(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& category() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_category();

  // optional string title = 11;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 11;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string lineId = 12;
  bool has_lineid() const;
  void clear_lineid();
  static const int kLineIdFieldNumber = 12;
  const ::std::string& lineid() const;
  void set_lineid(const ::std::string& value);
  void set_lineid(const char* value);
  void set_lineid(const char* value, size_t size);
  ::std::string* mutable_lineid();
  ::std::string* release_lineid();
  void set_allocated_lineid(::std::string* lineid);

  // repeated string acceptAdvertisingType = 13;
  int acceptadvertisingtype_size() const;
  void clear_acceptadvertisingtype();
  static const int kAcceptAdvertisingTypeFieldNumber = 13;
  const ::std::string& acceptadvertisingtype(int index) const;
  ::std::string* mutable_acceptadvertisingtype(int index);
  void set_acceptadvertisingtype(int index, const ::std::string& value);
  void set_acceptadvertisingtype(int index, const char* value);
  void set_acceptadvertisingtype(int index, const char* value, size_t size);
  ::std::string* add_acceptadvertisingtype();
  void add_acceptadvertisingtype(const ::std::string& value);
  void add_acceptadvertisingtype(const char* value);
  void add_acceptadvertisingtype(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& acceptadvertisingtype() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_acceptadvertisingtype();

  // optional string tradingType = 14;
  bool has_tradingtype() const;
  void clear_tradingtype();
  static const int kTradingTypeFieldNumber = 14;
  const ::std::string& tradingtype() const;
  void set_tradingtype(const ::std::string& value);
  void set_tradingtype(const char* value);
  void set_tradingtype(const char* value, size_t size);
  ::std::string* mutable_tradingtype();
  ::std::string* release_tradingtype();
  void set_allocated_tradingtype(::std::string* tradingtype);

  // @@protoc_insertion_point(class_scope:protocol.sohuadx.Request.Impression)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_bidfloor();
  inline void clear_has_bidfloor();
  inline void set_has_banner();
  inline void clear_has_banner();
  inline void set_has_video();
  inline void clear_has_video();
  inline void set_has_screenlocation();
  inline void clear_has_screenlocation();
  inline void set_has_ispreferreddeals();
  inline void clear_has_ispreferreddeals();
  inline void set_has_campaignid();
  inline void clear_has_campaignid();
  inline void set_has_pageurl();
  inline void clear_has_pageurl();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_lineid();
  inline void clear_has_lineid();
  inline void set_has_tradingtype();
  inline void clear_has_tradingtype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pid_;
  ::google::protobuf::uint32 idx_;
  ::google::protobuf::uint32 bidfloor_;
  ::protocol::sohuadx::Request_Impression_Banner* banner_;
  ::protocol::sohuadx::Request_Impression_Video* video_;
  int screenlocation_;
  bool ispreferreddeals_;
  ::google::protobuf::internal::ArenaStringPtr campaignid_;
  ::google::protobuf::internal::ArenaStringPtr pageurl_;
  ::google::protobuf::RepeatedPtrField< ::std::string> category_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr lineid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> acceptadvertisingtype_;
  ::google::protobuf::internal::ArenaStringPtr tradingtype_;
  friend void  protobuf_AddDesc_sohuRTB_2eproto();
  friend void protobuf_AssignDesc_sohuRTB_2eproto();
  friend void protobuf_ShutdownFile_sohuRTB_2eproto();

  void InitAsDefaultInstance();
  static Request_Impression* default_instance_;
};
// -------------------------------------------------------------------

class Request_Site : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.sohuadx.Request.Site) */ {
 public:
  Request_Site();
  virtual ~Request_Site();

  Request_Site(const Request_Site& from);

  inline Request_Site& operator=(const Request_Site& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Site& default_instance();

  void Swap(Request_Site* other);

  // implements Message ----------------------------------------------

  inline Request_Site* New() const { return New(NULL); }

  Request_Site* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Site& from);
  void MergeFrom(const Request_Site& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Site* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string page = 2;
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 2;
  const ::std::string& page() const;
  void set_page(const ::std::string& value);
  void set_page(const char* value);
  void set_page(const char* value, size_t size);
  ::std::string* mutable_page();
  ::std::string* release_page();
  void set_allocated_page(::std::string* page);

  // optional int64 category = 3;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 3;
  ::google::protobuf::int64 category() const;
  void set_category(::google::protobuf::int64 value);

  // optional string ref = 4;
  bool has_ref() const;
  void clear_ref();
  static const int kRefFieldNumber = 4;
  const ::std::string& ref() const;
  void set_ref(const ::std::string& value);
  void set_ref(const char* value);
  void set_ref(const char* value, size_t size);
  ::std::string* mutable_ref();
  ::std::string* release_ref();
  void set_allocated_ref(::std::string* ref);

  // @@protoc_insertion_point(class_scope:protocol.sohuadx.Request.Site)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_category();
  inline void clear_has_category();
  inline void set_has_ref();
  inline void clear_has_ref();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr page_;
  ::google::protobuf::int64 category_;
  ::google::protobuf::internal::ArenaStringPtr ref_;
  friend void  protobuf_AddDesc_sohuRTB_2eproto();
  friend void protobuf_AssignDesc_sohuRTB_2eproto();
  friend void protobuf_ShutdownFile_sohuRTB_2eproto();

  void InitAsDefaultInstance();
  static Request_Site* default_instance_;
};
// -------------------------------------------------------------------

class Request_Device : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.sohuadx.Request.Device) */ {
 public:
  Request_Device();
  virtual ~Request_Device();

  Request_Device(const Request_Device& from);

  inline Request_Device& operator=(const Request_Device& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Device& default_instance();

  void Swap(Request_Device* other);

  // implements Message ----------------------------------------------

  inline Request_Device* New() const { return New(NULL); }

  Request_Device* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Device& from);
  void MergeFrom(const Request_Device& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Device* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // optional string ip = 2;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string ua = 3;
  bool has_ua() const;
  void clear_ua();
  static const int kUaFieldNumber = 3;
  const ::std::string& ua() const;
  void set_ua(const ::std::string& value);
  void set_ua(const char* value);
  void set_ua(const char* value, size_t size);
  ::std::string* mutable_ua();
  ::std::string* release_ua();
  void set_allocated_ua(::std::string* ua);

  // optional string carrier = 4;
  bool has_carrier() const;
  void clear_carrier();
  static const int kCarrierFieldNumber = 4;
  const ::std::string& carrier() const;
  void set_carrier(const ::std::string& value);
  void set_carrier(const char* value);
  void set_carrier(const char* value, size_t size);
  ::std::string* mutable_carrier();
  ::std::string* release_carrier();
  void set_allocated_carrier(::std::string* carrier);

  // optional string netType = 5;
  bool has_nettype() const;
  void clear_nettype();
  static const int kNetTypeFieldNumber = 5;
  const ::std::string& nettype() const;
  void set_nettype(const ::std::string& value);
  void set_nettype(const char* value);
  void set_nettype(const char* value, size_t size);
  ::std::string* mutable_nettype();
  ::std::string* release_nettype();
  void set_allocated_nettype(::std::string* nettype);

  // optional string mobileType = 6;
  bool has_mobiletype() const;
  void clear_mobiletype();
  static const int kMobileTypeFieldNumber = 6;
  const ::std::string& mobiletype() const;
  void set_mobiletype(const ::std::string& value);
  void set_mobiletype(const char* value);
  void set_mobiletype(const char* value, size_t size);
  ::std::string* mutable_mobiletype();
  ::std::string* release_mobiletype();
  void set_allocated_mobiletype(::std::string* mobiletype);

  // optional uint32 screenWidth = 7;
  bool has_screenwidth() const;
  void clear_screenwidth();
  static const int kScreenWidthFieldNumber = 7;
  ::google::protobuf::uint32 screenwidth() const;
  void set_screenwidth(::google::protobuf::uint32 value);

  // optional uint32 screenHeight = 8;
  bool has_screenheight() const;
  void clear_screenheight();
  static const int kScreenHeightFieldNumber = 8;
  ::google::protobuf::uint32 screenheight() const;
  void set_screenheight(::google::protobuf::uint32 value);

  // optional string imei = 9;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 9;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string imsi = 10;
  bool has_imsi() const;
  void clear_imsi();
  static const int kImsiFieldNumber = 10;
  const ::std::string& imsi() const;
  void set_imsi(const ::std::string& value);
  void set_imsi(const char* value);
  void set_imsi(const char* value, size_t size);
  ::std::string* mutable_imsi();
  ::std::string* release_imsi();
  void set_allocated_imsi(::std::string* imsi);

  // optional string mac = 11;
  bool has_mac() const;
  void clear_mac();
  static const int kMacFieldNumber = 11;
  const ::std::string& mac() const;
  void set_mac(const ::std::string& value);
  void set_mac(const char* value);
  void set_mac(const char* value, size_t size);
  ::std::string* mutable_mac();
  ::std::string* release_mac();
  void set_allocated_mac(::std::string* mac);

  // optional string idfa = 12;
  bool has_idfa() const;
  void clear_idfa();
  static const int kIdfaFieldNumber = 12;
  const ::std::string& idfa() const;
  void set_idfa(const ::std::string& value);
  void set_idfa(const char* value);
  void set_idfa(const char* value, size_t size);
  ::std::string* mutable_idfa();
  ::std::string* release_idfa();
  void set_allocated_idfa(::std::string* idfa);

  // optional string androidID = 13;
  bool has_androidid() const;
  void clear_androidid();
  static const int kAndroidIDFieldNumber = 13;
  const ::std::string& androidid() const;
  void set_androidid(const ::std::string& value);
  void set_androidid(const char* value);
  void set_androidid(const char* value, size_t size);
  ::std::string* mutable_androidid();
  ::std::string* release_androidid();
  void set_allocated_androidid(::std::string* androidid);

  // optional string openUDID = 14;
  bool has_openudid() const;
  void clear_openudid();
  static const int kOpenUDIDFieldNumber = 14;
  const ::std::string& openudid() const;
  void set_openudid(const ::std::string& value);
  void set_openudid(const char* value);
  void set_openudid(const char* value, size_t size);
  ::std::string* mutable_openudid();
  ::std::string* release_openudid();
  void set_allocated_openudid(::std::string* openudid);

  // @@protoc_insertion_point(class_scope:protocol.sohuadx.Request.Device)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_ua();
  inline void clear_has_ua();
  inline void set_has_carrier();
  inline void clear_has_carrier();
  inline void set_has_nettype();
  inline void clear_has_nettype();
  inline void set_has_mobiletype();
  inline void clear_has_mobiletype();
  inline void set_has_screenwidth();
  inline void clear_has_screenwidth();
  inline void set_has_screenheight();
  inline void clear_has_screenheight();
  inline void set_has_imei();
  inline void clear_has_imei();
  inline void set_has_imsi();
  inline void clear_has_imsi();
  inline void set_has_mac();
  inline void clear_has_mac();
  inline void set_has_idfa();
  inline void clear_has_idfa();
  inline void set_has_androidid();
  inline void clear_has_androidid();
  inline void set_has_openudid();
  inline void clear_has_openudid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr ua_;
  ::google::protobuf::internal::ArenaStringPtr carrier_;
  ::google::protobuf::internal::ArenaStringPtr nettype_;
  ::google::protobuf::internal::ArenaStringPtr mobiletype_;
  ::google::protobuf::uint32 screenwidth_;
  ::google::protobuf::uint32 screenheight_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr imsi_;
  ::google::protobuf::internal::ArenaStringPtr mac_;
  ::google::protobuf::internal::ArenaStringPtr idfa_;
  ::google::protobuf::internal::ArenaStringPtr androidid_;
  ::google::protobuf::internal::ArenaStringPtr openudid_;
  friend void  protobuf_AddDesc_sohuRTB_2eproto();
  friend void protobuf_AssignDesc_sohuRTB_2eproto();
  friend void protobuf_ShutdownFile_sohuRTB_2eproto();

  void InitAsDefaultInstance();
  static Request_Device* default_instance_;
};
// -------------------------------------------------------------------

class Request_User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.sohuadx.Request.User) */ {
 public:
  Request_User();
  virtual ~Request_User();

  Request_User(const Request_User& from);

  inline Request_User& operator=(const Request_User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_User& default_instance();

  void Swap(Request_User* other);

  // implements Message ----------------------------------------------

  inline Request_User* New() const { return New(NULL); }

  Request_User* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_User& from);
  void MergeFrom(const Request_User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string suid = 1;
  bool has_suid() const;
  void clear_suid();
  static const int kSuidFieldNumber = 1;
  const ::std::string& suid() const;
  void set_suid(const ::std::string& value);
  void set_suid(const char* value);
  void set_suid(const char* value, size_t size);
  ::std::string* mutable_suid();
  ::std::string* release_suid();
  void set_allocated_suid(::std::string* suid);

  // optional uint32 version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // repeated int64 category = 3;
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 3;
  ::google::protobuf::int64 category(int index) const;
  void set_category(int index, ::google::protobuf::int64 value);
  void add_category(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_category();

  // repeated string searchKeyWords = 4;
  int searchkeywords_size() const;
  void clear_searchkeywords();
  static const int kSearchKeyWordsFieldNumber = 4;
  const ::std::string& searchkeywords(int index) const;
  ::std::string* mutable_searchkeywords(int index);
  void set_searchkeywords(int index, const ::std::string& value);
  void set_searchkeywords(int index, const char* value);
  void set_searchkeywords(int index, const char* value, size_t size);
  ::std::string* add_searchkeywords();
  void add_searchkeywords(const ::std::string& value);
  void add_searchkeywords(const char* value);
  void add_searchkeywords(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& searchkeywords() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_searchkeywords();

  // optional string yyid = 5;
  bool has_yyid() const;
  void clear_yyid();
  static const int kYyidFieldNumber = 5;
  const ::std::string& yyid() const;
  void set_yyid(const ::std::string& value);
  void set_yyid(const char* value);
  void set_yyid(const char* value, size_t size);
  ::std::string* mutable_yyid();
  ::std::string* release_yyid();
  void set_allocated_yyid(::std::string* yyid);

  // optional string fyid = 6;
  bool has_fyid() const;
  void clear_fyid();
  static const int kFyidFieldNumber = 6;
  const ::std::string& fyid() const;
  void set_fyid(const ::std::string& value);
  void set_fyid(const char* value);
  void set_fyid(const char* value, size_t size);
  ::std::string* mutable_fyid();
  ::std::string* release_fyid();
  void set_allocated_fyid(::std::string* fyid);

  // @@protoc_insertion_point(class_scope:protocol.sohuadx.Request.User)
 private:
  inline void set_has_suid();
  inline void clear_has_suid();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_yyid();
  inline void clear_has_yyid();
  inline void set_has_fyid();
  inline void clear_has_fyid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr suid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > category_;
  ::google::protobuf::RepeatedPtrField< ::std::string> searchkeywords_;
  ::google::protobuf::internal::ArenaStringPtr yyid_;
  ::google::protobuf::internal::ArenaStringPtr fyid_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_sohuRTB_2eproto();
  friend void protobuf_AssignDesc_sohuRTB_2eproto();
  friend void protobuf_ShutdownFile_sohuRTB_2eproto();

  void InitAsDefaultInstance();
  static Request_User* default_instance_;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.sohuadx.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Request_Impression Impression;
  typedef Request_Site Site;
  typedef Request_Device Device;
  typedef Request_User User;

  // accessors -------------------------------------------------------

  // required uint32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // required string bidid = 2;
  bool has_bidid() const;
  void clear_bidid();
  static const int kBididFieldNumber = 2;
  const ::std::string& bidid() const;
  void set_bidid(const ::std::string& value);
  void set_bidid(const char* value);
  void set_bidid(const char* value, size_t size);
  ::std::string* mutable_bidid();
  ::std::string* release_bidid();
  void set_allocated_bidid(::std::string* bidid);

  // optional uint32 isTest = 3;
  bool has_istest() const;
  void clear_istest();
  static const int kIsTestFieldNumber = 3;
  ::google::protobuf::uint32 istest() const;
  void set_istest(::google::protobuf::uint32 value);

  // optional .protocol.sohuadx.Request.Site site = 4;
  bool has_site() const;
  void clear_site();
  static const int kSiteFieldNumber = 4;
  const ::protocol::sohuadx::Request_Site& site() const;
  ::protocol::sohuadx::Request_Site* mutable_site();
  ::protocol::sohuadx::Request_Site* release_site();
  void set_allocated_site(::protocol::sohuadx::Request_Site* site);

  // optional .protocol.sohuadx.Request.Device device = 5;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 5;
  const ::protocol::sohuadx::Request_Device& device() const;
  ::protocol::sohuadx::Request_Device* mutable_device();
  ::protocol::sohuadx::Request_Device* release_device();
  void set_allocated_device(::protocol::sohuadx::Request_Device* device);

  // optional .protocol.sohuadx.Request.User user = 6;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 6;
  const ::protocol::sohuadx::Request_User& user() const;
  ::protocol::sohuadx::Request_User* mutable_user();
  ::protocol::sohuadx::Request_User* release_user();
  void set_allocated_user(::protocol::sohuadx::Request_User* user);

  // repeated .protocol.sohuadx.Request.Impression impression = 7;
  int impression_size() const;
  void clear_impression();
  static const int kImpressionFieldNumber = 7;
  const ::protocol::sohuadx::Request_Impression& impression(int index) const;
  ::protocol::sohuadx::Request_Impression* mutable_impression(int index);
  ::protocol::sohuadx::Request_Impression* add_impression();
  ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Request_Impression >*
      mutable_impression();
  const ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Request_Impression >&
      impression() const;

  // repeated string excludeAdCategory = 8;
  int excludeadcategory_size() const;
  void clear_excludeadcategory();
  static const int kExcludeAdCategoryFieldNumber = 8;
  const ::std::string& excludeadcategory(int index) const;
  ::std::string* mutable_excludeadcategory(int index);
  void set_excludeadcategory(int index, const ::std::string& value);
  void set_excludeadcategory(int index, const char* value);
  void set_excludeadcategory(int index, const char* value, size_t size);
  ::std::string* add_excludeadcategory();
  void add_excludeadcategory(const ::std::string& value);
  void add_excludeadcategory(const char* value);
  void add_excludeadcategory(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& excludeadcategory() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_excludeadcategory();

  // @@protoc_insertion_point(class_scope:protocol.sohuadx.Request)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_bidid();
  inline void clear_has_bidid();
  inline void set_has_istest();
  inline void clear_has_istest();
  inline void set_has_site();
  inline void clear_has_site();
  inline void set_has_device();
  inline void clear_has_device();
  inline void set_has_user();
  inline void clear_has_user();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr bidid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 istest_;
  ::protocol::sohuadx::Request_Site* site_;
  ::protocol::sohuadx::Request_Device* device_;
  ::protocol::sohuadx::Request_User* user_;
  ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Request_Impression > impression_;
  ::google::protobuf::RepeatedPtrField< ::std::string> excludeadcategory_;
  friend void  protobuf_AddDesc_sohuRTB_2eproto();
  friend void protobuf_AssignDesc_sohuRTB_2eproto();
  friend void protobuf_ShutdownFile_sohuRTB_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Response_Bid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.sohuadx.Response.Bid) */ {
 public:
  Response_Bid();
  virtual ~Response_Bid();

  Response_Bid(const Response_Bid& from);

  inline Response_Bid& operator=(const Response_Bid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Bid& default_instance();

  void Swap(Response_Bid* other);

  // implements Message ----------------------------------------------

  inline Response_Bid* New() const { return New(NULL); }

  Response_Bid* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Bid& from);
  void MergeFrom(const Response_Bid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Bid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 price = 1;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 1;
  ::google::protobuf::uint32 price() const;
  void set_price(::google::protobuf::uint32 value);

  // required string adurl = 2;
  bool has_adurl() const;
  void clear_adurl();
  static const int kAdurlFieldNumber = 2;
  const ::std::string& adurl() const;
  void set_adurl(const ::std::string& value);
  void set_adurl(const char* value);
  void set_adurl(const char* value, size_t size);
  ::std::string* mutable_adurl();
  ::std::string* release_adurl();
  void set_allocated_adurl(::std::string* adurl);

  // optional string ext = 3;
  bool has_ext() const;
  void clear_ext();
  static const int kExtFieldNumber = 3;
  const ::std::string& ext() const;
  void set_ext(const ::std::string& value);
  void set_ext(const char* value);
  void set_ext(const char* value, size_t size);
  ::std::string* mutable_ext();
  ::std::string* release_ext();
  void set_allocated_ext(::std::string* ext);

  // optional string clickPara = 4;
  bool has_clickpara() const;
  void clear_clickpara();
  static const int kClickParaFieldNumber = 4;
  const ::std::string& clickpara() const;
  void set_clickpara(const ::std::string& value);
  void set_clickpara(const char* value);
  void set_clickpara(const char* value, size_t size);
  ::std::string* mutable_clickpara();
  ::std::string* release_clickpara();
  void set_allocated_clickpara(::std::string* clickpara);

  // optional string displayPara = 5;
  bool has_displaypara() const;
  void clear_displaypara();
  static const int kDisplayParaFieldNumber = 5;
  const ::std::string& displaypara() const;
  void set_displaypara(const ::std::string& value);
  void set_displaypara(const char* value);
  void set_displaypara(const char* value, size_t size);
  ::std::string* mutable_displaypara();
  ::std::string* release_displaypara();
  void set_allocated_displaypara(::std::string* displaypara);

  // optional string adPara = 6;
  bool has_adpara() const;
  void clear_adpara();
  static const int kAdParaFieldNumber = 6;
  const ::std::string& adpara() const;
  void set_adpara(const ::std::string& value);
  void set_adpara(const char* value);
  void set_adpara(const char* value, size_t size);
  ::std::string* mutable_adpara();
  ::std::string* release_adpara();
  void set_allocated_adpara(::std::string* adpara);

  // optional string displayMonitor = 7;
  bool has_displaymonitor() const;
  void clear_displaymonitor();
  static const int kDisplayMonitorFieldNumber = 7;
  const ::std::string& displaymonitor() const;
  void set_displaymonitor(const ::std::string& value);
  void set_displaymonitor(const char* value);
  void set_displaymonitor(const char* value, size_t size);
  ::std::string* mutable_displaymonitor();
  ::std::string* release_displaymonitor();
  void set_allocated_displaymonitor(::std::string* displaymonitor);

  // optional string clickMonitor = 8;
  bool has_clickmonitor() const;
  void clear_clickmonitor();
  static const int kClickMonitorFieldNumber = 8;
  const ::std::string& clickmonitor() const;
  void set_clickmonitor(const ::std::string& value);
  void set_clickmonitor(const char* value);
  void set_clickmonitor(const char* value, size_t size);
  ::std::string* mutable_clickmonitor();
  ::std::string* release_clickmonitor();
  void set_allocated_clickmonitor(::std::string* clickmonitor);

  // optional string adm_url = 9;
  bool has_adm_url() const;
  void clear_adm_url();
  static const int kAdmUrlFieldNumber = 9;
  const ::std::string& adm_url() const;
  void set_adm_url(const ::std::string& value);
  void set_adm_url(const char* value);
  void set_adm_url(const char* value, size_t size);
  ::std::string* mutable_adm_url();
  ::std::string* release_adm_url();
  void set_allocated_adm_url(::std::string* adm_url);

  // @@protoc_insertion_point(class_scope:protocol.sohuadx.Response.Bid)
 private:
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_adurl();
  inline void clear_has_adurl();
  inline void set_has_ext();
  inline void clear_has_ext();
  inline void set_has_clickpara();
  inline void clear_has_clickpara();
  inline void set_has_displaypara();
  inline void clear_has_displaypara();
  inline void set_has_adpara();
  inline void clear_has_adpara();
  inline void set_has_displaymonitor();
  inline void clear_has_displaymonitor();
  inline void set_has_clickmonitor();
  inline void clear_has_clickmonitor();
  inline void set_has_adm_url();
  inline void clear_has_adm_url();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr adurl_;
  ::google::protobuf::internal::ArenaStringPtr ext_;
  ::google::protobuf::internal::ArenaStringPtr clickpara_;
  ::google::protobuf::internal::ArenaStringPtr displaypara_;
  ::google::protobuf::internal::ArenaStringPtr adpara_;
  ::google::protobuf::internal::ArenaStringPtr displaymonitor_;
  ::google::protobuf::internal::ArenaStringPtr clickmonitor_;
  ::google::protobuf::internal::ArenaStringPtr adm_url_;
  ::google::protobuf::uint32 price_;
  friend void  protobuf_AddDesc_sohuRTB_2eproto();
  friend void protobuf_AssignDesc_sohuRTB_2eproto();
  friend void protobuf_ShutdownFile_sohuRTB_2eproto();

  void InitAsDefaultInstance();
  static Response_Bid* default_instance_;
};
// -------------------------------------------------------------------

class Response_SeatBid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.sohuadx.Response.SeatBid) */ {
 public:
  Response_SeatBid();
  virtual ~Response_SeatBid();

  Response_SeatBid(const Response_SeatBid& from);

  inline Response_SeatBid& operator=(const Response_SeatBid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_SeatBid& default_instance();

  void Swap(Response_SeatBid* other);

  // implements Message ----------------------------------------------

  inline Response_SeatBid* New() const { return New(NULL); }

  Response_SeatBid* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_SeatBid& from);
  void MergeFrom(const Response_SeatBid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_SeatBid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 idx = 1;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::google::protobuf::uint32 idx() const;
  void set_idx(::google::protobuf::uint32 value);

  // repeated .protocol.sohuadx.Response.Bid bid = 2;
  int bid_size() const;
  void clear_bid();
  static const int kBidFieldNumber = 2;
  const ::protocol::sohuadx::Response_Bid& bid(int index) const;
  ::protocol::sohuadx::Response_Bid* mutable_bid(int index);
  ::protocol::sohuadx::Response_Bid* add_bid();
  ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Response_Bid >*
      mutable_bid();
  const ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Response_Bid >&
      bid() const;

  // @@protoc_insertion_point(class_scope:protocol.sohuadx.Response.SeatBid)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Response_Bid > bid_;
  ::google::protobuf::uint32 idx_;
  friend void  protobuf_AddDesc_sohuRTB_2eproto();
  friend void protobuf_AssignDesc_sohuRTB_2eproto();
  friend void protobuf_ShutdownFile_sohuRTB_2eproto();

  void InitAsDefaultInstance();
  static Response_SeatBid* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.sohuadx.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Response_Bid Bid;
  typedef Response_SeatBid SeatBid;

  // accessors -------------------------------------------------------

  // required uint32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // required string bidid = 2;
  bool has_bidid() const;
  void clear_bidid();
  static const int kBididFieldNumber = 2;
  const ::std::string& bidid() const;
  void set_bidid(const ::std::string& value);
  void set_bidid(const char* value);
  void set_bidid(const char* value, size_t size);
  ::std::string* mutable_bidid();
  ::std::string* release_bidid();
  void set_allocated_bidid(::std::string* bidid);

  // repeated .protocol.sohuadx.Response.SeatBid seatbid = 3;
  int seatbid_size() const;
  void clear_seatbid();
  static const int kSeatbidFieldNumber = 3;
  const ::protocol::sohuadx::Response_SeatBid& seatbid(int index) const;
  ::protocol::sohuadx::Response_SeatBid* mutable_seatbid(int index);
  ::protocol::sohuadx::Response_SeatBid* add_seatbid();
  ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Response_SeatBid >*
      mutable_seatbid();
  const ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Response_SeatBid >&
      seatbid() const;

  // @@protoc_insertion_point(class_scope:protocol.sohuadx.Response)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_bidid();
  inline void clear_has_bidid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr bidid_;
  ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Response_SeatBid > seatbid_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_sohuRTB_2eproto();
  friend void protobuf_AssignDesc_sohuRTB_2eproto();
  friend void protobuf_ShutdownFile_sohuRTB_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Request_Impression_Banner

// repeated uint32 mimes = 1;
inline int Request_Impression_Banner::mimes_size() const {
  return mimes_.size();
}
inline void Request_Impression_Banner::clear_mimes() {
  mimes_.Clear();
}
inline ::google::protobuf::uint32 Request_Impression_Banner::mimes(int index) const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Banner.mimes)
  return mimes_.Get(index);
}
inline void Request_Impression_Banner::set_mimes(int index, ::google::protobuf::uint32 value) {
  mimes_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Banner.mimes)
}
inline void Request_Impression_Banner::add_mimes(::google::protobuf::uint32 value) {
  mimes_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.sohuadx.Request.Impression.Banner.mimes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Request_Impression_Banner::mimes() const {
  // @@protoc_insertion_point(field_list:protocol.sohuadx.Request.Impression.Banner.mimes)
  return mimes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Request_Impression_Banner::mutable_mimes() {
  // @@protoc_insertion_point(field_mutable_list:protocol.sohuadx.Request.Impression.Banner.mimes)
  return &mimes_;
}

// optional uint32 width = 2;
inline bool Request_Impression_Banner::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_Impression_Banner::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_Impression_Banner::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_Impression_Banner::clear_width() {
  width_ = 0u;
  clear_has_width();
}
inline ::google::protobuf::uint32 Request_Impression_Banner::width() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Banner.width)
  return width_;
}
inline void Request_Impression_Banner::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Banner.width)
}

// optional uint32 height = 3;
inline bool Request_Impression_Banner::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_Impression_Banner::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_Impression_Banner::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_Impression_Banner::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 Request_Impression_Banner::height() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Banner.height)
  return height_;
}
inline void Request_Impression_Banner::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Banner.height)
}

// optional string template = 4;
inline bool Request_Impression_Banner::has_template_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request_Impression_Banner::set_has_template_() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request_Impression_Banner::clear_has_template_() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request_Impression_Banner::clear_template_() {
  template__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_template_();
}
inline const ::std::string& Request_Impression_Banner::template_() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Banner.template)
  return template__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression_Banner::set_template_(const ::std::string& value) {
  set_has_template_();
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Banner.template)
}
inline void Request_Impression_Banner::set_template_(const char* value) {
  set_has_template_();
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.Banner.template)
}
inline void Request_Impression_Banner::set_template_(const char* value, size_t size) {
  set_has_template_();
  template__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.Banner.template)
}
inline ::std::string* Request_Impression_Banner::mutable_template_() {
  set_has_template_();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.Banner.template)
  return template__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Impression_Banner::release_template_() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.Banner.template)
  clear_has_template_();
  return template__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression_Banner::set_allocated_template_(::std::string* template_) {
  if (template_ != NULL) {
    set_has_template_();
  } else {
    clear_has_template_();
  }
  template__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), template_);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.Banner.template)
}

// -------------------------------------------------------------------

// Request_Impression_Video

// repeated uint32 mimes = 1;
inline int Request_Impression_Video::mimes_size() const {
  return mimes_.size();
}
inline void Request_Impression_Video::clear_mimes() {
  mimes_.Clear();
}
inline ::google::protobuf::uint32 Request_Impression_Video::mimes(int index) const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Video.mimes)
  return mimes_.Get(index);
}
inline void Request_Impression_Video::set_mimes(int index, ::google::protobuf::uint32 value) {
  mimes_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Video.mimes)
}
inline void Request_Impression_Video::add_mimes(::google::protobuf::uint32 value) {
  mimes_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.sohuadx.Request.Impression.Video.mimes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Request_Impression_Video::mimes() const {
  // @@protoc_insertion_point(field_list:protocol.sohuadx.Request.Impression.Video.mimes)
  return mimes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Request_Impression_Video::mutable_mimes() {
  // @@protoc_insertion_point(field_mutable_list:protocol.sohuadx.Request.Impression.Video.mimes)
  return &mimes_;
}

// optional uint32 durationLimit = 2;
inline bool Request_Impression_Video::has_durationlimit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_Impression_Video::set_has_durationlimit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_Impression_Video::clear_has_durationlimit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_Impression_Video::clear_durationlimit() {
  durationlimit_ = 0u;
  clear_has_durationlimit();
}
inline ::google::protobuf::uint32 Request_Impression_Video::durationlimit() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Video.durationLimit)
  return durationlimit_;
}
inline void Request_Impression_Video::set_durationlimit(::google::protobuf::uint32 value) {
  set_has_durationlimit();
  durationlimit_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Video.durationLimit)
}

// optional uint32 protocol = 3;
inline bool Request_Impression_Video::has_protocol() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_Impression_Video::set_has_protocol() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_Impression_Video::clear_has_protocol() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_Impression_Video::clear_protocol() {
  protocol_ = 0u;
  clear_has_protocol();
}
inline ::google::protobuf::uint32 Request_Impression_Video::protocol() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Video.protocol)
  return protocol_;
}
inline void Request_Impression_Video::set_protocol(::google::protobuf::uint32 value) {
  set_has_protocol();
  protocol_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Video.protocol)
}

// optional uint32 width = 4;
inline bool Request_Impression_Video::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request_Impression_Video::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request_Impression_Video::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request_Impression_Video::clear_width() {
  width_ = 0u;
  clear_has_width();
}
inline ::google::protobuf::uint32 Request_Impression_Video::width() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Video.width)
  return width_;
}
inline void Request_Impression_Video::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Video.width)
}

// optional uint32 height = 5;
inline bool Request_Impression_Video::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request_Impression_Video::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request_Impression_Video::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request_Impression_Video::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 Request_Impression_Video::height() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Video.height)
  return height_;
}
inline void Request_Impression_Video::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Video.height)
}

// optional string pageurl = 6;
inline bool Request_Impression_Video::has_pageurl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request_Impression_Video::set_has_pageurl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request_Impression_Video::clear_has_pageurl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request_Impression_Video::clear_pageurl() {
  pageurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pageurl();
}
inline const ::std::string& Request_Impression_Video::pageurl() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Video.pageurl)
  return pageurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression_Video::set_pageurl(const ::std::string& value) {
  set_has_pageurl();
  pageurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Video.pageurl)
}
inline void Request_Impression_Video::set_pageurl(const char* value) {
  set_has_pageurl();
  pageurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.Video.pageurl)
}
inline void Request_Impression_Video::set_pageurl(const char* value, size_t size) {
  set_has_pageurl();
  pageurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.Video.pageurl)
}
inline ::std::string* Request_Impression_Video::mutable_pageurl() {
  set_has_pageurl();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.Video.pageurl)
  return pageurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Impression_Video::release_pageurl() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.Video.pageurl)
  clear_has_pageurl();
  return pageurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression_Video::set_allocated_pageurl(::std::string* pageurl) {
  if (pageurl != NULL) {
    set_has_pageurl();
  } else {
    clear_has_pageurl();
  }
  pageurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pageurl);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.Video.pageurl)
}

// optional string external = 7;
inline bool Request_Impression_Video::has_external() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Request_Impression_Video::set_has_external() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Request_Impression_Video::clear_has_external() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Request_Impression_Video::clear_external() {
  external_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_external();
}
inline const ::std::string& Request_Impression_Video::external() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Video.external)
  return external_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression_Video::set_external(const ::std::string& value) {
  set_has_external();
  external_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Video.external)
}
inline void Request_Impression_Video::set_external(const char* value) {
  set_has_external();
  external_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.Video.external)
}
inline void Request_Impression_Video::set_external(const char* value, size_t size) {
  set_has_external();
  external_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.Video.external)
}
inline ::std::string* Request_Impression_Video::mutable_external() {
  set_has_external();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.Video.external)
  return external_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Impression_Video::release_external() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.Video.external)
  clear_has_external();
  return external_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression_Video::set_allocated_external(::std::string* external) {
  if (external != NULL) {
    set_has_external();
  } else {
    clear_has_external();
  }
  external_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), external);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.Video.external)
}

// repeated string category = 8;
inline int Request_Impression_Video::category_size() const {
  return category_.size();
}
inline void Request_Impression_Video::clear_category() {
  category_.Clear();
}
inline const ::std::string& Request_Impression_Video::category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Video.category)
  return category_.Get(index);
}
inline ::std::string* Request_Impression_Video::mutable_category(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.Video.category)
  return category_.Mutable(index);
}
inline void Request_Impression_Video::set_category(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Video.category)
  category_.Mutable(index)->assign(value);
}
inline void Request_Impression_Video::set_category(int index, const char* value) {
  category_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.Video.category)
}
inline void Request_Impression_Video::set_category(int index, const char* value, size_t size) {
  category_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.Video.category)
}
inline ::std::string* Request_Impression_Video::add_category() {
  // @@protoc_insertion_point(field_add_mutable:protocol.sohuadx.Request.Impression.Video.category)
  return category_.Add();
}
inline void Request_Impression_Video::add_category(const ::std::string& value) {
  category_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.sohuadx.Request.Impression.Video.category)
}
inline void Request_Impression_Video::add_category(const char* value) {
  category_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.sohuadx.Request.Impression.Video.category)
}
inline void Request_Impression_Video::add_category(const char* value, size_t size) {
  category_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.sohuadx.Request.Impression.Video.category)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request_Impression_Video::category() const {
  // @@protoc_insertion_point(field_list:protocol.sohuadx.Request.Impression.Video.category)
  return category_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Request_Impression_Video::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.sohuadx.Request.Impression.Video.category)
  return &category_;
}

// optional string title = 9;
inline bool Request_Impression_Video::has_title() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Request_Impression_Video::set_has_title() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Request_Impression_Video::clear_has_title() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Request_Impression_Video::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& Request_Impression_Video::title() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Video.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression_Video::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Video.title)
}
inline void Request_Impression_Video::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.Video.title)
}
inline void Request_Impression_Video::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.Video.title)
}
inline ::std::string* Request_Impression_Video::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.Video.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Impression_Video::release_title() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.Video.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression_Video::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.Video.title)
}

// optional string region = 10;
inline bool Request_Impression_Video::has_region() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Request_Impression_Video::set_has_region() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Request_Impression_Video::clear_has_region() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Request_Impression_Video::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_region();
}
inline const ::std::string& Request_Impression_Video::region() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.Video.region)
  return region_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression_Video::set_region(const ::std::string& value) {
  set_has_region();
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.Video.region)
}
inline void Request_Impression_Video::set_region(const char* value) {
  set_has_region();
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.Video.region)
}
inline void Request_Impression_Video::set_region(const char* value, size_t size) {
  set_has_region();
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.Video.region)
}
inline ::std::string* Request_Impression_Video::mutable_region() {
  set_has_region();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.Video.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Impression_Video::release_region() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.Video.region)
  clear_has_region();
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression_Video::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    set_has_region();
  } else {
    clear_has_region();
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.Video.region)
}

// -------------------------------------------------------------------

// Request_Impression

// optional uint32 idx = 1;
inline bool Request_Impression::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_Impression::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_Impression::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_Impression::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 Request_Impression::idx() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.idx)
  return idx_;
}
inline void Request_Impression::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.idx)
}

// optional string pid = 2;
inline bool Request_Impression::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_Impression::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_Impression::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_Impression::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
inline const ::std::string& Request_Impression::pid() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.pid)
  return pid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.pid)
}
inline void Request_Impression::set_pid(const char* value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.pid)
}
inline void Request_Impression::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.pid)
}
inline ::std::string* Request_Impression::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Impression::release_pid() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.pid)
}

// optional uint32 bidFloor = 3;
inline bool Request_Impression::has_bidfloor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_Impression::set_has_bidfloor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_Impression::clear_has_bidfloor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_Impression::clear_bidfloor() {
  bidfloor_ = 0u;
  clear_has_bidfloor();
}
inline ::google::protobuf::uint32 Request_Impression::bidfloor() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.bidFloor)
  return bidfloor_;
}
inline void Request_Impression::set_bidfloor(::google::protobuf::uint32 value) {
  set_has_bidfloor();
  bidfloor_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.bidFloor)
}

// optional .protocol.sohuadx.Request.Impression.Banner banner = 4;
inline bool Request_Impression::has_banner() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request_Impression::set_has_banner() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request_Impression::clear_has_banner() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request_Impression::clear_banner() {
  if (banner_ != NULL) banner_->::protocol::sohuadx::Request_Impression_Banner::Clear();
  clear_has_banner();
}
inline const ::protocol::sohuadx::Request_Impression_Banner& Request_Impression::banner() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.banner)
  return banner_ != NULL ? *banner_ : *default_instance_->banner_;
}
inline ::protocol::sohuadx::Request_Impression_Banner* Request_Impression::mutable_banner() {
  set_has_banner();
  if (banner_ == NULL) {
    banner_ = new ::protocol::sohuadx::Request_Impression_Banner;
  }
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.banner)
  return banner_;
}
inline ::protocol::sohuadx::Request_Impression_Banner* Request_Impression::release_banner() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.banner)
  clear_has_banner();
  ::protocol::sohuadx::Request_Impression_Banner* temp = banner_;
  banner_ = NULL;
  return temp;
}
inline void Request_Impression::set_allocated_banner(::protocol::sohuadx::Request_Impression_Banner* banner) {
  delete banner_;
  banner_ = banner;
  if (banner) {
    set_has_banner();
  } else {
    clear_has_banner();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.banner)
}

// optional .protocol.sohuadx.Request.Impression.Video video = 5;
inline bool Request_Impression::has_video() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request_Impression::set_has_video() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request_Impression::clear_has_video() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request_Impression::clear_video() {
  if (video_ != NULL) video_->::protocol::sohuadx::Request_Impression_Video::Clear();
  clear_has_video();
}
inline const ::protocol::sohuadx::Request_Impression_Video& Request_Impression::video() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.video)
  return video_ != NULL ? *video_ : *default_instance_->video_;
}
inline ::protocol::sohuadx::Request_Impression_Video* Request_Impression::mutable_video() {
  set_has_video();
  if (video_ == NULL) {
    video_ = new ::protocol::sohuadx::Request_Impression_Video;
  }
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.video)
  return video_;
}
inline ::protocol::sohuadx::Request_Impression_Video* Request_Impression::release_video() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.video)
  clear_has_video();
  ::protocol::sohuadx::Request_Impression_Video* temp = video_;
  video_ = NULL;
  return temp;
}
inline void Request_Impression::set_allocated_video(::protocol::sohuadx::Request_Impression_Video* video) {
  delete video_;
  video_ = video;
  if (video) {
    set_has_video();
  } else {
    clear_has_video();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.video)
}

// optional .protocol.sohuadx.Request.Impression.ScreenLocation screenLocation = 6;
inline bool Request_Impression::has_screenlocation() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request_Impression::set_has_screenlocation() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request_Impression::clear_has_screenlocation() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request_Impression::clear_screenlocation() {
  screenlocation_ = 0;
  clear_has_screenlocation();
}
inline ::protocol::sohuadx::Request_Impression_ScreenLocation Request_Impression::screenlocation() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.screenLocation)
  return static_cast< ::protocol::sohuadx::Request_Impression_ScreenLocation >(screenlocation_);
}
inline void Request_Impression::set_screenlocation(::protocol::sohuadx::Request_Impression_ScreenLocation value) {
  assert(::protocol::sohuadx::Request_Impression_ScreenLocation_IsValid(value));
  set_has_screenlocation();
  screenlocation_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.screenLocation)
}

// optional bool isPreferredDeals = 7;
inline bool Request_Impression::has_ispreferreddeals() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Request_Impression::set_has_ispreferreddeals() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Request_Impression::clear_has_ispreferreddeals() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Request_Impression::clear_ispreferreddeals() {
  ispreferreddeals_ = false;
  clear_has_ispreferreddeals();
}
inline bool Request_Impression::ispreferreddeals() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.isPreferredDeals)
  return ispreferreddeals_;
}
inline void Request_Impression::set_ispreferreddeals(bool value) {
  set_has_ispreferreddeals();
  ispreferreddeals_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.isPreferredDeals)
}

// optional string campaignId = 8;
inline bool Request_Impression::has_campaignid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Request_Impression::set_has_campaignid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Request_Impression::clear_has_campaignid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Request_Impression::clear_campaignid() {
  campaignid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_campaignid();
}
inline const ::std::string& Request_Impression::campaignid() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.campaignId)
  return campaignid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_campaignid(const ::std::string& value) {
  set_has_campaignid();
  campaignid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.campaignId)
}
inline void Request_Impression::set_campaignid(const char* value) {
  set_has_campaignid();
  campaignid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.campaignId)
}
inline void Request_Impression::set_campaignid(const char* value, size_t size) {
  set_has_campaignid();
  campaignid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.campaignId)
}
inline ::std::string* Request_Impression::mutable_campaignid() {
  set_has_campaignid();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.campaignId)
  return campaignid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Impression::release_campaignid() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.campaignId)
  clear_has_campaignid();
  return campaignid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_allocated_campaignid(::std::string* campaignid) {
  if (campaignid != NULL) {
    set_has_campaignid();
  } else {
    clear_has_campaignid();
  }
  campaignid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), campaignid);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.campaignId)
}

// optional string pageurl = 9;
inline bool Request_Impression::has_pageurl() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Request_Impression::set_has_pageurl() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Request_Impression::clear_has_pageurl() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Request_Impression::clear_pageurl() {
  pageurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pageurl();
}
inline const ::std::string& Request_Impression::pageurl() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.pageurl)
  return pageurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_pageurl(const ::std::string& value) {
  set_has_pageurl();
  pageurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.pageurl)
}
inline void Request_Impression::set_pageurl(const char* value) {
  set_has_pageurl();
  pageurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.pageurl)
}
inline void Request_Impression::set_pageurl(const char* value, size_t size) {
  set_has_pageurl();
  pageurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.pageurl)
}
inline ::std::string* Request_Impression::mutable_pageurl() {
  set_has_pageurl();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.pageurl)
  return pageurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Impression::release_pageurl() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.pageurl)
  clear_has_pageurl();
  return pageurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_allocated_pageurl(::std::string* pageurl) {
  if (pageurl != NULL) {
    set_has_pageurl();
  } else {
    clear_has_pageurl();
  }
  pageurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pageurl);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.pageurl)
}

// repeated string category = 10;
inline int Request_Impression::category_size() const {
  return category_.size();
}
inline void Request_Impression::clear_category() {
  category_.Clear();
}
inline const ::std::string& Request_Impression::category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.category)
  return category_.Get(index);
}
inline ::std::string* Request_Impression::mutable_category(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.category)
  return category_.Mutable(index);
}
inline void Request_Impression::set_category(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.category)
  category_.Mutable(index)->assign(value);
}
inline void Request_Impression::set_category(int index, const char* value) {
  category_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.category)
}
inline void Request_Impression::set_category(int index, const char* value, size_t size) {
  category_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.category)
}
inline ::std::string* Request_Impression::add_category() {
  // @@protoc_insertion_point(field_add_mutable:protocol.sohuadx.Request.Impression.category)
  return category_.Add();
}
inline void Request_Impression::add_category(const ::std::string& value) {
  category_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.sohuadx.Request.Impression.category)
}
inline void Request_Impression::add_category(const char* value) {
  category_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.sohuadx.Request.Impression.category)
}
inline void Request_Impression::add_category(const char* value, size_t size) {
  category_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.sohuadx.Request.Impression.category)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request_Impression::category() const {
  // @@protoc_insertion_point(field_list:protocol.sohuadx.Request.Impression.category)
  return category_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Request_Impression::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.sohuadx.Request.Impression.category)
  return &category_;
}

// optional string title = 11;
inline bool Request_Impression::has_title() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Request_Impression::set_has_title() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Request_Impression::clear_has_title() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Request_Impression::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& Request_Impression::title() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.title)
}
inline void Request_Impression::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.title)
}
inline void Request_Impression::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.title)
}
inline ::std::string* Request_Impression::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Impression::release_title() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.title)
}

// optional string lineId = 12;
inline bool Request_Impression::has_lineid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Request_Impression::set_has_lineid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Request_Impression::clear_has_lineid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Request_Impression::clear_lineid() {
  lineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lineid();
}
inline const ::std::string& Request_Impression::lineid() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.lineId)
  return lineid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_lineid(const ::std::string& value) {
  set_has_lineid();
  lineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.lineId)
}
inline void Request_Impression::set_lineid(const char* value) {
  set_has_lineid();
  lineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.lineId)
}
inline void Request_Impression::set_lineid(const char* value, size_t size) {
  set_has_lineid();
  lineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.lineId)
}
inline ::std::string* Request_Impression::mutable_lineid() {
  set_has_lineid();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.lineId)
  return lineid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Impression::release_lineid() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.lineId)
  clear_has_lineid();
  return lineid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_allocated_lineid(::std::string* lineid) {
  if (lineid != NULL) {
    set_has_lineid();
  } else {
    clear_has_lineid();
  }
  lineid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lineid);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.lineId)
}

// repeated string acceptAdvertisingType = 13;
inline int Request_Impression::acceptadvertisingtype_size() const {
  return acceptadvertisingtype_.size();
}
inline void Request_Impression::clear_acceptadvertisingtype() {
  acceptadvertisingtype_.Clear();
}
inline const ::std::string& Request_Impression::acceptadvertisingtype(int index) const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.acceptAdvertisingType)
  return acceptadvertisingtype_.Get(index);
}
inline ::std::string* Request_Impression::mutable_acceptadvertisingtype(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.acceptAdvertisingType)
  return acceptadvertisingtype_.Mutable(index);
}
inline void Request_Impression::set_acceptadvertisingtype(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.acceptAdvertisingType)
  acceptadvertisingtype_.Mutable(index)->assign(value);
}
inline void Request_Impression::set_acceptadvertisingtype(int index, const char* value) {
  acceptadvertisingtype_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.acceptAdvertisingType)
}
inline void Request_Impression::set_acceptadvertisingtype(int index, const char* value, size_t size) {
  acceptadvertisingtype_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.acceptAdvertisingType)
}
inline ::std::string* Request_Impression::add_acceptadvertisingtype() {
  // @@protoc_insertion_point(field_add_mutable:protocol.sohuadx.Request.Impression.acceptAdvertisingType)
  return acceptadvertisingtype_.Add();
}
inline void Request_Impression::add_acceptadvertisingtype(const ::std::string& value) {
  acceptadvertisingtype_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.sohuadx.Request.Impression.acceptAdvertisingType)
}
inline void Request_Impression::add_acceptadvertisingtype(const char* value) {
  acceptadvertisingtype_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.sohuadx.Request.Impression.acceptAdvertisingType)
}
inline void Request_Impression::add_acceptadvertisingtype(const char* value, size_t size) {
  acceptadvertisingtype_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.sohuadx.Request.Impression.acceptAdvertisingType)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request_Impression::acceptadvertisingtype() const {
  // @@protoc_insertion_point(field_list:protocol.sohuadx.Request.Impression.acceptAdvertisingType)
  return acceptadvertisingtype_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Request_Impression::mutable_acceptadvertisingtype() {
  // @@protoc_insertion_point(field_mutable_list:protocol.sohuadx.Request.Impression.acceptAdvertisingType)
  return &acceptadvertisingtype_;
}

// optional string tradingType = 14;
inline bool Request_Impression::has_tradingtype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Request_Impression::set_has_tradingtype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Request_Impression::clear_has_tradingtype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Request_Impression::clear_tradingtype() {
  tradingtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tradingtype();
}
inline const ::std::string& Request_Impression::tradingtype() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Impression.tradingType)
  return tradingtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_tradingtype(const ::std::string& value) {
  set_has_tradingtype();
  tradingtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Impression.tradingType)
}
inline void Request_Impression::set_tradingtype(const char* value) {
  set_has_tradingtype();
  tradingtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Impression.tradingType)
}
inline void Request_Impression::set_tradingtype(const char* value, size_t size) {
  set_has_tradingtype();
  tradingtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Impression.tradingType)
}
inline ::std::string* Request_Impression::mutable_tradingtype() {
  set_has_tradingtype();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Impression.tradingType)
  return tradingtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Impression::release_tradingtype() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Impression.tradingType)
  clear_has_tradingtype();
  return tradingtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Impression::set_allocated_tradingtype(::std::string* tradingtype) {
  if (tradingtype != NULL) {
    set_has_tradingtype();
  } else {
    clear_has_tradingtype();
  }
  tradingtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradingtype);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Impression.tradingType)
}

// -------------------------------------------------------------------

// Request_Site

// optional string name = 1;
inline bool Request_Site::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_Site::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_Site::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_Site::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Request_Site::name() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Site.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Site::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Site.name)
}
inline void Request_Site::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Site.name)
}
inline void Request_Site::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Site.name)
}
inline ::std::string* Request_Site::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Site.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Site::release_name() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Site.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Site::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Site.name)
}

// optional string page = 2;
inline bool Request_Site::has_page() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_Site::set_has_page() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_Site::clear_has_page() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_Site::clear_page() {
  page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_page();
}
inline const ::std::string& Request_Site::page() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Site.page)
  return page_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Site::set_page(const ::std::string& value) {
  set_has_page();
  page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Site.page)
}
inline void Request_Site::set_page(const char* value) {
  set_has_page();
  page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Site.page)
}
inline void Request_Site::set_page(const char* value, size_t size) {
  set_has_page();
  page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Site.page)
}
inline ::std::string* Request_Site::mutable_page() {
  set_has_page();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Site.page)
  return page_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Site::release_page() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Site.page)
  clear_has_page();
  return page_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Site::set_allocated_page(::std::string* page) {
  if (page != NULL) {
    set_has_page();
  } else {
    clear_has_page();
  }
  page_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Site.page)
}

// optional int64 category = 3;
inline bool Request_Site::has_category() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_Site::set_has_category() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_Site::clear_has_category() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_Site::clear_category() {
  category_ = GOOGLE_LONGLONG(0);
  clear_has_category();
}
inline ::google::protobuf::int64 Request_Site::category() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Site.category)
  return category_;
}
inline void Request_Site::set_category(::google::protobuf::int64 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Site.category)
}

// optional string ref = 4;
inline bool Request_Site::has_ref() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request_Site::set_has_ref() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request_Site::clear_has_ref() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request_Site::clear_ref() {
  ref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ref();
}
inline const ::std::string& Request_Site::ref() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Site.ref)
  return ref_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Site::set_ref(const ::std::string& value) {
  set_has_ref();
  ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Site.ref)
}
inline void Request_Site::set_ref(const char* value) {
  set_has_ref();
  ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Site.ref)
}
inline void Request_Site::set_ref(const char* value, size_t size) {
  set_has_ref();
  ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Site.ref)
}
inline ::std::string* Request_Site::mutable_ref() {
  set_has_ref();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Site.ref)
  return ref_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Site::release_ref() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Site.ref)
  clear_has_ref();
  return ref_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Site::set_allocated_ref(::std::string* ref) {
  if (ref != NULL) {
    set_has_ref();
  } else {
    clear_has_ref();
  }
  ref_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ref);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Site.ref)
}

// -------------------------------------------------------------------

// Request_Device

// optional string type = 1;
inline bool Request_Device::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_Device::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_Device::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_Device::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& Request_Device::type() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.type)
}
inline void Request_Device::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.type)
}
inline void Request_Device::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.type)
}
inline ::std::string* Request_Device::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_type() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.type)
}

// optional string ip = 2;
inline bool Request_Device::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_Device::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_Device::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_Device::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& Request_Device::ip() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.ip)
}
inline void Request_Device::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.ip)
}
inline void Request_Device::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.ip)
}
inline ::std::string* Request_Device::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_ip() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.ip)
}

// optional string ua = 3;
inline bool Request_Device::has_ua() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_Device::set_has_ua() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_Device::clear_has_ua() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_Device::clear_ua() {
  ua_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ua();
}
inline const ::std::string& Request_Device::ua() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.ua)
  return ua_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_ua(const ::std::string& value) {
  set_has_ua();
  ua_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.ua)
}
inline void Request_Device::set_ua(const char* value) {
  set_has_ua();
  ua_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.ua)
}
inline void Request_Device::set_ua(const char* value, size_t size) {
  set_has_ua();
  ua_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.ua)
}
inline ::std::string* Request_Device::mutable_ua() {
  set_has_ua();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.ua)
  return ua_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_ua() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.ua)
  clear_has_ua();
  return ua_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_ua(::std::string* ua) {
  if (ua != NULL) {
    set_has_ua();
  } else {
    clear_has_ua();
  }
  ua_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ua);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.ua)
}

// optional string carrier = 4;
inline bool Request_Device::has_carrier() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request_Device::set_has_carrier() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request_Device::clear_has_carrier() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request_Device::clear_carrier() {
  carrier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_carrier();
}
inline const ::std::string& Request_Device::carrier() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.carrier)
  return carrier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_carrier(const ::std::string& value) {
  set_has_carrier();
  carrier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.carrier)
}
inline void Request_Device::set_carrier(const char* value) {
  set_has_carrier();
  carrier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.carrier)
}
inline void Request_Device::set_carrier(const char* value, size_t size) {
  set_has_carrier();
  carrier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.carrier)
}
inline ::std::string* Request_Device::mutable_carrier() {
  set_has_carrier();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.carrier)
  return carrier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_carrier() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.carrier)
  clear_has_carrier();
  return carrier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_carrier(::std::string* carrier) {
  if (carrier != NULL) {
    set_has_carrier();
  } else {
    clear_has_carrier();
  }
  carrier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), carrier);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.carrier)
}

// optional string netType = 5;
inline bool Request_Device::has_nettype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request_Device::set_has_nettype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request_Device::clear_has_nettype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request_Device::clear_nettype() {
  nettype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nettype();
}
inline const ::std::string& Request_Device::nettype() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.netType)
  return nettype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_nettype(const ::std::string& value) {
  set_has_nettype();
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.netType)
}
inline void Request_Device::set_nettype(const char* value) {
  set_has_nettype();
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.netType)
}
inline void Request_Device::set_nettype(const char* value, size_t size) {
  set_has_nettype();
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.netType)
}
inline ::std::string* Request_Device::mutable_nettype() {
  set_has_nettype();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.netType)
  return nettype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_nettype() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.netType)
  clear_has_nettype();
  return nettype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_nettype(::std::string* nettype) {
  if (nettype != NULL) {
    set_has_nettype();
  } else {
    clear_has_nettype();
  }
  nettype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nettype);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.netType)
}

// optional string mobileType = 6;
inline bool Request_Device::has_mobiletype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request_Device::set_has_mobiletype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request_Device::clear_has_mobiletype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request_Device::clear_mobiletype() {
  mobiletype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mobiletype();
}
inline const ::std::string& Request_Device::mobiletype() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.mobileType)
  return mobiletype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_mobiletype(const ::std::string& value) {
  set_has_mobiletype();
  mobiletype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.mobileType)
}
inline void Request_Device::set_mobiletype(const char* value) {
  set_has_mobiletype();
  mobiletype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.mobileType)
}
inline void Request_Device::set_mobiletype(const char* value, size_t size) {
  set_has_mobiletype();
  mobiletype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.mobileType)
}
inline ::std::string* Request_Device::mutable_mobiletype() {
  set_has_mobiletype();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.mobileType)
  return mobiletype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_mobiletype() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.mobileType)
  clear_has_mobiletype();
  return mobiletype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_mobiletype(::std::string* mobiletype) {
  if (mobiletype != NULL) {
    set_has_mobiletype();
  } else {
    clear_has_mobiletype();
  }
  mobiletype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobiletype);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.mobileType)
}

// optional uint32 screenWidth = 7;
inline bool Request_Device::has_screenwidth() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Request_Device::set_has_screenwidth() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Request_Device::clear_has_screenwidth() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Request_Device::clear_screenwidth() {
  screenwidth_ = 0u;
  clear_has_screenwidth();
}
inline ::google::protobuf::uint32 Request_Device::screenwidth() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.screenWidth)
  return screenwidth_;
}
inline void Request_Device::set_screenwidth(::google::protobuf::uint32 value) {
  set_has_screenwidth();
  screenwidth_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.screenWidth)
}

// optional uint32 screenHeight = 8;
inline bool Request_Device::has_screenheight() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Request_Device::set_has_screenheight() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Request_Device::clear_has_screenheight() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Request_Device::clear_screenheight() {
  screenheight_ = 0u;
  clear_has_screenheight();
}
inline ::google::protobuf::uint32 Request_Device::screenheight() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.screenHeight)
  return screenheight_;
}
inline void Request_Device::set_screenheight(::google::protobuf::uint32 value) {
  set_has_screenheight();
  screenheight_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.screenHeight)
}

// optional string imei = 9;
inline bool Request_Device::has_imei() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Request_Device::set_has_imei() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Request_Device::clear_has_imei() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Request_Device::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& Request_Device::imei() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.imei)
  return imei_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.imei)
}
inline void Request_Device::set_imei(const char* value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.imei)
}
inline void Request_Device::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.imei)
}
inline ::std::string* Request_Device::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_imei() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.imei)
}

// optional string imsi = 10;
inline bool Request_Device::has_imsi() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Request_Device::set_has_imsi() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Request_Device::clear_has_imsi() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Request_Device::clear_imsi() {
  imsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imsi();
}
inline const ::std::string& Request_Device::imsi() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.imsi)
  return imsi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_imsi(const ::std::string& value) {
  set_has_imsi();
  imsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.imsi)
}
inline void Request_Device::set_imsi(const char* value) {
  set_has_imsi();
  imsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.imsi)
}
inline void Request_Device::set_imsi(const char* value, size_t size) {
  set_has_imsi();
  imsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.imsi)
}
inline ::std::string* Request_Device::mutable_imsi() {
  set_has_imsi();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.imsi)
  return imsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_imsi() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.imsi)
  clear_has_imsi();
  return imsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_imsi(::std::string* imsi) {
  if (imsi != NULL) {
    set_has_imsi();
  } else {
    clear_has_imsi();
  }
  imsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imsi);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.imsi)
}

// optional string mac = 11;
inline bool Request_Device::has_mac() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Request_Device::set_has_mac() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Request_Device::clear_has_mac() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Request_Device::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mac();
}
inline const ::std::string& Request_Device::mac() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.mac)
  return mac_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_mac(const ::std::string& value) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.mac)
}
inline void Request_Device::set_mac(const char* value) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.mac)
}
inline void Request_Device::set_mac(const char* value, size_t size) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.mac)
}
inline ::std::string* Request_Device::mutable_mac() {
  set_has_mac();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_mac() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.mac)
  clear_has_mac();
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    set_has_mac();
  } else {
    clear_has_mac();
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.mac)
}

// optional string idfa = 12;
inline bool Request_Device::has_idfa() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Request_Device::set_has_idfa() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Request_Device::clear_has_idfa() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Request_Device::clear_idfa() {
  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idfa();
}
inline const ::std::string& Request_Device::idfa() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.idfa)
  return idfa_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_idfa(const ::std::string& value) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.idfa)
}
inline void Request_Device::set_idfa(const char* value) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.idfa)
}
inline void Request_Device::set_idfa(const char* value, size_t size) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.idfa)
}
inline ::std::string* Request_Device::mutable_idfa() {
  set_has_idfa();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.idfa)
  return idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_idfa() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.idfa)
  clear_has_idfa();
  return idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_idfa(::std::string* idfa) {
  if (idfa != NULL) {
    set_has_idfa();
  } else {
    clear_has_idfa();
  }
  idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idfa);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.idfa)
}

// optional string androidID = 13;
inline bool Request_Device::has_androidid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Request_Device::set_has_androidid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Request_Device::clear_has_androidid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Request_Device::clear_androidid() {
  androidid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidid();
}
inline const ::std::string& Request_Device::androidid() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.androidID)
  return androidid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_androidid(const ::std::string& value) {
  set_has_androidid();
  androidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.androidID)
}
inline void Request_Device::set_androidid(const char* value) {
  set_has_androidid();
  androidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.androidID)
}
inline void Request_Device::set_androidid(const char* value, size_t size) {
  set_has_androidid();
  androidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.androidID)
}
inline ::std::string* Request_Device::mutable_androidid() {
  set_has_androidid();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.androidID)
  return androidid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_androidid() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.androidID)
  clear_has_androidid();
  return androidid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_androidid(::std::string* androidid) {
  if (androidid != NULL) {
    set_has_androidid();
  } else {
    clear_has_androidid();
  }
  androidid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidid);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.androidID)
}

// optional string openUDID = 14;
inline bool Request_Device::has_openudid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Request_Device::set_has_openudid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Request_Device::clear_has_openudid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Request_Device::clear_openudid() {
  openudid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openudid();
}
inline const ::std::string& Request_Device::openudid() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.Device.openUDID)
  return openudid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_openudid(const ::std::string& value) {
  set_has_openudid();
  openudid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.Device.openUDID)
}
inline void Request_Device::set_openudid(const char* value) {
  set_has_openudid();
  openudid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.Device.openUDID)
}
inline void Request_Device::set_openudid(const char* value, size_t size) {
  set_has_openudid();
  openudid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.Device.openUDID)
}
inline ::std::string* Request_Device::mutable_openudid() {
  set_has_openudid();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.Device.openUDID)
  return openudid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Device::release_openudid() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.Device.openUDID)
  clear_has_openudid();
  return openudid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Device::set_allocated_openudid(::std::string* openudid) {
  if (openudid != NULL) {
    set_has_openudid();
  } else {
    clear_has_openudid();
  }
  openudid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openudid);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.Device.openUDID)
}

// -------------------------------------------------------------------

// Request_User

// optional string suid = 1;
inline bool Request_User::has_suid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_User::set_has_suid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_User::clear_has_suid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_User::clear_suid() {
  suid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_suid();
}
inline const ::std::string& Request_User::suid() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.User.suid)
  return suid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_User::set_suid(const ::std::string& value) {
  set_has_suid();
  suid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.User.suid)
}
inline void Request_User::set_suid(const char* value) {
  set_has_suid();
  suid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.User.suid)
}
inline void Request_User::set_suid(const char* value, size_t size) {
  set_has_suid();
  suid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.User.suid)
}
inline ::std::string* Request_User::mutable_suid() {
  set_has_suid();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.User.suid)
  return suid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_User::release_suid() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.User.suid)
  clear_has_suid();
  return suid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_User::set_allocated_suid(::std::string* suid) {
  if (suid != NULL) {
    set_has_suid();
  } else {
    clear_has_suid();
  }
  suid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suid);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.User.suid)
}

// optional uint32 version = 2;
inline bool Request_User::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_User::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_User::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_User::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 Request_User::version() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.User.version)
  return version_;
}
inline void Request_User::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.User.version)
}

// repeated int64 category = 3;
inline int Request_User::category_size() const {
  return category_.size();
}
inline void Request_User::clear_category() {
  category_.Clear();
}
inline ::google::protobuf::int64 Request_User::category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.User.category)
  return category_.Get(index);
}
inline void Request_User::set_category(int index, ::google::protobuf::int64 value) {
  category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.User.category)
}
inline void Request_User::add_category(::google::protobuf::int64 value) {
  category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.sohuadx.Request.User.category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Request_User::category() const {
  // @@protoc_insertion_point(field_list:protocol.sohuadx.Request.User.category)
  return category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Request_User::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.sohuadx.Request.User.category)
  return &category_;
}

// repeated string searchKeyWords = 4;
inline int Request_User::searchkeywords_size() const {
  return searchkeywords_.size();
}
inline void Request_User::clear_searchkeywords() {
  searchkeywords_.Clear();
}
inline const ::std::string& Request_User::searchkeywords(int index) const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.User.searchKeyWords)
  return searchkeywords_.Get(index);
}
inline ::std::string* Request_User::mutable_searchkeywords(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.User.searchKeyWords)
  return searchkeywords_.Mutable(index);
}
inline void Request_User::set_searchkeywords(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.User.searchKeyWords)
  searchkeywords_.Mutable(index)->assign(value);
}
inline void Request_User::set_searchkeywords(int index, const char* value) {
  searchkeywords_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.User.searchKeyWords)
}
inline void Request_User::set_searchkeywords(int index, const char* value, size_t size) {
  searchkeywords_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.User.searchKeyWords)
}
inline ::std::string* Request_User::add_searchkeywords() {
  // @@protoc_insertion_point(field_add_mutable:protocol.sohuadx.Request.User.searchKeyWords)
  return searchkeywords_.Add();
}
inline void Request_User::add_searchkeywords(const ::std::string& value) {
  searchkeywords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.sohuadx.Request.User.searchKeyWords)
}
inline void Request_User::add_searchkeywords(const char* value) {
  searchkeywords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.sohuadx.Request.User.searchKeyWords)
}
inline void Request_User::add_searchkeywords(const char* value, size_t size) {
  searchkeywords_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.sohuadx.Request.User.searchKeyWords)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request_User::searchkeywords() const {
  // @@protoc_insertion_point(field_list:protocol.sohuadx.Request.User.searchKeyWords)
  return searchkeywords_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Request_User::mutable_searchkeywords() {
  // @@protoc_insertion_point(field_mutable_list:protocol.sohuadx.Request.User.searchKeyWords)
  return &searchkeywords_;
}

// optional string yyid = 5;
inline bool Request_User::has_yyid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request_User::set_has_yyid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request_User::clear_has_yyid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request_User::clear_yyid() {
  yyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_yyid();
}
inline const ::std::string& Request_User::yyid() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.User.yyid)
  return yyid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_User::set_yyid(const ::std::string& value) {
  set_has_yyid();
  yyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.User.yyid)
}
inline void Request_User::set_yyid(const char* value) {
  set_has_yyid();
  yyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.User.yyid)
}
inline void Request_User::set_yyid(const char* value, size_t size) {
  set_has_yyid();
  yyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.User.yyid)
}
inline ::std::string* Request_User::mutable_yyid() {
  set_has_yyid();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.User.yyid)
  return yyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_User::release_yyid() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.User.yyid)
  clear_has_yyid();
  return yyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_User::set_allocated_yyid(::std::string* yyid) {
  if (yyid != NULL) {
    set_has_yyid();
  } else {
    clear_has_yyid();
  }
  yyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), yyid);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.User.yyid)
}

// optional string fyid = 6;
inline bool Request_User::has_fyid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request_User::set_has_fyid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request_User::clear_has_fyid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request_User::clear_fyid() {
  fyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fyid();
}
inline const ::std::string& Request_User::fyid() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.User.fyid)
  return fyid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_User::set_fyid(const ::std::string& value) {
  set_has_fyid();
  fyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.User.fyid)
}
inline void Request_User::set_fyid(const char* value) {
  set_has_fyid();
  fyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.User.fyid)
}
inline void Request_User::set_fyid(const char* value, size_t size) {
  set_has_fyid();
  fyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.User.fyid)
}
inline ::std::string* Request_User::mutable_fyid() {
  set_has_fyid();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.User.fyid)
  return fyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_User::release_fyid() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.User.fyid)
  clear_has_fyid();
  return fyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_User::set_allocated_fyid(::std::string* fyid) {
  if (fyid != NULL) {
    set_has_fyid();
  } else {
    clear_has_fyid();
  }
  fyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fyid);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.User.fyid)
}

// -------------------------------------------------------------------

// Request

// required uint32 version = 1;
inline bool Request::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 Request::version() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.version)
  return version_;
}
inline void Request::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.version)
}

// required string bidid = 2;
inline bool Request::has_bidid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_bidid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_bidid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_bidid() {
  bidid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bidid();
}
inline const ::std::string& Request::bidid() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.bidid)
  return bidid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_bidid(const ::std::string& value) {
  set_has_bidid();
  bidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.bidid)
}
inline void Request::set_bidid(const char* value) {
  set_has_bidid();
  bidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.bidid)
}
inline void Request::set_bidid(const char* value, size_t size) {
  set_has_bidid();
  bidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.bidid)
}
inline ::std::string* Request::mutable_bidid() {
  set_has_bidid();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.bidid)
  return bidid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_bidid() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.bidid)
  clear_has_bidid();
  return bidid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_bidid(::std::string* bidid) {
  if (bidid != NULL) {
    set_has_bidid();
  } else {
    clear_has_bidid();
  }
  bidid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bidid);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.bidid)
}

// optional uint32 isTest = 3;
inline bool Request::has_istest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_istest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_istest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_istest() {
  istest_ = 0u;
  clear_has_istest();
}
inline ::google::protobuf::uint32 Request::istest() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.isTest)
  return istest_;
}
inline void Request::set_istest(::google::protobuf::uint32 value) {
  set_has_istest();
  istest_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.isTest)
}

// optional .protocol.sohuadx.Request.Site site = 4;
inline bool Request::has_site() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request::set_has_site() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request::clear_has_site() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request::clear_site() {
  if (site_ != NULL) site_->::protocol::sohuadx::Request_Site::Clear();
  clear_has_site();
}
inline const ::protocol::sohuadx::Request_Site& Request::site() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.site)
  return site_ != NULL ? *site_ : *default_instance_->site_;
}
inline ::protocol::sohuadx::Request_Site* Request::mutable_site() {
  set_has_site();
  if (site_ == NULL) {
    site_ = new ::protocol::sohuadx::Request_Site;
  }
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.site)
  return site_;
}
inline ::protocol::sohuadx::Request_Site* Request::release_site() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.site)
  clear_has_site();
  ::protocol::sohuadx::Request_Site* temp = site_;
  site_ = NULL;
  return temp;
}
inline void Request::set_allocated_site(::protocol::sohuadx::Request_Site* site) {
  delete site_;
  site_ = site;
  if (site) {
    set_has_site();
  } else {
    clear_has_site();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.site)
}

// optional .protocol.sohuadx.Request.Device device = 5;
inline bool Request::has_device() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request::set_has_device() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request::clear_has_device() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request::clear_device() {
  if (device_ != NULL) device_->::protocol::sohuadx::Request_Device::Clear();
  clear_has_device();
}
inline const ::protocol::sohuadx::Request_Device& Request::device() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.device)
  return device_ != NULL ? *device_ : *default_instance_->device_;
}
inline ::protocol::sohuadx::Request_Device* Request::mutable_device() {
  set_has_device();
  if (device_ == NULL) {
    device_ = new ::protocol::sohuadx::Request_Device;
  }
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.device)
  return device_;
}
inline ::protocol::sohuadx::Request_Device* Request::release_device() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.device)
  clear_has_device();
  ::protocol::sohuadx::Request_Device* temp = device_;
  device_ = NULL;
  return temp;
}
inline void Request::set_allocated_device(::protocol::sohuadx::Request_Device* device) {
  delete device_;
  device_ = device;
  if (device) {
    set_has_device();
  } else {
    clear_has_device();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.device)
}

// optional .protocol.sohuadx.Request.User user = 6;
inline bool Request::has_user() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request::set_has_user() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request::clear_has_user() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request::clear_user() {
  if (user_ != NULL) user_->::protocol::sohuadx::Request_User::Clear();
  clear_has_user();
}
inline const ::protocol::sohuadx::Request_User& Request::user() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::protocol::sohuadx::Request_User* Request::mutable_user() {
  set_has_user();
  if (user_ == NULL) {
    user_ = new ::protocol::sohuadx::Request_User;
  }
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.user)
  return user_;
}
inline ::protocol::sohuadx::Request_User* Request::release_user() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Request.user)
  clear_has_user();
  ::protocol::sohuadx::Request_User* temp = user_;
  user_ = NULL;
  return temp;
}
inline void Request::set_allocated_user(::protocol::sohuadx::Request_User* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Request.user)
}

// repeated .protocol.sohuadx.Request.Impression impression = 7;
inline int Request::impression_size() const {
  return impression_.size();
}
inline void Request::clear_impression() {
  impression_.Clear();
}
inline const ::protocol::sohuadx::Request_Impression& Request::impression(int index) const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.impression)
  return impression_.Get(index);
}
inline ::protocol::sohuadx::Request_Impression* Request::mutable_impression(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.impression)
  return impression_.Mutable(index);
}
inline ::protocol::sohuadx::Request_Impression* Request::add_impression() {
  // @@protoc_insertion_point(field_add:protocol.sohuadx.Request.impression)
  return impression_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Request_Impression >*
Request::mutable_impression() {
  // @@protoc_insertion_point(field_mutable_list:protocol.sohuadx.Request.impression)
  return &impression_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Request_Impression >&
Request::impression() const {
  // @@protoc_insertion_point(field_list:protocol.sohuadx.Request.impression)
  return impression_;
}

// repeated string excludeAdCategory = 8;
inline int Request::excludeadcategory_size() const {
  return excludeadcategory_.size();
}
inline void Request::clear_excludeadcategory() {
  excludeadcategory_.Clear();
}
inline const ::std::string& Request::excludeadcategory(int index) const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Request.excludeAdCategory)
  return excludeadcategory_.Get(index);
}
inline ::std::string* Request::mutable_excludeadcategory(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Request.excludeAdCategory)
  return excludeadcategory_.Mutable(index);
}
inline void Request::set_excludeadcategory(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Request.excludeAdCategory)
  excludeadcategory_.Mutable(index)->assign(value);
}
inline void Request::set_excludeadcategory(int index, const char* value) {
  excludeadcategory_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Request.excludeAdCategory)
}
inline void Request::set_excludeadcategory(int index, const char* value, size_t size) {
  excludeadcategory_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Request.excludeAdCategory)
}
inline ::std::string* Request::add_excludeadcategory() {
  // @@protoc_insertion_point(field_add_mutable:protocol.sohuadx.Request.excludeAdCategory)
  return excludeadcategory_.Add();
}
inline void Request::add_excludeadcategory(const ::std::string& value) {
  excludeadcategory_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.sohuadx.Request.excludeAdCategory)
}
inline void Request::add_excludeadcategory(const char* value) {
  excludeadcategory_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.sohuadx.Request.excludeAdCategory)
}
inline void Request::add_excludeadcategory(const char* value, size_t size) {
  excludeadcategory_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.sohuadx.Request.excludeAdCategory)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request::excludeadcategory() const {
  // @@protoc_insertion_point(field_list:protocol.sohuadx.Request.excludeAdCategory)
  return excludeadcategory_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Request::mutable_excludeadcategory() {
  // @@protoc_insertion_point(field_mutable_list:protocol.sohuadx.Request.excludeAdCategory)
  return &excludeadcategory_;
}

// -------------------------------------------------------------------

// Response_Bid

// required uint32 price = 1;
inline bool Response_Bid::has_price() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Bid::set_has_price() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Bid::clear_has_price() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Bid::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 Response_Bid::price() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.Bid.price)
  return price_;
}
inline void Response_Bid::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.Bid.price)
}

// required string adurl = 2;
inline bool Response_Bid::has_adurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Bid::set_has_adurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Bid::clear_has_adurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Bid::clear_adurl() {
  adurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_adurl();
}
inline const ::std::string& Response_Bid::adurl() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.Bid.adurl)
  return adurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_adurl(const ::std::string& value) {
  set_has_adurl();
  adurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.Bid.adurl)
}
inline void Response_Bid::set_adurl(const char* value) {
  set_has_adurl();
  adurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Response.Bid.adurl)
}
inline void Response_Bid::set_adurl(const char* value, size_t size) {
  set_has_adurl();
  adurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Response.Bid.adurl)
}
inline ::std::string* Response_Bid::mutable_adurl() {
  set_has_adurl();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Response.Bid.adurl)
  return adurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Bid::release_adurl() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Response.Bid.adurl)
  clear_has_adurl();
  return adurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_allocated_adurl(::std::string* adurl) {
  if (adurl != NULL) {
    set_has_adurl();
  } else {
    clear_has_adurl();
  }
  adurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), adurl);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Response.Bid.adurl)
}

// optional string ext = 3;
inline bool Response_Bid::has_ext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response_Bid::set_has_ext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response_Bid::clear_has_ext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response_Bid::clear_ext() {
  ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ext();
}
inline const ::std::string& Response_Bid::ext() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.Bid.ext)
  return ext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_ext(const ::std::string& value) {
  set_has_ext();
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.Bid.ext)
}
inline void Response_Bid::set_ext(const char* value) {
  set_has_ext();
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Response.Bid.ext)
}
inline void Response_Bid::set_ext(const char* value, size_t size) {
  set_has_ext();
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Response.Bid.ext)
}
inline ::std::string* Response_Bid::mutable_ext() {
  set_has_ext();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Response.Bid.ext)
  return ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Bid::release_ext() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Response.Bid.ext)
  clear_has_ext();
  return ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_allocated_ext(::std::string* ext) {
  if (ext != NULL) {
    set_has_ext();
  } else {
    clear_has_ext();
  }
  ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ext);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Response.Bid.ext)
}

// optional string clickPara = 4;
inline bool Response_Bid::has_clickpara() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response_Bid::set_has_clickpara() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response_Bid::clear_has_clickpara() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response_Bid::clear_clickpara() {
  clickpara_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clickpara();
}
inline const ::std::string& Response_Bid::clickpara() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.Bid.clickPara)
  return clickpara_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_clickpara(const ::std::string& value) {
  set_has_clickpara();
  clickpara_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.Bid.clickPara)
}
inline void Response_Bid::set_clickpara(const char* value) {
  set_has_clickpara();
  clickpara_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Response.Bid.clickPara)
}
inline void Response_Bid::set_clickpara(const char* value, size_t size) {
  set_has_clickpara();
  clickpara_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Response.Bid.clickPara)
}
inline ::std::string* Response_Bid::mutable_clickpara() {
  set_has_clickpara();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Response.Bid.clickPara)
  return clickpara_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Bid::release_clickpara() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Response.Bid.clickPara)
  clear_has_clickpara();
  return clickpara_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_allocated_clickpara(::std::string* clickpara) {
  if (clickpara != NULL) {
    set_has_clickpara();
  } else {
    clear_has_clickpara();
  }
  clickpara_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clickpara);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Response.Bid.clickPara)
}

// optional string displayPara = 5;
inline bool Response_Bid::has_displaypara() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Response_Bid::set_has_displaypara() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Response_Bid::clear_has_displaypara() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Response_Bid::clear_displaypara() {
  displaypara_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_displaypara();
}
inline const ::std::string& Response_Bid::displaypara() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.Bid.displayPara)
  return displaypara_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_displaypara(const ::std::string& value) {
  set_has_displaypara();
  displaypara_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.Bid.displayPara)
}
inline void Response_Bid::set_displaypara(const char* value) {
  set_has_displaypara();
  displaypara_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Response.Bid.displayPara)
}
inline void Response_Bid::set_displaypara(const char* value, size_t size) {
  set_has_displaypara();
  displaypara_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Response.Bid.displayPara)
}
inline ::std::string* Response_Bid::mutable_displaypara() {
  set_has_displaypara();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Response.Bid.displayPara)
  return displaypara_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Bid::release_displaypara() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Response.Bid.displayPara)
  clear_has_displaypara();
  return displaypara_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_allocated_displaypara(::std::string* displaypara) {
  if (displaypara != NULL) {
    set_has_displaypara();
  } else {
    clear_has_displaypara();
  }
  displaypara_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), displaypara);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Response.Bid.displayPara)
}

// optional string adPara = 6;
inline bool Response_Bid::has_adpara() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Response_Bid::set_has_adpara() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Response_Bid::clear_has_adpara() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Response_Bid::clear_adpara() {
  adpara_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_adpara();
}
inline const ::std::string& Response_Bid::adpara() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.Bid.adPara)
  return adpara_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_adpara(const ::std::string& value) {
  set_has_adpara();
  adpara_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.Bid.adPara)
}
inline void Response_Bid::set_adpara(const char* value) {
  set_has_adpara();
  adpara_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Response.Bid.adPara)
}
inline void Response_Bid::set_adpara(const char* value, size_t size) {
  set_has_adpara();
  adpara_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Response.Bid.adPara)
}
inline ::std::string* Response_Bid::mutable_adpara() {
  set_has_adpara();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Response.Bid.adPara)
  return adpara_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Bid::release_adpara() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Response.Bid.adPara)
  clear_has_adpara();
  return adpara_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_allocated_adpara(::std::string* adpara) {
  if (adpara != NULL) {
    set_has_adpara();
  } else {
    clear_has_adpara();
  }
  adpara_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), adpara);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Response.Bid.adPara)
}

// optional string displayMonitor = 7;
inline bool Response_Bid::has_displaymonitor() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Response_Bid::set_has_displaymonitor() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Response_Bid::clear_has_displaymonitor() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Response_Bid::clear_displaymonitor() {
  displaymonitor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_displaymonitor();
}
inline const ::std::string& Response_Bid::displaymonitor() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.Bid.displayMonitor)
  return displaymonitor_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_displaymonitor(const ::std::string& value) {
  set_has_displaymonitor();
  displaymonitor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.Bid.displayMonitor)
}
inline void Response_Bid::set_displaymonitor(const char* value) {
  set_has_displaymonitor();
  displaymonitor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Response.Bid.displayMonitor)
}
inline void Response_Bid::set_displaymonitor(const char* value, size_t size) {
  set_has_displaymonitor();
  displaymonitor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Response.Bid.displayMonitor)
}
inline ::std::string* Response_Bid::mutable_displaymonitor() {
  set_has_displaymonitor();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Response.Bid.displayMonitor)
  return displaymonitor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Bid::release_displaymonitor() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Response.Bid.displayMonitor)
  clear_has_displaymonitor();
  return displaymonitor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_allocated_displaymonitor(::std::string* displaymonitor) {
  if (displaymonitor != NULL) {
    set_has_displaymonitor();
  } else {
    clear_has_displaymonitor();
  }
  displaymonitor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), displaymonitor);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Response.Bid.displayMonitor)
}

// optional string clickMonitor = 8;
inline bool Response_Bid::has_clickmonitor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Response_Bid::set_has_clickmonitor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Response_Bid::clear_has_clickmonitor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Response_Bid::clear_clickmonitor() {
  clickmonitor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clickmonitor();
}
inline const ::std::string& Response_Bid::clickmonitor() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.Bid.clickMonitor)
  return clickmonitor_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_clickmonitor(const ::std::string& value) {
  set_has_clickmonitor();
  clickmonitor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.Bid.clickMonitor)
}
inline void Response_Bid::set_clickmonitor(const char* value) {
  set_has_clickmonitor();
  clickmonitor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Response.Bid.clickMonitor)
}
inline void Response_Bid::set_clickmonitor(const char* value, size_t size) {
  set_has_clickmonitor();
  clickmonitor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Response.Bid.clickMonitor)
}
inline ::std::string* Response_Bid::mutable_clickmonitor() {
  set_has_clickmonitor();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Response.Bid.clickMonitor)
  return clickmonitor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Bid::release_clickmonitor() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Response.Bid.clickMonitor)
  clear_has_clickmonitor();
  return clickmonitor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_allocated_clickmonitor(::std::string* clickmonitor) {
  if (clickmonitor != NULL) {
    set_has_clickmonitor();
  } else {
    clear_has_clickmonitor();
  }
  clickmonitor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clickmonitor);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Response.Bid.clickMonitor)
}

// optional string adm_url = 9;
inline bool Response_Bid::has_adm_url() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Response_Bid::set_has_adm_url() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Response_Bid::clear_has_adm_url() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Response_Bid::clear_adm_url() {
  adm_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_adm_url();
}
inline const ::std::string& Response_Bid::adm_url() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.Bid.adm_url)
  return adm_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_adm_url(const ::std::string& value) {
  set_has_adm_url();
  adm_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.Bid.adm_url)
}
inline void Response_Bid::set_adm_url(const char* value) {
  set_has_adm_url();
  adm_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Response.Bid.adm_url)
}
inline void Response_Bid::set_adm_url(const char* value, size_t size) {
  set_has_adm_url();
  adm_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Response.Bid.adm_url)
}
inline ::std::string* Response_Bid::mutable_adm_url() {
  set_has_adm_url();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Response.Bid.adm_url)
  return adm_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Bid::release_adm_url() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Response.Bid.adm_url)
  clear_has_adm_url();
  return adm_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Bid::set_allocated_adm_url(::std::string* adm_url) {
  if (adm_url != NULL) {
    set_has_adm_url();
  } else {
    clear_has_adm_url();
  }
  adm_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), adm_url);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Response.Bid.adm_url)
}

// -------------------------------------------------------------------

// Response_SeatBid

// optional uint32 idx = 1;
inline bool Response_SeatBid::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_SeatBid::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_SeatBid::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_SeatBid::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 Response_SeatBid::idx() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.SeatBid.idx)
  return idx_;
}
inline void Response_SeatBid::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.SeatBid.idx)
}

// repeated .protocol.sohuadx.Response.Bid bid = 2;
inline int Response_SeatBid::bid_size() const {
  return bid_.size();
}
inline void Response_SeatBid::clear_bid() {
  bid_.Clear();
}
inline const ::protocol::sohuadx::Response_Bid& Response_SeatBid::bid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.SeatBid.bid)
  return bid_.Get(index);
}
inline ::protocol::sohuadx::Response_Bid* Response_SeatBid::mutable_bid(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Response.SeatBid.bid)
  return bid_.Mutable(index);
}
inline ::protocol::sohuadx::Response_Bid* Response_SeatBid::add_bid() {
  // @@protoc_insertion_point(field_add:protocol.sohuadx.Response.SeatBid.bid)
  return bid_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Response_Bid >*
Response_SeatBid::mutable_bid() {
  // @@protoc_insertion_point(field_mutable_list:protocol.sohuadx.Response.SeatBid.bid)
  return &bid_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Response_Bid >&
Response_SeatBid::bid() const {
  // @@protoc_insertion_point(field_list:protocol.sohuadx.Response.SeatBid.bid)
  return bid_;
}

// -------------------------------------------------------------------

// Response

// required uint32 version = 1;
inline bool Response::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 Response::version() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.version)
  return version_;
}
inline void Response::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.version)
}

// required string bidid = 2;
inline bool Response::has_bidid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_bidid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_bidid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_bidid() {
  bidid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bidid();
}
inline const ::std::string& Response::bidid() const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.bidid)
  return bidid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_bidid(const ::std::string& value) {
  set_has_bidid();
  bidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.sohuadx.Response.bidid)
}
inline void Response::set_bidid(const char* value) {
  set_has_bidid();
  bidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.sohuadx.Response.bidid)
}
inline void Response::set_bidid(const char* value, size_t size) {
  set_has_bidid();
  bidid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.sohuadx.Response.bidid)
}
inline ::std::string* Response::mutable_bidid() {
  set_has_bidid();
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Response.bidid)
  return bidid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_bidid() {
  // @@protoc_insertion_point(field_release:protocol.sohuadx.Response.bidid)
  clear_has_bidid();
  return bidid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_bidid(::std::string* bidid) {
  if (bidid != NULL) {
    set_has_bidid();
  } else {
    clear_has_bidid();
  }
  bidid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bidid);
  // @@protoc_insertion_point(field_set_allocated:protocol.sohuadx.Response.bidid)
}

// repeated .protocol.sohuadx.Response.SeatBid seatbid = 3;
inline int Response::seatbid_size() const {
  return seatbid_.size();
}
inline void Response::clear_seatbid() {
  seatbid_.Clear();
}
inline const ::protocol::sohuadx::Response_SeatBid& Response::seatbid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.sohuadx.Response.seatbid)
  return seatbid_.Get(index);
}
inline ::protocol::sohuadx::Response_SeatBid* Response::mutable_seatbid(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.sohuadx.Response.seatbid)
  return seatbid_.Mutable(index);
}
inline ::protocol::sohuadx::Response_SeatBid* Response::add_seatbid() {
  // @@protoc_insertion_point(field_add:protocol.sohuadx.Response.seatbid)
  return seatbid_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Response_SeatBid >*
Response::mutable_seatbid() {
  // @@protoc_insertion_point(field_mutable_list:protocol.sohuadx.Response.seatbid)
  return &seatbid_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::sohuadx::Response_SeatBid >&
Response::seatbid() const {
  // @@protoc_insertion_point(field_list:protocol.sohuadx.Response.seatbid)
  return seatbid_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sohuadx
}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protocol::sohuadx::Request_Impression_ScreenLocation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::sohuadx::Request_Impression_ScreenLocation>() {
  return ::protocol::sohuadx::Request_Impression_ScreenLocation_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sohuRTB_2eproto__INCLUDED
