// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: max-bidding.proto

#ifndef PROTOBUF_max_2dbidding_2eproto__INCLUDED
#define PROTOBUF_max_2dbidding_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {
namespace MAX {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_max_2dbidding_2eproto();
void protobuf_AssignDesc_max_2dbidding_2eproto();
void protobuf_ShutdownFile_max_2dbidding_2eproto();

class BidRequest;
class BidRequest_AdSlot;
class BidRequest_AdSlot_Deal;
class BidRequest_AdSlot_Native;
class BidRequest_ContentCategory;
class BidRequest_Mobile;
class BidRequest_Mobile_Device;
class BidRequest_UserCategory;
class BidResponse;
class BidResponse_Ads;
class NativeAd;
class NativeAd_AppAttr;
class NativeAd_Creative;
class NativeAd_Creative_Image;
class NativeAd_Creative_Link;

enum BidRequest_AdSlot_Deal_DealType {
  BidRequest_AdSlot_Deal_DealType_UNKNOWN_DEAL_TYPE = 0,
  BidRequest_AdSlot_Deal_DealType_PREFERRED_DEAL = 1,
  BidRequest_AdSlot_Deal_DealType_PRIVATE_AUCTION = 2,
  BidRequest_AdSlot_Deal_DealType_PRIVATE_DIRECT_BUY = 3
};
bool BidRequest_AdSlot_Deal_DealType_IsValid(int value);
const BidRequest_AdSlot_Deal_DealType BidRequest_AdSlot_Deal_DealType_DealType_MIN = BidRequest_AdSlot_Deal_DealType_UNKNOWN_DEAL_TYPE;
const BidRequest_AdSlot_Deal_DealType BidRequest_AdSlot_Deal_DealType_DealType_MAX = BidRequest_AdSlot_Deal_DealType_PRIVATE_DIRECT_BUY;
const int BidRequest_AdSlot_Deal_DealType_DealType_ARRAYSIZE = BidRequest_AdSlot_Deal_DealType_DealType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_Deal_DealType_descriptor();
inline const ::std::string& BidRequest_AdSlot_Deal_DealType_Name(BidRequest_AdSlot_Deal_DealType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_AdSlot_Deal_DealType_descriptor(), value);
}
inline bool BidRequest_AdSlot_Deal_DealType_Parse(
    const ::std::string& name, BidRequest_AdSlot_Deal_DealType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_AdSlot_Deal_DealType>(
    BidRequest_AdSlot_Deal_DealType_descriptor(), name, value);
}
enum BidRequest_AdSlot_SlotVisibility {
  BidRequest_AdSlot_SlotVisibility_NO_DETECTION = 0,
  BidRequest_AdSlot_SlotVisibility_ABOVE_THE_FOLD = 1,
  BidRequest_AdSlot_SlotVisibility_BELOW_THE_FOLD = 2
};
bool BidRequest_AdSlot_SlotVisibility_IsValid(int value);
const BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot_SlotVisibility_SlotVisibility_MIN = BidRequest_AdSlot_SlotVisibility_NO_DETECTION;
const BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot_SlotVisibility_SlotVisibility_MAX = BidRequest_AdSlot_SlotVisibility_BELOW_THE_FOLD;
const int BidRequest_AdSlot_SlotVisibility_SlotVisibility_ARRAYSIZE = BidRequest_AdSlot_SlotVisibility_SlotVisibility_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_SlotVisibility_descriptor();
inline const ::std::string& BidRequest_AdSlot_SlotVisibility_Name(BidRequest_AdSlot_SlotVisibility value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_AdSlot_SlotVisibility_descriptor(), value);
}
inline bool BidRequest_AdSlot_SlotVisibility_Parse(
    const ::std::string& name, BidRequest_AdSlot_SlotVisibility* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_AdSlot_SlotVisibility>(
    BidRequest_AdSlot_SlotVisibility_descriptor(), name, value);
}
enum BidRequest_Mobile_Device_ScreenOrientation {
  BidRequest_Mobile_Device_ScreenOrientation_SCREEN_ORIENTATION_UNKNOWN = 0,
  BidRequest_Mobile_Device_ScreenOrientation_SCREEN_ORIENTATION_PORTRAIT = 1,
  BidRequest_Mobile_Device_ScreenOrientation_SCREEN_ORIENTATION_LANDSCAPE = 2
};
bool BidRequest_Mobile_Device_ScreenOrientation_IsValid(int value);
const BidRequest_Mobile_Device_ScreenOrientation BidRequest_Mobile_Device_ScreenOrientation_ScreenOrientation_MIN = BidRequest_Mobile_Device_ScreenOrientation_SCREEN_ORIENTATION_UNKNOWN;
const BidRequest_Mobile_Device_ScreenOrientation BidRequest_Mobile_Device_ScreenOrientation_ScreenOrientation_MAX = BidRequest_Mobile_Device_ScreenOrientation_SCREEN_ORIENTATION_LANDSCAPE;
const int BidRequest_Mobile_Device_ScreenOrientation_ScreenOrientation_ARRAYSIZE = BidRequest_Mobile_Device_ScreenOrientation_ScreenOrientation_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_Device_ScreenOrientation_descriptor();
inline const ::std::string& BidRequest_Mobile_Device_ScreenOrientation_Name(BidRequest_Mobile_Device_ScreenOrientation value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_Device_ScreenOrientation_descriptor(), value);
}
inline bool BidRequest_Mobile_Device_ScreenOrientation_Parse(
    const ::std::string& name, BidRequest_Mobile_Device_ScreenOrientation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_Device_ScreenOrientation>(
    BidRequest_Mobile_Device_ScreenOrientation_descriptor(), name, value);
}
// ===================================================================

class BidRequest_UserCategory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.BidRequest.UserCategory) */ {
 public:
  BidRequest_UserCategory();
  virtual ~BidRequest_UserCategory();

  BidRequest_UserCategory(const BidRequest_UserCategory& from);

  inline BidRequest_UserCategory& operator=(const BidRequest_UserCategory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_UserCategory& default_instance();

  void Swap(BidRequest_UserCategory* other);

  // implements Message ----------------------------------------------

  inline BidRequest_UserCategory* New() const { return New(NULL); }

  BidRequest_UserCategory* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_UserCategory& from);
  void MergeFrom(const BidRequest_UserCategory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_UserCategory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 weight = 2 [default = 1000];
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  ::google::protobuf::int32 weight() const;
  void set_weight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.MAX.BidRequest.UserCategory)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_weight();
  inline void clear_has_weight();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 weight_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_UserCategory* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_ContentCategory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.BidRequest.ContentCategory) */ {
 public:
  BidRequest_ContentCategory();
  virtual ~BidRequest_ContentCategory();

  BidRequest_ContentCategory(const BidRequest_ContentCategory& from);

  inline BidRequest_ContentCategory& operator=(const BidRequest_ContentCategory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_ContentCategory& default_instance();

  void Swap(BidRequest_ContentCategory* other);

  // implements Message ----------------------------------------------

  inline BidRequest_ContentCategory* New() const { return New(NULL); }

  BidRequest_ContentCategory* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_ContentCategory& from);
  void MergeFrom(const BidRequest_ContentCategory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_ContentCategory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 weight = 2 [default = 1000];
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  ::google::protobuf::int32 weight() const;
  void set_weight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.MAX.BidRequest.ContentCategory)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_weight();
  inline void clear_has_weight();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 weight_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_ContentCategory* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot_Native : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.BidRequest.AdSlot.Native) */ {
 public:
  BidRequest_AdSlot_Native();
  virtual ~BidRequest_AdSlot_Native();

  BidRequest_AdSlot_Native(const BidRequest_AdSlot_Native& from);

  inline BidRequest_AdSlot_Native& operator=(const BidRequest_AdSlot_Native& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_Native& default_instance();

  void Swap(BidRequest_AdSlot_Native* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_Native* New() const { return New(NULL); }

  BidRequest_AdSlot_Native* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_Native& from);
  void MergeFrom(const BidRequest_AdSlot_Native& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_Native* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ad_num = 1;
  bool has_ad_num() const;
  void clear_ad_num();
  static const int kAdNumFieldNumber = 1;
  ::google::protobuf::uint32 ad_num() const;
  void set_ad_num(::google::protobuf::uint32 value);

  // repeated int32 landing_type = 2;
  int landing_type_size() const;
  void clear_landing_type();
  static const int kLandingTypeFieldNumber = 2;
  ::google::protobuf::int32 landing_type(int index) const;
  void set_landing_type(int index, ::google::protobuf::int32 value);
  void add_landing_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      landing_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_landing_type();

  // repeated int32 template_id = 3;
  int template_id_size() const;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 3;
  ::google::protobuf::int32 template_id(int index) const;
  void set_template_id(int index, ::google::protobuf::int32 value);
  void add_template_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      template_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_template_id();

  // @@protoc_insertion_point(class_scope:protocol.MAX.BidRequest.AdSlot.Native)
 private:
  inline void set_has_ad_num();
  inline void clear_has_ad_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > landing_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > template_id_;
  ::google::protobuf::uint32 ad_num_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot_Native* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot_Deal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.BidRequest.AdSlot.Deal) */ {
 public:
  BidRequest_AdSlot_Deal();
  virtual ~BidRequest_AdSlot_Deal();

  BidRequest_AdSlot_Deal(const BidRequest_AdSlot_Deal& from);

  inline BidRequest_AdSlot_Deal& operator=(const BidRequest_AdSlot_Deal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_Deal& default_instance();

  void Swap(BidRequest_AdSlot_Deal* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_Deal* New() const { return New(NULL); }

  BidRequest_AdSlot_Deal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_Deal& from);
  void MergeFrom(const BidRequest_AdSlot_Deal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_Deal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_Deal_DealType DealType;
  static const DealType UNKNOWN_DEAL_TYPE =
    BidRequest_AdSlot_Deal_DealType_UNKNOWN_DEAL_TYPE;
  static const DealType PREFERRED_DEAL =
    BidRequest_AdSlot_Deal_DealType_PREFERRED_DEAL;
  static const DealType PRIVATE_AUCTION =
    BidRequest_AdSlot_Deal_DealType_PRIVATE_AUCTION;
  static const DealType PRIVATE_DIRECT_BUY =
    BidRequest_AdSlot_Deal_DealType_PRIVATE_DIRECT_BUY;
  static inline bool DealType_IsValid(int value) {
    return BidRequest_AdSlot_Deal_DealType_IsValid(value);
  }
  static const DealType DealType_MIN =
    BidRequest_AdSlot_Deal_DealType_DealType_MIN;
  static const DealType DealType_MAX =
    BidRequest_AdSlot_Deal_DealType_DealType_MAX;
  static const int DealType_ARRAYSIZE =
    BidRequest_AdSlot_Deal_DealType_DealType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DealType_descriptor() {
    return BidRequest_AdSlot_Deal_DealType_descriptor();
  }
  static inline const ::std::string& DealType_Name(DealType value) {
    return BidRequest_AdSlot_Deal_DealType_Name(value);
  }
  static inline bool DealType_Parse(const ::std::string& name,
      DealType* value) {
    return BidRequest_AdSlot_Deal_DealType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 deal_id = 1;
  bool has_deal_id() const;
  void clear_deal_id();
  static const int kDealIdFieldNumber = 1;
  ::google::protobuf::int64 deal_id() const;
  void set_deal_id(::google::protobuf::int64 value);

  // required .protocol.MAX.BidRequest.AdSlot.Deal.DealType deal_type = 2 [default = UNKNOWN_DEAL_TYPE];
  bool has_deal_type() const;
  void clear_deal_type();
  static const int kDealTypeFieldNumber = 2;
  ::protocol::MAX::BidRequest_AdSlot_Deal_DealType deal_type() const;
  void set_deal_type(::protocol::MAX::BidRequest_AdSlot_Deal_DealType value);

  // optional uint32 price = 4;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 4;
  ::google::protobuf::uint32 price() const;
  void set_price(::google::protobuf::uint32 value);

  // optional string date = 3;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 3;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // @@protoc_insertion_point(class_scope:protocol.MAX.BidRequest.AdSlot.Deal)
 private:
  inline void set_has_deal_id();
  inline void clear_has_deal_id();
  inline void set_has_deal_type();
  inline void clear_has_deal_type();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_date();
  inline void clear_has_date();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 deal_id_;
  int deal_type_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot_Deal* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_AdSlot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.BidRequest.AdSlot) */ {
 public:
  BidRequest_AdSlot();
  virtual ~BidRequest_AdSlot();

  BidRequest_AdSlot(const BidRequest_AdSlot& from);

  inline BidRequest_AdSlot& operator=(const BidRequest_AdSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot& default_instance();

  void Swap(BidRequest_AdSlot* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot* New() const { return New(NULL); }

  BidRequest_AdSlot* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot& from);
  void MergeFrom(const BidRequest_AdSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_Native Native;
  typedef BidRequest_AdSlot_Deal Deal;

  typedef BidRequest_AdSlot_SlotVisibility SlotVisibility;
  static const SlotVisibility NO_DETECTION =
    BidRequest_AdSlot_SlotVisibility_NO_DETECTION;
  static const SlotVisibility ABOVE_THE_FOLD =
    BidRequest_AdSlot_SlotVisibility_ABOVE_THE_FOLD;
  static const SlotVisibility BELOW_THE_FOLD =
    BidRequest_AdSlot_SlotVisibility_BELOW_THE_FOLD;
  static inline bool SlotVisibility_IsValid(int value) {
    return BidRequest_AdSlot_SlotVisibility_IsValid(value);
  }
  static const SlotVisibility SlotVisibility_MIN =
    BidRequest_AdSlot_SlotVisibility_SlotVisibility_MIN;
  static const SlotVisibility SlotVisibility_MAX =
    BidRequest_AdSlot_SlotVisibility_SlotVisibility_MAX;
  static const int SlotVisibility_ARRAYSIZE =
    BidRequest_AdSlot_SlotVisibility_SlotVisibility_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SlotVisibility_descriptor() {
    return BidRequest_AdSlot_SlotVisibility_descriptor();
  }
  static inline const ::std::string& SlotVisibility_Name(SlotVisibility value) {
    return BidRequest_AdSlot_SlotVisibility_Name(value);
  }
  static inline bool SlotVisibility_Parse(const ::std::string& name,
      SlotVisibility* value) {
    return BidRequest_AdSlot_SlotVisibility_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional string pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  const ::std::string& pid() const;
  void set_pid(const ::std::string& value);
  void set_pid(const char* value);
  void set_pid(const char* value, size_t size);
  ::std::string* mutable_pid();
  ::std::string* release_pid();
  void set_allocated_pid(::std::string* pid);

  // optional int32 width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 height = 4;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // repeated uint32 view_type = 5;
  int view_type_size() const;
  void clear_view_type();
  static const int kViewTypeFieldNumber = 5;
  ::google::protobuf::uint32 view_type(int index) const;
  void set_view_type(int index, ::google::protobuf::uint32 value);
  void add_view_type(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      view_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_view_type();

  // optional uint32 min_cpm_price = 6;
  bool has_min_cpm_price() const;
  void clear_min_cpm_price();
  static const int kMinCpmPriceFieldNumber = 6;
  ::google::protobuf::uint32 min_cpm_price() const;
  void set_min_cpm_price(::google::protobuf::uint32 value);

  // optional .protocol.MAX.BidRequest.AdSlot.SlotVisibility slot_visibility = 7 [default = NO_DETECTION];
  bool has_slot_visibility() const;
  void clear_slot_visibility();
  static const int kSlotVisibilityFieldNumber = 7;
  ::protocol::MAX::BidRequest_AdSlot_SlotVisibility slot_visibility() const;
  void set_slot_visibility(::protocol::MAX::BidRequest_AdSlot_SlotVisibility value);

  // optional .protocol.MAX.BidRequest.AdSlot.Native native = 8;
  bool has_native() const;
  void clear_native();
  static const int kNativeFieldNumber = 8;
  const ::protocol::MAX::BidRequest_AdSlot_Native& native() const;
  ::protocol::MAX::BidRequest_AdSlot_Native* mutable_native();
  ::protocol::MAX::BidRequest_AdSlot_Native* release_native();
  void set_allocated_native(::protocol::MAX::BidRequest_AdSlot_Native* native);

  // repeated .protocol.MAX.BidRequest.AdSlot.Deal deals = 9;
  int deals_size() const;
  void clear_deals();
  static const int kDealsFieldNumber = 9;
  const ::protocol::MAX::BidRequest_AdSlot_Deal& deals(int index) const;
  ::protocol::MAX::BidRequest_AdSlot_Deal* mutable_deals(int index);
  ::protocol::MAX::BidRequest_AdSlot_Deal* add_deals();
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot_Deal >*
      mutable_deals();
  const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot_Deal >&
      deals() const;

  // @@protoc_insertion_point(class_scope:protocol.MAX.BidRequest.AdSlot)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_min_cpm_price();
  inline void clear_has_min_cpm_price();
  inline void set_has_slot_visibility();
  inline void clear_has_slot_visibility();
  inline void set_has_native();
  inline void clear_has_native();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > view_type_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::uint32 min_cpm_price_;
  ::protocol::MAX::BidRequest_AdSlot_Native* native_;
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot_Deal > deals_;
  int slot_visibility_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_AdSlot* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Mobile_Device : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.BidRequest.Mobile.Device) */ {
 public:
  BidRequest_Mobile_Device();
  virtual ~BidRequest_Mobile_Device();

  BidRequest_Mobile_Device(const BidRequest_Mobile_Device& from);

  inline BidRequest_Mobile_Device& operator=(const BidRequest_Mobile_Device& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile_Device& default_instance();

  void Swap(BidRequest_Mobile_Device* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Mobile_Device* New() const { return New(NULL); }

  BidRequest_Mobile_Device* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile_Device& from);
  void MergeFrom(const BidRequest_Mobile_Device& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Mobile_Device* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Mobile_Device_ScreenOrientation ScreenOrientation;
  static const ScreenOrientation SCREEN_ORIENTATION_UNKNOWN =
    BidRequest_Mobile_Device_ScreenOrientation_SCREEN_ORIENTATION_UNKNOWN;
  static const ScreenOrientation SCREEN_ORIENTATION_PORTRAIT =
    BidRequest_Mobile_Device_ScreenOrientation_SCREEN_ORIENTATION_PORTRAIT;
  static const ScreenOrientation SCREEN_ORIENTATION_LANDSCAPE =
    BidRequest_Mobile_Device_ScreenOrientation_SCREEN_ORIENTATION_LANDSCAPE;
  static inline bool ScreenOrientation_IsValid(int value) {
    return BidRequest_Mobile_Device_ScreenOrientation_IsValid(value);
  }
  static const ScreenOrientation ScreenOrientation_MIN =
    BidRequest_Mobile_Device_ScreenOrientation_ScreenOrientation_MIN;
  static const ScreenOrientation ScreenOrientation_MAX =
    BidRequest_Mobile_Device_ScreenOrientation_ScreenOrientation_MAX;
  static const int ScreenOrientation_ARRAYSIZE =
    BidRequest_Mobile_Device_ScreenOrientation_ScreenOrientation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ScreenOrientation_descriptor() {
    return BidRequest_Mobile_Device_ScreenOrientation_descriptor();
  }
  static inline const ::std::string& ScreenOrientation_Name(ScreenOrientation value) {
    return BidRequest_Mobile_Device_ScreenOrientation_Name(value);
  }
  static inline bool ScreenOrientation_Parse(const ::std::string& name,
      ScreenOrientation* value) {
    return BidRequest_Mobile_Device_ScreenOrientation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string platform = 1;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 1;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // optional string model = 3;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 3;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // optional string os = 4;
  bool has_os() const;
  void clear_os();
  static const int kOsFieldNumber = 4;
  const ::std::string& os() const;
  void set_os(const ::std::string& value);
  void set_os(const char* value);
  void set_os(const char* value, size_t size);
  ::std::string* mutable_os();
  ::std::string* release_os();
  void set_allocated_os(::std::string* os);

  // optional string os_version = 5;
  bool has_os_version() const;
  void clear_os_version();
  static const int kOsVersionFieldNumber = 5;
  const ::std::string& os_version() const;
  void set_os_version(const ::std::string& value);
  void set_os_version(const char* value);
  void set_os_version(const char* value, size_t size);
  ::std::string* mutable_os_version();
  ::std::string* release_os_version();
  void set_allocated_os_version(::std::string* os_version);

  // optional uint32 network = 6;
  bool has_network() const;
  void clear_network();
  static const int kNetworkFieldNumber = 6;
  ::google::protobuf::uint32 network() const;
  void set_network(::google::protobuf::uint32 value);

  // optional int32 carrier_id = 7;
  bool has_carrier_id() const;
  void clear_carrier_id();
  static const int kCarrierIdFieldNumber = 7;
  ::google::protobuf::int32 carrier_id() const;
  void set_carrier_id(::google::protobuf::int32 value);

  // optional string longitude = 8;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 8;
  const ::std::string& longitude() const;
  void set_longitude(const ::std::string& value);
  void set_longitude(const char* value);
  void set_longitude(const char* value, size_t size);
  ::std::string* mutable_longitude();
  ::std::string* release_longitude();
  void set_allocated_longitude(::std::string* longitude);

  // optional string latitude = 9;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 9;
  const ::std::string& latitude() const;
  void set_latitude(const ::std::string& value);
  void set_latitude(const char* value);
  void set_latitude(const char* value, size_t size);
  ::std::string* mutable_latitude();
  ::std::string* release_latitude();
  void set_allocated_latitude(::std::string* latitude);

  // optional int32 screen_width = 10;
  bool has_screen_width() const;
  void clear_screen_width();
  static const int kScreenWidthFieldNumber = 10;
  ::google::protobuf::int32 screen_width() const;
  void set_screen_width(::google::protobuf::int32 value);

  // optional int32 screen_height = 11;
  bool has_screen_height() const;
  void clear_screen_height();
  static const int kScreenHeightFieldNumber = 11;
  ::google::protobuf::int32 screen_height() const;
  void set_screen_height(::google::protobuf::int32 value);

  // optional .protocol.MAX.BidRequest.Mobile.Device.ScreenOrientation screen_orientation = 12 [default = SCREEN_ORIENTATION_UNKNOWN];
  bool has_screen_orientation() const;
  void clear_screen_orientation();
  static const int kScreenOrientationFieldNumber = 12;
  ::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation screen_orientation() const;
  void set_screen_orientation(::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation value);

  // optional string idfa = 13;
  bool has_idfa() const;
  void clear_idfa();
  static const int kIdfaFieldNumber = 13;
  const ::std::string& idfa() const;
  void set_idfa(const ::std::string& value);
  void set_idfa(const char* value);
  void set_idfa(const char* value, size_t size);
  ::std::string* mutable_idfa();
  ::std::string* release_idfa();
  void set_allocated_idfa(::std::string* idfa);

  // optional string hashed_idfa = 14;
  bool has_hashed_idfa() const;
  void clear_hashed_idfa();
  static const int kHashedIdfaFieldNumber = 14;
  const ::std::string& hashed_idfa() const;
  void set_hashed_idfa(const ::std::string& value);
  void set_hashed_idfa(const char* value);
  void set_hashed_idfa(const char* value, size_t size);
  ::std::string* mutable_hashed_idfa();
  ::std::string* release_hashed_idfa();
  void set_allocated_hashed_idfa(::std::string* hashed_idfa);

  // optional string imei = 16;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 16;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string hashed_imei = 15;
  bool has_hashed_imei() const;
  void clear_hashed_imei();
  static const int kHashedImeiFieldNumber = 15;
  const ::std::string& hashed_imei() const;
  void set_hashed_imei(const ::std::string& value);
  void set_hashed_imei(const char* value);
  void set_hashed_imei(const char* value, size_t size);
  ::std::string* mutable_hashed_imei();
  ::std::string* release_hashed_imei();
  void set_allocated_hashed_imei(::std::string* hashed_imei);

  // optional string android_id = 17;
  bool has_android_id() const;
  void clear_android_id();
  static const int kAndroidIdFieldNumber = 17;
  const ::std::string& android_id() const;
  void set_android_id(const ::std::string& value);
  void set_android_id(const char* value);
  void set_android_id(const char* value, size_t size);
  ::std::string* mutable_android_id();
  ::std::string* release_android_id();
  void set_allocated_android_id(::std::string* android_id);

  // optional string hashed_android_id = 18;
  bool has_hashed_android_id() const;
  void clear_hashed_android_id();
  static const int kHashedAndroidIdFieldNumber = 18;
  const ::std::string& hashed_android_id() const;
  void set_hashed_android_id(const ::std::string& value);
  void set_hashed_android_id(const char* value);
  void set_hashed_android_id(const char* value, size_t size);
  ::std::string* mutable_hashed_android_id();
  ::std::string* release_hashed_android_id();
  void set_allocated_hashed_android_id(::std::string* hashed_android_id);

  // optional string mac = 19;
  bool has_mac() const;
  void clear_mac();
  static const int kMacFieldNumber = 19;
  const ::std::string& mac() const;
  void set_mac(const ::std::string& value);
  void set_mac(const char* value);
  void set_mac(const char* value, size_t size);
  ::std::string* mutable_mac();
  ::std::string* release_mac();
  void set_allocated_mac(::std::string* mac);

  // optional string hashed_mac = 20;
  bool has_hashed_mac() const;
  void clear_hashed_mac();
  static const int kHashedMacFieldNumber = 20;
  const ::std::string& hashed_mac() const;
  void set_hashed_mac(const ::std::string& value);
  void set_hashed_mac(const char* value);
  void set_hashed_mac(const char* value, size_t size);
  ::std::string* mutable_hashed_mac();
  ::std::string* release_hashed_mac();
  void set_allocated_hashed_mac(::std::string* hashed_mac);

  // optional string m2id = 21;
  bool has_m2id() const;
  void clear_m2id();
  static const int kM2IdFieldNumber = 21;
  const ::std::string& m2id() const;
  void set_m2id(const ::std::string& value);
  void set_m2id(const char* value);
  void set_m2id(const char* value, size_t size);
  ::std::string* mutable_m2id();
  ::std::string* release_m2id();
  void set_allocated_m2id(::std::string* m2id);

  // @@protoc_insertion_point(class_scope:protocol.MAX.BidRequest.Mobile.Device)
 private:
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_os();
  inline void clear_has_os();
  inline void set_has_os_version();
  inline void clear_has_os_version();
  inline void set_has_network();
  inline void clear_has_network();
  inline void set_has_carrier_id();
  inline void clear_has_carrier_id();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_screen_width();
  inline void clear_has_screen_width();
  inline void set_has_screen_height();
  inline void clear_has_screen_height();
  inline void set_has_screen_orientation();
  inline void clear_has_screen_orientation();
  inline void set_has_idfa();
  inline void clear_has_idfa();
  inline void set_has_hashed_idfa();
  inline void clear_has_hashed_idfa();
  inline void set_has_imei();
  inline void clear_has_imei();
  inline void set_has_hashed_imei();
  inline void clear_has_hashed_imei();
  inline void set_has_android_id();
  inline void clear_has_android_id();
  inline void set_has_hashed_android_id();
  inline void clear_has_hashed_android_id();
  inline void set_has_mac();
  inline void clear_has_mac();
  inline void set_has_hashed_mac();
  inline void clear_has_hashed_mac();
  inline void set_has_m2id();
  inline void clear_has_m2id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::internal::ArenaStringPtr os_;
  ::google::protobuf::internal::ArenaStringPtr os_version_;
  ::google::protobuf::uint32 network_;
  ::google::protobuf::int32 carrier_id_;
  ::google::protobuf::internal::ArenaStringPtr longitude_;
  ::google::protobuf::internal::ArenaStringPtr latitude_;
  ::google::protobuf::int32 screen_width_;
  ::google::protobuf::int32 screen_height_;
  ::google::protobuf::internal::ArenaStringPtr idfa_;
  ::google::protobuf::internal::ArenaStringPtr hashed_idfa_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr hashed_imei_;
  ::google::protobuf::internal::ArenaStringPtr android_id_;
  ::google::protobuf::internal::ArenaStringPtr hashed_android_id_;
  ::google::protobuf::internal::ArenaStringPtr mac_;
  ::google::protobuf::internal::ArenaStringPtr hashed_mac_;
  ::google::protobuf::internal::ArenaStringPtr m2id_;
  int screen_orientation_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Mobile_Device* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest_Mobile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.BidRequest.Mobile) */ {
 public:
  BidRequest_Mobile();
  virtual ~BidRequest_Mobile();

  BidRequest_Mobile(const BidRequest_Mobile& from);

  inline BidRequest_Mobile& operator=(const BidRequest_Mobile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile& default_instance();

  void Swap(BidRequest_Mobile* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Mobile* New() const { return New(NULL); }

  BidRequest_Mobile* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile& from);
  void MergeFrom(const BidRequest_Mobile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Mobile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Mobile_Device Device;

  // accessors -------------------------------------------------------

  // optional bool is_app = 1;
  bool has_is_app() const;
  void clear_is_app();
  static const int kIsAppFieldNumber = 1;
  bool is_app() const;
  void set_is_app(bool value);

  // optional bool is_fullscreen = 2;
  bool has_is_fullscreen() const;
  void clear_is_fullscreen();
  static const int kIsFullscreenFieldNumber = 2;
  bool is_fullscreen() const;
  void set_is_fullscreen(bool value);

  // optional string app_id = 3;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 3;
  const ::std::string& app_id() const;
  void set_app_id(const ::std::string& value);
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  ::std::string* mutable_app_id();
  ::std::string* release_app_id();
  void set_allocated_app_id(::std::string* app_id);

  // optional string package_name = 6;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 6;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional .protocol.MAX.BidRequest.Mobile.Device device = 4;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 4;
  const ::protocol::MAX::BidRequest_Mobile_Device& device() const;
  ::protocol::MAX::BidRequest_Mobile_Device* mutable_device();
  ::protocol::MAX::BidRequest_Mobile_Device* release_device();
  void set_allocated_device(::protocol::MAX::BidRequest_Mobile_Device* device);

  // repeated int32 app_category = 5;
  int app_category_size() const;
  void clear_app_category();
  static const int kAppCategoryFieldNumber = 5;
  ::google::protobuf::int32 app_category(int index) const;
  void set_app_category(int index, ::google::protobuf::int32 value);
  void add_app_category(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      app_category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_app_category();

  // @@protoc_insertion_point(class_scope:protocol.MAX.BidRequest.Mobile)
 private:
  inline void set_has_is_app();
  inline void clear_has_is_app();
  inline void set_has_is_fullscreen();
  inline void clear_has_is_fullscreen();
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_package_name();
  inline void clear_has_package_name();
  inline void set_has_device();
  inline void clear_has_device();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr app_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::protocol::MAX::BidRequest_Mobile_Device* device_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > app_category_;
  bool is_app_;
  bool is_fullscreen_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest_Mobile* default_instance_;
};
// -------------------------------------------------------------------

class BidRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.BidRequest) */ {
 public:
  BidRequest();
  virtual ~BidRequest();

  BidRequest(const BidRequest& from);

  inline BidRequest& operator=(const BidRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest& default_instance();

  void Swap(BidRequest* other);

  // implements Message ----------------------------------------------

  inline BidRequest* New() const { return New(NULL); }

  BidRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest& from);
  void MergeFrom(const BidRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_UserCategory UserCategory;
  typedef BidRequest_ContentCategory ContentCategory;
  typedef BidRequest_AdSlot AdSlot;
  typedef BidRequest_Mobile Mobile;

  // accessors -------------------------------------------------------

  // required string bid = 1;
  bool has_bid() const;
  void clear_bid();
  static const int kBidFieldNumber = 1;
  const ::std::string& bid() const;
  void set_bid(const ::std::string& value);
  void set_bid(const char* value);
  void set_bid(const char* value, size_t size);
  ::std::string* mutable_bid();
  ::std::string* release_bid();
  void set_allocated_bid(::std::string* bid);

  // optional uint32 is_test = 9 [default = 0];
  bool has_is_test() const;
  void clear_is_test();
  static const int kIsTestFieldNumber = 9;
  ::google::protobuf::uint32 is_test() const;
  void set_is_test(::google::protobuf::uint32 value);

  // optional string mediav_user_id = 2 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_mediav_user_id() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_mediav_user_id();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kMediavUserIdFieldNumber = 2;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& mediav_user_id() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_mediav_user_id(const ::std::string& value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_mediav_user_id(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_mediav_user_id(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_mediav_user_id();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_mediav_user_id();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_mediav_user_id(::std::string* mediav_user_id);

  // optional string mv_user_id = 17;
  bool has_mv_user_id() const;
  void clear_mv_user_id();
  static const int kMvUserIdFieldNumber = 17;
  const ::std::string& mv_user_id() const;
  void set_mv_user_id(const ::std::string& value);
  void set_mv_user_id(const char* value);
  void set_mv_user_id(const char* value, size_t size);
  ::std::string* mutable_mv_user_id();
  ::std::string* release_mv_user_id();
  void set_allocated_mv_user_id(::std::string* mv_user_id);

  // optional string mid = 20;
  bool has_mid() const;
  void clear_mid();
  static const int kMidFieldNumber = 20;
  const ::std::string& mid() const;
  void set_mid(const ::std::string& value);
  void set_mid(const char* value);
  void set_mid(const char* value, size_t size);
  ::std::string* mutable_mid();
  ::std::string* release_mid();
  void set_allocated_mid(::std::string* mid);

  // optional string ip = 3;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string user_agent = 4;
  bool has_user_agent() const;
  void clear_user_agent();
  static const int kUserAgentFieldNumber = 4;
  const ::std::string& user_agent() const;
  void set_user_agent(const ::std::string& value);
  void set_user_agent(const char* value);
  void set_user_agent(const char* value, size_t size);
  ::std::string* mutable_user_agent();
  ::std::string* release_user_agent();
  void set_allocated_user_agent(::std::string* user_agent);

  // repeated int32 user_vertical = 10;
  int user_vertical_size() const;
  void clear_user_vertical();
  static const int kUserVerticalFieldNumber = 10;
  ::google::protobuf::int32 user_vertical(int index) const;
  void set_user_vertical(int index, ::google::protobuf::int32 value);
  void add_user_vertical(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      user_vertical() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_user_vertical();

  // repeated .protocol.MAX.BidRequest.UserCategory user_category = 19;
  int user_category_size() const;
  void clear_user_category();
  static const int kUserCategoryFieldNumber = 19;
  const ::protocol::MAX::BidRequest_UserCategory& user_category(int index) const;
  ::protocol::MAX::BidRequest_UserCategory* mutable_user_category(int index);
  ::protocol::MAX::BidRequest_UserCategory* add_user_category();
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_UserCategory >*
      mutable_user_category();
  const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_UserCategory >&
      user_category() const;

  // optional string url = 5;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 5;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional bool is_https = 21;
  bool has_is_https() const;
  void clear_is_https();
  static const int kIsHttpsFieldNumber = 21;
  bool is_https() const;
  void set_is_https(bool value);

  // optional uint32 adx_type = 6 [default = 0];
  bool has_adx_type() const;
  void clear_adx_type();
  static const int kAdxTypeFieldNumber = 6;
  ::google::protobuf::uint32 adx_type() const;
  void set_adx_type(::google::protobuf::uint32 value);

  // optional string detected_language = 11;
  bool has_detected_language() const;
  void clear_detected_language();
  static const int kDetectedLanguageFieldNumber = 11;
  const ::std::string& detected_language() const;
  void set_detected_language(const ::std::string& value);
  void set_detected_language(const char* value);
  void set_detected_language(const char* value, size_t size);
  ::std::string* mutable_detected_language();
  ::std::string* release_detected_language();
  void set_allocated_detected_language(::std::string* detected_language);

  // optional int32 publisher_id = 13;
  bool has_publisher_id() const;
  void clear_publisher_id();
  static const int kPublisherIdFieldNumber = 13;
  ::google::protobuf::int32 publisher_id() const;
  void set_publisher_id(::google::protobuf::int32 value);

  // repeated int32 publisher_category = 14;
  int publisher_category_size() const;
  void clear_publisher_category();
  static const int kPublisherCategoryFieldNumber = 14;
  ::google::protobuf::int32 publisher_category(int index) const;
  void set_publisher_category(int index, ::google::protobuf::int32 value);
  void add_publisher_category(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      publisher_category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_publisher_category();

  // optional int32 publisher_category_version = 15;
  bool has_publisher_category_version() const;
  void clear_publisher_category_version();
  static const int kPublisherCategoryVersionFieldNumber = 15;
  ::google::protobuf::int32 publisher_category_version() const;
  void set_publisher_category_version(::google::protobuf::int32 value);

  // repeated .protocol.MAX.BidRequest.ContentCategory content_category = 18;
  int content_category_size() const;
  void clear_content_category();
  static const int kContentCategoryFieldNumber = 18;
  const ::protocol::MAX::BidRequest_ContentCategory& content_category(int index) const;
  ::protocol::MAX::BidRequest_ContentCategory* mutable_content_category(int index);
  ::protocol::MAX::BidRequest_ContentCategory* add_content_category();
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_ContentCategory >*
      mutable_content_category();
  const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_ContentCategory >&
      content_category() const;

  // repeated .protocol.MAX.BidRequest.AdSlot adslot = 7;
  int adslot_size() const;
  void clear_adslot();
  static const int kAdslotFieldNumber = 7;
  const ::protocol::MAX::BidRequest_AdSlot& adslot(int index) const;
  ::protocol::MAX::BidRequest_AdSlot* mutable_adslot(int index);
  ::protocol::MAX::BidRequest_AdSlot* add_adslot();
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot >*
      mutable_adslot();
  const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot >&
      adslot() const;

  // repeated int32 excluded_attribute = 16;
  int excluded_attribute_size() const;
  void clear_excluded_attribute();
  static const int kExcludedAttributeFieldNumber = 16;
  ::google::protobuf::int32 excluded_attribute(int index) const;
  void set_excluded_attribute(int index, ::google::protobuf::int32 value);
  void add_excluded_attribute(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      excluded_attribute() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_excluded_attribute();

  // repeated int32 excluded_ad_category = 12;
  int excluded_ad_category_size() const;
  void clear_excluded_ad_category();
  static const int kExcludedAdCategoryFieldNumber = 12;
  ::google::protobuf::int32 excluded_ad_category(int index) const;
  void set_excluded_ad_category(int index, ::google::protobuf::int32 value);
  void add_excluded_ad_category(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      excluded_ad_category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_excluded_ad_category();

  // optional .protocol.MAX.BidRequest.Mobile mobile = 8;
  bool has_mobile() const;
  void clear_mobile();
  static const int kMobileFieldNumber = 8;
  const ::protocol::MAX::BidRequest_Mobile& mobile() const;
  ::protocol::MAX::BidRequest_Mobile* mutable_mobile();
  ::protocol::MAX::BidRequest_Mobile* release_mobile();
  void set_allocated_mobile(::protocol::MAX::BidRequest_Mobile* mobile);

  // optional string extend_data = 100;
  bool has_extend_data() const;
  void clear_extend_data();
  static const int kExtendDataFieldNumber = 100;
  const ::std::string& extend_data() const;
  void set_extend_data(const ::std::string& value);
  void set_extend_data(const char* value);
  void set_extend_data(const char* value, size_t size);
  ::std::string* mutable_extend_data();
  ::std::string* release_extend_data();
  void set_allocated_extend_data(::std::string* extend_data);

  // @@protoc_insertion_point(class_scope:protocol.MAX.BidRequest)
 private:
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_is_test();
  inline void clear_has_is_test();
  inline void set_has_mediav_user_id();
  inline void clear_has_mediav_user_id();
  inline void set_has_mv_user_id();
  inline void clear_has_mv_user_id();
  inline void set_has_mid();
  inline void clear_has_mid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_user_agent();
  inline void clear_has_user_agent();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_is_https();
  inline void clear_has_is_https();
  inline void set_has_adx_type();
  inline void clear_has_adx_type();
  inline void set_has_detected_language();
  inline void clear_has_detected_language();
  inline void set_has_publisher_id();
  inline void clear_has_publisher_id();
  inline void set_has_publisher_category_version();
  inline void clear_has_publisher_category_version();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_extend_data();
  inline void clear_has_extend_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr bid_;
  ::google::protobuf::internal::ArenaStringPtr mediav_user_id_;
  ::google::protobuf::internal::ArenaStringPtr mv_user_id_;
  ::google::protobuf::internal::ArenaStringPtr mid_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 is_test_;
  bool is_https_;
  ::google::protobuf::internal::ArenaStringPtr user_agent_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > user_vertical_;
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_UserCategory > user_category_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr detected_language_;
  ::google::protobuf::uint32 adx_type_;
  ::google::protobuf::int32 publisher_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > publisher_category_;
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_ContentCategory > content_category_;
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot > adslot_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > excluded_attribute_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > excluded_ad_category_;
  ::protocol::MAX::BidRequest_Mobile* mobile_;
  ::google::protobuf::internal::ArenaStringPtr extend_data_;
  ::google::protobuf::int32 publisher_category_version_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidRequest* default_instance_;
};
// -------------------------------------------------------------------

class BidResponse_Ads : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.BidResponse.Ads) */ {
 public:
  BidResponse_Ads();
  virtual ~BidResponse_Ads();

  BidResponse_Ads(const BidResponse_Ads& from);

  inline BidResponse_Ads& operator=(const BidResponse_Ads& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ads& default_instance();

  void Swap(BidResponse_Ads* other);

  // implements Message ----------------------------------------------

  inline BidResponse_Ads* New() const { return New(NULL); }

  BidResponse_Ads* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ads& from);
  void MergeFrom(const BidResponse_Ads& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse_Ads* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 adslot_id = 1;
  bool has_adslot_id() const;
  void clear_adslot_id();
  static const int kAdslotIdFieldNumber = 1;
  ::google::protobuf::uint32 adslot_id() const;
  void set_adslot_id(::google::protobuf::uint32 value);

  // required uint32 max_cpm_price = 2;
  bool has_max_cpm_price() const;
  void clear_max_cpm_price();
  static const int kMaxCpmPriceFieldNumber = 2;
  ::google::protobuf::uint32 max_cpm_price() const;
  void set_max_cpm_price(::google::protobuf::uint32 value);

  // optional string html_snippet = 3;
  bool has_html_snippet() const;
  void clear_html_snippet();
  static const int kHtmlSnippetFieldNumber = 3;
  const ::std::string& html_snippet() const;
  void set_html_snippet(const ::std::string& value);
  void set_html_snippet(const char* value);
  void set_html_snippet(const char* value, size_t size);
  ::std::string* mutable_html_snippet();
  ::std::string* release_html_snippet();
  void set_allocated_html_snippet(::std::string* html_snippet);

  // repeated .protocol.MAX.NativeAd native_ad = 13;
  int native_ad_size() const;
  void clear_native_ad();
  static const int kNativeAdFieldNumber = 13;
  const ::protocol::MAX::NativeAd& native_ad(int index) const;
  ::protocol::MAX::NativeAd* mutable_native_ad(int index);
  ::protocol::MAX::NativeAd* add_native_ad();
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd >*
      mutable_native_ad();
  const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd >&
      native_ad() const;

  // repeated int32 category = 4;
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 4;
  ::google::protobuf::int32 category(int index) const;
  void set_category(int index, ::google::protobuf::int32 value);
  void add_category(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_category();

  // repeated int32 creative_type = 5;
  int creative_type_size() const;
  void clear_creative_type();
  static const int kCreativeTypeFieldNumber = 5;
  ::google::protobuf::int32 creative_type(int index) const;
  void set_creative_type(int index, ::google::protobuf::int32 value);
  void add_creative_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      creative_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_creative_type();

  // repeated int32 creative_attribute = 14;
  int creative_attribute_size() const;
  void clear_creative_attribute();
  static const int kCreativeAttributeFieldNumber = 14;
  ::google::protobuf::int32 creative_attribute(int index) const;
  void set_creative_attribute(int index, ::google::protobuf::int32 value);
  void add_creative_attribute(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      creative_attribute() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_creative_attribute();

  // repeated string destination_url = 6;
  int destination_url_size() const;
  void clear_destination_url();
  static const int kDestinationUrlFieldNumber = 6;
  const ::std::string& destination_url(int index) const;
  ::std::string* mutable_destination_url(int index);
  void set_destination_url(int index, const ::std::string& value);
  void set_destination_url(int index, const char* value);
  void set_destination_url(int index, const char* value, size_t size);
  ::std::string* add_destination_url();
  void add_destination_url(const ::std::string& value);
  void add_destination_url(const char* value);
  void add_destination_url(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& destination_url() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_destination_url();

  // optional string advertiser_id = 7;
  bool has_advertiser_id() const;
  void clear_advertiser_id();
  static const int kAdvertiserIdFieldNumber = 7;
  const ::std::string& advertiser_id() const;
  void set_advertiser_id(const ::std::string& value);
  void set_advertiser_id(const char* value);
  void set_advertiser_id(const char* value, size_t size);
  ::std::string* mutable_advertiser_id();
  ::std::string* release_advertiser_id();
  void set_allocated_advertiser_id(::std::string* advertiser_id);

  // optional string creative_id = 8;
  bool has_creative_id() const;
  void clear_creative_id();
  static const int kCreativeIdFieldNumber = 8;
  const ::std::string& creative_id() const;
  void set_creative_id(const ::std::string& value);
  void set_creative_id(const char* value);
  void set_creative_id(const char* value, size_t size);
  ::std::string* mutable_creative_id();
  ::std::string* release_creative_id();
  void set_allocated_creative_id(::std::string* creative_id);

  // optional int32 width = 9;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 9;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 height = 10;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 10;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional string extend_data = 11;
  bool has_extend_data() const;
  void clear_extend_data();
  static const int kExtendDataFieldNumber = 11;
  const ::std::string& extend_data() const;
  void set_extend_data(const ::std::string& value);
  void set_extend_data(const char* value);
  void set_extend_data(const char* value, size_t size);
  ::std::string* mutable_extend_data();
  ::std::string* release_extend_data();
  void set_allocated_extend_data(::std::string* extend_data);

  // optional string nurl = 12;
  bool has_nurl() const;
  void clear_nurl();
  static const int kNurlFieldNumber = 12;
  const ::std::string& nurl() const;
  void set_nurl(const ::std::string& value);
  void set_nurl(const char* value);
  void set_nurl(const char* value, size_t size);
  ::std::string* mutable_nurl();
  ::std::string* release_nurl();
  void set_allocated_nurl(::std::string* nurl);

  // @@protoc_insertion_point(class_scope:protocol.MAX.BidResponse.Ads)
 private:
  inline void set_has_adslot_id();
  inline void clear_has_adslot_id();
  inline void set_has_max_cpm_price();
  inline void clear_has_max_cpm_price();
  inline void set_has_html_snippet();
  inline void clear_has_html_snippet();
  inline void set_has_advertiser_id();
  inline void clear_has_advertiser_id();
  inline void set_has_creative_id();
  inline void clear_has_creative_id();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_extend_data();
  inline void clear_has_extend_data();
  inline void set_has_nurl();
  inline void clear_has_nurl();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 adslot_id_;
  ::google::protobuf::uint32 max_cpm_price_;
  ::google::protobuf::internal::ArenaStringPtr html_snippet_;
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd > native_ad_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > category_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > creative_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > creative_attribute_;
  ::google::protobuf::RepeatedPtrField< ::std::string> destination_url_;
  ::google::protobuf::internal::ArenaStringPtr advertiser_id_;
  ::google::protobuf::internal::ArenaStringPtr creative_id_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::internal::ArenaStringPtr extend_data_;
  ::google::protobuf::internal::ArenaStringPtr nurl_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidResponse_Ads* default_instance_;
};
// -------------------------------------------------------------------

class BidResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.BidResponse) */ {
 public:
  BidResponse();
  virtual ~BidResponse();

  BidResponse(const BidResponse& from);

  inline BidResponse& operator=(const BidResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse& default_instance();

  void Swap(BidResponse* other);

  // implements Message ----------------------------------------------

  inline BidResponse* New() const { return New(NULL); }

  BidResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse& from);
  void MergeFrom(const BidResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidResponse_Ads Ads;

  // accessors -------------------------------------------------------

  // required string bid = 1;
  bool has_bid() const;
  void clear_bid();
  static const int kBidFieldNumber = 1;
  const ::std::string& bid() const;
  void set_bid(const ::std::string& value);
  void set_bid(const char* value);
  void set_bid(const char* value, size_t size);
  ::std::string* mutable_bid();
  ::std::string* release_bid();
  void set_allocated_bid(::std::string* bid);

  // repeated .protocol.MAX.BidResponse.Ads ads = 3;
  int ads_size() const;
  void clear_ads();
  static const int kAdsFieldNumber = 3;
  const ::protocol::MAX::BidResponse_Ads& ads(int index) const;
  ::protocol::MAX::BidResponse_Ads* mutable_ads(int index);
  ::protocol::MAX::BidResponse_Ads* add_ads();
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidResponse_Ads >*
      mutable_ads();
  const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidResponse_Ads >&
      ads() const;

  // @@protoc_insertion_point(class_scope:protocol.MAX.BidResponse)
 private:
  inline void set_has_bid();
  inline void clear_has_bid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr bid_;
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidResponse_Ads > ads_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static BidResponse* default_instance_;
};
// -------------------------------------------------------------------

class NativeAd_Creative_Image : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.NativeAd.Creative.Image) */ {
 public:
  NativeAd_Creative_Image();
  virtual ~NativeAd_Creative_Image();

  NativeAd_Creative_Image(const NativeAd_Creative_Image& from);

  inline NativeAd_Creative_Image& operator=(const NativeAd_Creative_Image& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NativeAd_Creative_Image& default_instance();

  void Swap(NativeAd_Creative_Image* other);

  // implements Message ----------------------------------------------

  inline NativeAd_Creative_Image* New() const { return New(NULL); }

  NativeAd_Creative_Image* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NativeAd_Creative_Image& from);
  void MergeFrom(const NativeAd_Creative_Image& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NativeAd_Creative_Image* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string image_url = 1;
  bool has_image_url() const;
  void clear_image_url();
  static const int kImageUrlFieldNumber = 1;
  const ::std::string& image_url() const;
  void set_image_url(const ::std::string& value);
  void set_image_url(const char* value);
  void set_image_url(const char* value, size_t size);
  ::std::string* mutable_image_url();
  ::std::string* release_image_url();
  void set_allocated_image_url(::std::string* image_url);

  // optional int32 image_width = 2;
  bool has_image_width() const;
  void clear_image_width();
  static const int kImageWidthFieldNumber = 2;
  ::google::protobuf::int32 image_width() const;
  void set_image_width(::google::protobuf::int32 value);

  // optional int32 image_height = 3;
  bool has_image_height() const;
  void clear_image_height();
  static const int kImageHeightFieldNumber = 3;
  ::google::protobuf::int32 image_height() const;
  void set_image_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.MAX.NativeAd.Creative.Image)
 private:
  inline void set_has_image_url();
  inline void clear_has_image_url();
  inline void set_has_image_width();
  inline void clear_has_image_width();
  inline void set_has_image_height();
  inline void clear_has_image_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr image_url_;
  ::google::protobuf::int32 image_width_;
  ::google::protobuf::int32 image_height_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static NativeAd_Creative_Image* default_instance_;
};
// -------------------------------------------------------------------

class NativeAd_Creative_Link : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.NativeAd.Creative.Link) */ {
 public:
  NativeAd_Creative_Link();
  virtual ~NativeAd_Creative_Link();

  NativeAd_Creative_Link(const NativeAd_Creative_Link& from);

  inline NativeAd_Creative_Link& operator=(const NativeAd_Creative_Link& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NativeAd_Creative_Link& default_instance();

  void Swap(NativeAd_Creative_Link* other);

  // implements Message ----------------------------------------------

  inline NativeAd_Creative_Link* New() const { return New(NULL); }

  NativeAd_Creative_Link* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NativeAd_Creative_Link& from);
  void MergeFrom(const NativeAd_Creative_Link& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NativeAd_Creative_Link* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string click_url = 1;
  bool has_click_url() const;
  void clear_click_url();
  static const int kClickUrlFieldNumber = 1;
  const ::std::string& click_url() const;
  void set_click_url(const ::std::string& value);
  void set_click_url(const char* value);
  void set_click_url(const char* value, size_t size);
  ::std::string* mutable_click_url();
  ::std::string* release_click_url();
  void set_allocated_click_url(::std::string* click_url);

  // optional string deep_link = 4;
  bool has_deep_link() const;
  void clear_deep_link();
  static const int kDeepLinkFieldNumber = 4;
  const ::std::string& deep_link() const;
  void set_deep_link(const ::std::string& value);
  void set_deep_link(const char* value);
  void set_deep_link(const char* value, size_t size);
  ::std::string* mutable_deep_link();
  ::std::string* release_deep_link();
  void set_allocated_deep_link(::std::string* deep_link);

  // optional int32 landing_type = 2;
  bool has_landing_type() const;
  void clear_landing_type();
  static const int kLandingTypeFieldNumber = 2;
  ::google::protobuf::int32 landing_type() const;
  void set_landing_type(::google::protobuf::int32 value);

  // repeated string content_click_tracks = 5;
  int content_click_tracks_size() const;
  void clear_content_click_tracks();
  static const int kContentClickTracksFieldNumber = 5;
  const ::std::string& content_click_tracks(int index) const;
  ::std::string* mutable_content_click_tracks(int index);
  void set_content_click_tracks(int index, const ::std::string& value);
  void set_content_click_tracks(int index, const char* value);
  void set_content_click_tracks(int index, const char* value, size_t size);
  ::std::string* add_content_click_tracks();
  void add_content_click_tracks(const ::std::string& value);
  void add_content_click_tracks(const char* value);
  void add_content_click_tracks(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& content_click_tracks() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_content_click_tracks();

  // repeated string click_tracks = 3;
  int click_tracks_size() const;
  void clear_click_tracks();
  static const int kClickTracksFieldNumber = 3;
  const ::std::string& click_tracks(int index) const;
  ::std::string* mutable_click_tracks(int index);
  void set_click_tracks(int index, const ::std::string& value);
  void set_click_tracks(int index, const char* value);
  void set_click_tracks(int index, const char* value, size_t size);
  ::std::string* add_click_tracks();
  void add_click_tracks(const ::std::string& value);
  void add_click_tracks(const char* value);
  void add_click_tracks(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& click_tracks() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_click_tracks();

  // @@protoc_insertion_point(class_scope:protocol.MAX.NativeAd.Creative.Link)
 private:
  inline void set_has_click_url();
  inline void clear_has_click_url();
  inline void set_has_deep_link();
  inline void clear_has_deep_link();
  inline void set_has_landing_type();
  inline void clear_has_landing_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr click_url_;
  ::google::protobuf::internal::ArenaStringPtr deep_link_;
  ::google::protobuf::RepeatedPtrField< ::std::string> content_click_tracks_;
  ::google::protobuf::RepeatedPtrField< ::std::string> click_tracks_;
  ::google::protobuf::int32 landing_type_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static NativeAd_Creative_Link* default_instance_;
};
// -------------------------------------------------------------------

class NativeAd_Creative : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.NativeAd.Creative) */ {
 public:
  NativeAd_Creative();
  virtual ~NativeAd_Creative();

  NativeAd_Creative(const NativeAd_Creative& from);

  inline NativeAd_Creative& operator=(const NativeAd_Creative& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NativeAd_Creative& default_instance();

  void Swap(NativeAd_Creative* other);

  // implements Message ----------------------------------------------

  inline NativeAd_Creative* New() const { return New(NULL); }

  NativeAd_Creative* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NativeAd_Creative& from);
  void MergeFrom(const NativeAd_Creative& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NativeAd_Creative* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NativeAd_Creative_Image Image;
  typedef NativeAd_Creative_Link Link;

  // accessors -------------------------------------------------------

  // optional int32 template_id = 9;
  bool has_template_id() const;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 9;
  ::google::protobuf::int32 template_id() const;
  void set_template_id(::google::protobuf::int32 value);

  // optional string title = 1;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string sub_title = 2;
  bool has_sub_title() const;
  void clear_sub_title();
  static const int kSubTitleFieldNumber = 2;
  const ::std::string& sub_title() const;
  void set_sub_title(const ::std::string& value);
  void set_sub_title(const char* value);
  void set_sub_title(const char* value, size_t size);
  ::std::string* mutable_sub_title();
  ::std::string* release_sub_title();
  void set_allocated_sub_title(::std::string* sub_title);

  // optional string description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string button_name = 4;
  bool has_button_name() const;
  void clear_button_name();
  static const int kButtonNameFieldNumber = 4;
  const ::std::string& button_name() const;
  void set_button_name(const ::std::string& value);
  void set_button_name(const char* value);
  void set_button_name(const char* value, size_t size);
  ::std::string* mutable_button_name();
  ::std::string* release_button_name();
  void set_allocated_button_name(::std::string* button_name);

  // optional .protocol.MAX.NativeAd.Creative.Image content_image = 5;
  bool has_content_image() const;
  void clear_content_image();
  static const int kContentImageFieldNumber = 5;
  const ::protocol::MAX::NativeAd_Creative_Image& content_image() const;
  ::protocol::MAX::NativeAd_Creative_Image* mutable_content_image();
  ::protocol::MAX::NativeAd_Creative_Image* release_content_image();
  void set_allocated_content_image(::protocol::MAX::NativeAd_Creative_Image* content_image);

  // repeated .protocol.MAX.NativeAd.Creative.Image multi_images = 12;
  int multi_images_size() const;
  void clear_multi_images();
  static const int kMultiImagesFieldNumber = 12;
  const ::protocol::MAX::NativeAd_Creative_Image& multi_images(int index) const;
  ::protocol::MAX::NativeAd_Creative_Image* mutable_multi_images(int index);
  ::protocol::MAX::NativeAd_Creative_Image* add_multi_images();
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative_Image >*
      mutable_multi_images();
  const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative_Image >&
      multi_images() const;

  // optional .protocol.MAX.NativeAd.Creative.Image linked_image = 8;
  bool has_linked_image() const;
  void clear_linked_image();
  static const int kLinkedImageFieldNumber = 8;
  const ::protocol::MAX::NativeAd_Creative_Image& linked_image() const;
  ::protocol::MAX::NativeAd_Creative_Image* mutable_linked_image();
  ::protocol::MAX::NativeAd_Creative_Image* release_linked_image();
  void set_allocated_linked_image(::protocol::MAX::NativeAd_Creative_Image* linked_image);

  // optional .protocol.MAX.NativeAd.Creative.Image logo = 6;
  bool has_logo() const;
  void clear_logo();
  static const int kLogoFieldNumber = 6;
  const ::protocol::MAX::NativeAd_Creative_Image& logo() const;
  ::protocol::MAX::NativeAd_Creative_Image* mutable_logo();
  ::protocol::MAX::NativeAd_Creative_Image* release_logo();
  void set_allocated_logo(::protocol::MAX::NativeAd_Creative_Image* logo);

  // optional .protocol.MAX.NativeAd.Creative.Link link = 7;
  bool has_link() const;
  void clear_link();
  static const int kLinkFieldNumber = 7;
  const ::protocol::MAX::NativeAd_Creative_Link& link() const;
  ::protocol::MAX::NativeAd_Creative_Link* mutable_link();
  ::protocol::MAX::NativeAd_Creative_Link* release_link();
  void set_allocated_link(::protocol::MAX::NativeAd_Creative_Link* link);

  // @@protoc_insertion_point(class_scope:protocol.MAX.NativeAd.Creative)
 private:
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_sub_title();
  inline void clear_has_sub_title();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_button_name();
  inline void clear_has_button_name();
  inline void set_has_content_image();
  inline void clear_has_content_image();
  inline void set_has_linked_image();
  inline void clear_has_linked_image();
  inline void set_has_logo();
  inline void clear_has_logo();
  inline void set_has_link();
  inline void clear_has_link();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr sub_title_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr button_name_;
  ::protocol::MAX::NativeAd_Creative_Image* content_image_;
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative_Image > multi_images_;
  ::protocol::MAX::NativeAd_Creative_Image* linked_image_;
  ::protocol::MAX::NativeAd_Creative_Image* logo_;
  ::protocol::MAX::NativeAd_Creative_Link* link_;
  ::google::protobuf::int32 template_id_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static NativeAd_Creative* default_instance_;
};
// -------------------------------------------------------------------

class NativeAd_AppAttr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.NativeAd.AppAttr) */ {
 public:
  NativeAd_AppAttr();
  virtual ~NativeAd_AppAttr();

  NativeAd_AppAttr(const NativeAd_AppAttr& from);

  inline NativeAd_AppAttr& operator=(const NativeAd_AppAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NativeAd_AppAttr& default_instance();

  void Swap(NativeAd_AppAttr* other);

  // implements Message ----------------------------------------------

  inline NativeAd_AppAttr* New() const { return New(NULL); }

  NativeAd_AppAttr* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NativeAd_AppAttr& from);
  void MergeFrom(const NativeAd_AppAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NativeAd_AppAttr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string app_name = 1;
  bool has_app_name() const;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // optional string app_pkg = 2;
  bool has_app_pkg() const;
  void clear_app_pkg();
  static const int kAppPkgFieldNumber = 2;
  const ::std::string& app_pkg() const;
  void set_app_pkg(const ::std::string& value);
  void set_app_pkg(const char* value);
  void set_app_pkg(const char* value, size_t size);
  ::std::string* mutable_app_pkg();
  ::std::string* release_app_pkg();
  void set_allocated_app_pkg(::std::string* app_pkg);

  // optional string app_md5 = 3;
  bool has_app_md5() const;
  void clear_app_md5();
  static const int kAppMd5FieldNumber = 3;
  const ::std::string& app_md5() const;
  void set_app_md5(const ::std::string& value);
  void set_app_md5(const char* value);
  void set_app_md5(const char* value, size_t size);
  ::std::string* mutable_app_md5();
  ::std::string* release_app_md5();
  void set_allocated_app_md5(::std::string* app_md5);

  // optional int32 app_vc = 4;
  bool has_app_vc() const;
  void clear_app_vc();
  static const int kAppVcFieldNumber = 4;
  ::google::protobuf::int32 app_vc() const;
  void set_app_vc(::google::protobuf::int32 value);

  // optional int32 app_size = 5;
  bool has_app_size() const;
  void clear_app_size();
  static const int kAppSizeFieldNumber = 5;
  ::google::protobuf::int32 app_size() const;
  void set_app_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.MAX.NativeAd.AppAttr)
 private:
  inline void set_has_app_name();
  inline void clear_has_app_name();
  inline void set_has_app_pkg();
  inline void clear_has_app_pkg();
  inline void set_has_app_md5();
  inline void clear_has_app_md5();
  inline void set_has_app_vc();
  inline void clear_has_app_vc();
  inline void set_has_app_size();
  inline void clear_has_app_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr app_pkg_;
  ::google::protobuf::internal::ArenaStringPtr app_md5_;
  ::google::protobuf::int32 app_vc_;
  ::google::protobuf::int32 app_size_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static NativeAd_AppAttr* default_instance_;
};
// -------------------------------------------------------------------

class NativeAd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.MAX.NativeAd) */ {
 public:
  NativeAd();
  virtual ~NativeAd();

  NativeAd(const NativeAd& from);

  inline NativeAd& operator=(const NativeAd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NativeAd& default_instance();

  void Swap(NativeAd* other);

  // implements Message ----------------------------------------------

  inline NativeAd* New() const { return New(NULL); }

  NativeAd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NativeAd& from);
  void MergeFrom(const NativeAd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NativeAd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NativeAd_Creative Creative;
  typedef NativeAd_AppAttr AppAttr;

  // accessors -------------------------------------------------------

  // required uint32 max_cpm_price = 1;
  bool has_max_cpm_price() const;
  void clear_max_cpm_price();
  static const int kMaxCpmPriceFieldNumber = 1;
  ::google::protobuf::uint32 max_cpm_price() const;
  void set_max_cpm_price(::google::protobuf::uint32 value);

  // repeated .protocol.MAX.NativeAd.Creative creatives = 2;
  int creatives_size() const;
  void clear_creatives();
  static const int kCreativesFieldNumber = 2;
  const ::protocol::MAX::NativeAd_Creative& creatives(int index) const;
  ::protocol::MAX::NativeAd_Creative* mutable_creatives(int index);
  ::protocol::MAX::NativeAd_Creative* add_creatives();
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative >*
      mutable_creatives();
  const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative >&
      creatives() const;

  // optional int32 template_id = 10;
  bool has_template_id() const;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 10;
  ::google::protobuf::int32 template_id() const;
  void set_template_id(::google::protobuf::int32 value);

  // optional .protocol.MAX.NativeAd.AppAttr app_attr = 9;
  bool has_app_attr() const;
  void clear_app_attr();
  static const int kAppAttrFieldNumber = 9;
  const ::protocol::MAX::NativeAd_AppAttr& app_attr() const;
  ::protocol::MAX::NativeAd_AppAttr* mutable_app_attr();
  ::protocol::MAX::NativeAd_AppAttr* release_app_attr();
  void set_allocated_app_attr(::protocol::MAX::NativeAd_AppAttr* app_attr);

  // repeated string impression_tracks = 3;
  int impression_tracks_size() const;
  void clear_impression_tracks();
  static const int kImpressionTracksFieldNumber = 3;
  const ::std::string& impression_tracks(int index) const;
  ::std::string* mutable_impression_tracks(int index);
  void set_impression_tracks(int index, const ::std::string& value);
  void set_impression_tracks(int index, const char* value);
  void set_impression_tracks(int index, const char* value, size_t size);
  ::std::string* add_impression_tracks();
  void add_impression_tracks(const ::std::string& value);
  void add_impression_tracks(const char* value);
  void add_impression_tracks(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& impression_tracks() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_impression_tracks();

  // repeated int32 category = 4;
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 4;
  ::google::protobuf::int32 category(int index) const;
  void set_category(int index, ::google::protobuf::int32 value);
  void add_category(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_category();

  // repeated string destination_url = 5;
  int destination_url_size() const;
  void clear_destination_url();
  static const int kDestinationUrlFieldNumber = 5;
  const ::std::string& destination_url(int index) const;
  ::std::string* mutable_destination_url(int index);
  void set_destination_url(int index, const ::std::string& value);
  void set_destination_url(int index, const char* value);
  void set_destination_url(int index, const char* value, size_t size);
  ::std::string* add_destination_url();
  void add_destination_url(const ::std::string& value);
  void add_destination_url(const char* value);
  void add_destination_url(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& destination_url() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_destination_url();

  // optional string advertiser_id = 6;
  bool has_advertiser_id() const;
  void clear_advertiser_id();
  static const int kAdvertiserIdFieldNumber = 6;
  const ::std::string& advertiser_id() const;
  void set_advertiser_id(const ::std::string& value);
  void set_advertiser_id(const char* value);
  void set_advertiser_id(const char* value, size_t size);
  ::std::string* mutable_advertiser_id();
  ::std::string* release_advertiser_id();
  void set_allocated_advertiser_id(::std::string* advertiser_id);

  // optional string creative_id = 7;
  bool has_creative_id() const;
  void clear_creative_id();
  static const int kCreativeIdFieldNumber = 7;
  const ::std::string& creative_id() const;
  void set_creative_id(const ::std::string& value);
  void set_creative_id(const char* value);
  void set_creative_id(const char* value, size_t size);
  ::std::string* mutable_creative_id();
  ::std::string* release_creative_id();
  void set_allocated_creative_id(::std::string* creative_id);

  // optional int64 deal_id = 8;
  bool has_deal_id() const;
  void clear_deal_id();
  static const int kDealIdFieldNumber = 8;
  ::google::protobuf::int64 deal_id() const;
  void set_deal_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protocol.MAX.NativeAd)
 private:
  inline void set_has_max_cpm_price();
  inline void clear_has_max_cpm_price();
  inline void set_has_template_id();
  inline void clear_has_template_id();
  inline void set_has_app_attr();
  inline void clear_has_app_attr();
  inline void set_has_advertiser_id();
  inline void clear_has_advertiser_id();
  inline void set_has_creative_id();
  inline void clear_has_creative_id();
  inline void set_has_deal_id();
  inline void clear_has_deal_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative > creatives_;
  ::google::protobuf::uint32 max_cpm_price_;
  ::google::protobuf::int32 template_id_;
  ::protocol::MAX::NativeAd_AppAttr* app_attr_;
  ::google::protobuf::RepeatedPtrField< ::std::string> impression_tracks_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > category_;
  ::google::protobuf::RepeatedPtrField< ::std::string> destination_url_;
  ::google::protobuf::internal::ArenaStringPtr advertiser_id_;
  ::google::protobuf::internal::ArenaStringPtr creative_id_;
  ::google::protobuf::int64 deal_id_;
  friend void  protobuf_AddDesc_max_2dbidding_2eproto();
  friend void protobuf_AssignDesc_max_2dbidding_2eproto();
  friend void protobuf_ShutdownFile_max_2dbidding_2eproto();

  void InitAsDefaultInstance();
  static NativeAd* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BidRequest_UserCategory

// required int32 id = 1;
inline bool BidRequest_UserCategory::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_UserCategory::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_UserCategory::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_UserCategory::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BidRequest_UserCategory::id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.UserCategory.id)
  return id_;
}
inline void BidRequest_UserCategory::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.UserCategory.id)
}

// required int32 weight = 2 [default = 1000];
inline bool BidRequest_UserCategory::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_UserCategory::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_UserCategory::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_UserCategory::clear_weight() {
  weight_ = 1000;
  clear_has_weight();
}
inline ::google::protobuf::int32 BidRequest_UserCategory::weight() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.UserCategory.weight)
  return weight_;
}
inline void BidRequest_UserCategory::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.UserCategory.weight)
}

// -------------------------------------------------------------------

// BidRequest_ContentCategory

// required int32 id = 1;
inline bool BidRequest_ContentCategory::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_ContentCategory::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_ContentCategory::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_ContentCategory::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BidRequest_ContentCategory::id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.ContentCategory.id)
  return id_;
}
inline void BidRequest_ContentCategory::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.ContentCategory.id)
}

// required int32 weight = 2 [default = 1000];
inline bool BidRequest_ContentCategory::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_ContentCategory::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_ContentCategory::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_ContentCategory::clear_weight() {
  weight_ = 1000;
  clear_has_weight();
}
inline ::google::protobuf::int32 BidRequest_ContentCategory::weight() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.ContentCategory.weight)
  return weight_;
}
inline void BidRequest_ContentCategory::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.ContentCategory.weight)
}

// -------------------------------------------------------------------

// BidRequest_AdSlot_Native

// optional uint32 ad_num = 1;
inline bool BidRequest_AdSlot_Native::has_ad_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_Native::set_has_ad_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_Native::clear_has_ad_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_Native::clear_ad_num() {
  ad_num_ = 0u;
  clear_has_ad_num();
}
inline ::google::protobuf::uint32 BidRequest_AdSlot_Native::ad_num() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Native.ad_num)
  return ad_num_;
}
inline void BidRequest_AdSlot_Native::set_ad_num(::google::protobuf::uint32 value) {
  set_has_ad_num();
  ad_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Native.ad_num)
}

// repeated int32 landing_type = 2;
inline int BidRequest_AdSlot_Native::landing_type_size() const {
  return landing_type_.size();
}
inline void BidRequest_AdSlot_Native::clear_landing_type() {
  landing_type_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_Native::landing_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Native.landing_type)
  return landing_type_.Get(index);
}
inline void BidRequest_AdSlot_Native::set_landing_type(int index, ::google::protobuf::int32 value) {
  landing_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Native.landing_type)
}
inline void BidRequest_AdSlot_Native::add_landing_type(::google::protobuf::int32 value) {
  landing_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.AdSlot.Native.landing_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot_Native::landing_type() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.AdSlot.Native.landing_type)
  return landing_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot_Native::mutable_landing_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.AdSlot.Native.landing_type)
  return &landing_type_;
}

// repeated int32 template_id = 3;
inline int BidRequest_AdSlot_Native::template_id_size() const {
  return template_id_.size();
}
inline void BidRequest_AdSlot_Native::clear_template_id() {
  template_id_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_Native::template_id(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Native.template_id)
  return template_id_.Get(index);
}
inline void BidRequest_AdSlot_Native::set_template_id(int index, ::google::protobuf::int32 value) {
  template_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Native.template_id)
}
inline void BidRequest_AdSlot_Native::add_template_id(::google::protobuf::int32 value) {
  template_id_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.AdSlot.Native.template_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot_Native::template_id() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.AdSlot.Native.template_id)
  return template_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot_Native::mutable_template_id() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.AdSlot.Native.template_id)
  return &template_id_;
}

// -------------------------------------------------------------------

// BidRequest_AdSlot_Deal

// required int64 deal_id = 1;
inline bool BidRequest_AdSlot_Deal::has_deal_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_Deal::set_has_deal_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_Deal::clear_has_deal_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_Deal::clear_deal_id() {
  deal_id_ = GOOGLE_LONGLONG(0);
  clear_has_deal_id();
}
inline ::google::protobuf::int64 BidRequest_AdSlot_Deal::deal_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Deal.deal_id)
  return deal_id_;
}
inline void BidRequest_AdSlot_Deal::set_deal_id(::google::protobuf::int64 value) {
  set_has_deal_id();
  deal_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Deal.deal_id)
}

// required .protocol.MAX.BidRequest.AdSlot.Deal.DealType deal_type = 2 [default = UNKNOWN_DEAL_TYPE];
inline bool BidRequest_AdSlot_Deal::has_deal_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_Deal::set_has_deal_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_Deal::clear_has_deal_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_Deal::clear_deal_type() {
  deal_type_ = 0;
  clear_has_deal_type();
}
inline ::protocol::MAX::BidRequest_AdSlot_Deal_DealType BidRequest_AdSlot_Deal::deal_type() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Deal.deal_type)
  return static_cast< ::protocol::MAX::BidRequest_AdSlot_Deal_DealType >(deal_type_);
}
inline void BidRequest_AdSlot_Deal::set_deal_type(::protocol::MAX::BidRequest_AdSlot_Deal_DealType value) {
  assert(::protocol::MAX::BidRequest_AdSlot_Deal_DealType_IsValid(value));
  set_has_deal_type();
  deal_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Deal.deal_type)
}

// optional uint32 price = 4;
inline bool BidRequest_AdSlot_Deal::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_AdSlot_Deal::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_AdSlot_Deal::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_AdSlot_Deal::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 BidRequest_AdSlot_Deal::price() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Deal.price)
  return price_;
}
inline void BidRequest_AdSlot_Deal::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Deal.price)
}

// optional string date = 3;
inline bool BidRequest_AdSlot_Deal::has_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_AdSlot_Deal::set_has_date() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_AdSlot_Deal::clear_has_date() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_AdSlot_Deal::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& BidRequest_AdSlot_Deal::date() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Deal.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_AdSlot_Deal::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Deal.date)
}
inline void BidRequest_AdSlot_Deal::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.AdSlot.Deal.date)
}
inline void BidRequest_AdSlot_Deal::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.AdSlot.Deal.date)
}
inline ::std::string* BidRequest_AdSlot_Deal::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.AdSlot.Deal.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_AdSlot_Deal::release_date() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.AdSlot.Deal.date)
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_AdSlot_Deal::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.AdSlot.Deal.date)
}

// -------------------------------------------------------------------

// BidRequest_AdSlot

// required uint32 id = 1;
inline bool BidRequest_AdSlot::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BidRequest_AdSlot::id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.id)
  return id_;
}
inline void BidRequest_AdSlot::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.id)
}

// optional string pid = 2;
inline bool BidRequest_AdSlot::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
inline const ::std::string& BidRequest_AdSlot::pid() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.pid)
  return pid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_AdSlot::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.pid)
}
inline void BidRequest_AdSlot::set_pid(const char* value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.AdSlot.pid)
}
inline void BidRequest_AdSlot::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.AdSlot.pid)
}
inline ::std::string* BidRequest_AdSlot::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.AdSlot.pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_AdSlot::release_pid() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.AdSlot.pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_AdSlot::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.AdSlot.pid)
}

// optional int32 width = 3;
inline bool BidRequest_AdSlot::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_AdSlot::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_AdSlot::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_AdSlot::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::width() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.width)
  return width_;
}
inline void BidRequest_AdSlot::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.width)
}

// optional int32 height = 4;
inline bool BidRequest_AdSlot::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_AdSlot::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_AdSlot::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_AdSlot::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::height() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.height)
  return height_;
}
inline void BidRequest_AdSlot::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.height)
}

// repeated uint32 view_type = 5;
inline int BidRequest_AdSlot::view_type_size() const {
  return view_type_.size();
}
inline void BidRequest_AdSlot::clear_view_type() {
  view_type_.Clear();
}
inline ::google::protobuf::uint32 BidRequest_AdSlot::view_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.view_type)
  return view_type_.Get(index);
}
inline void BidRequest_AdSlot::set_view_type(int index, ::google::protobuf::uint32 value) {
  view_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.view_type)
}
inline void BidRequest_AdSlot::add_view_type(::google::protobuf::uint32 value) {
  view_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.AdSlot.view_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BidRequest_AdSlot::view_type() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.AdSlot.view_type)
  return view_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BidRequest_AdSlot::mutable_view_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.AdSlot.view_type)
  return &view_type_;
}

// optional uint32 min_cpm_price = 6;
inline bool BidRequest_AdSlot::has_min_cpm_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_AdSlot::set_has_min_cpm_price() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_AdSlot::clear_has_min_cpm_price() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_AdSlot::clear_min_cpm_price() {
  min_cpm_price_ = 0u;
  clear_has_min_cpm_price();
}
inline ::google::protobuf::uint32 BidRequest_AdSlot::min_cpm_price() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.min_cpm_price)
  return min_cpm_price_;
}
inline void BidRequest_AdSlot::set_min_cpm_price(::google::protobuf::uint32 value) {
  set_has_min_cpm_price();
  min_cpm_price_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.min_cpm_price)
}

// optional .protocol.MAX.BidRequest.AdSlot.SlotVisibility slot_visibility = 7 [default = NO_DETECTION];
inline bool BidRequest_AdSlot::has_slot_visibility() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidRequest_AdSlot::set_has_slot_visibility() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidRequest_AdSlot::clear_has_slot_visibility() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidRequest_AdSlot::clear_slot_visibility() {
  slot_visibility_ = 0;
  clear_has_slot_visibility();
}
inline ::protocol::MAX::BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot::slot_visibility() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.slot_visibility)
  return static_cast< ::protocol::MAX::BidRequest_AdSlot_SlotVisibility >(slot_visibility_);
}
inline void BidRequest_AdSlot::set_slot_visibility(::protocol::MAX::BidRequest_AdSlot_SlotVisibility value) {
  assert(::protocol::MAX::BidRequest_AdSlot_SlotVisibility_IsValid(value));
  set_has_slot_visibility();
  slot_visibility_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.slot_visibility)
}

// optional .protocol.MAX.BidRequest.AdSlot.Native native = 8;
inline bool BidRequest_AdSlot::has_native() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidRequest_AdSlot::set_has_native() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidRequest_AdSlot::clear_has_native() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidRequest_AdSlot::clear_native() {
  if (native_ != NULL) native_->::protocol::MAX::BidRequest_AdSlot_Native::Clear();
  clear_has_native();
}
inline const ::protocol::MAX::BidRequest_AdSlot_Native& BidRequest_AdSlot::native() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.native)
  return native_ != NULL ? *native_ : *default_instance_->native_;
}
inline ::protocol::MAX::BidRequest_AdSlot_Native* BidRequest_AdSlot::mutable_native() {
  set_has_native();
  if (native_ == NULL) {
    native_ = new ::protocol::MAX::BidRequest_AdSlot_Native;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.AdSlot.native)
  return native_;
}
inline ::protocol::MAX::BidRequest_AdSlot_Native* BidRequest_AdSlot::release_native() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.AdSlot.native)
  clear_has_native();
  ::protocol::MAX::BidRequest_AdSlot_Native* temp = native_;
  native_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot::set_allocated_native(::protocol::MAX::BidRequest_AdSlot_Native* native) {
  delete native_;
  native_ = native;
  if (native) {
    set_has_native();
  } else {
    clear_has_native();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.AdSlot.native)
}

// repeated .protocol.MAX.BidRequest.AdSlot.Deal deals = 9;
inline int BidRequest_AdSlot::deals_size() const {
  return deals_.size();
}
inline void BidRequest_AdSlot::clear_deals() {
  deals_.Clear();
}
inline const ::protocol::MAX::BidRequest_AdSlot_Deal& BidRequest_AdSlot::deals(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.deals)
  return deals_.Get(index);
}
inline ::protocol::MAX::BidRequest_AdSlot_Deal* BidRequest_AdSlot::mutable_deals(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.AdSlot.deals)
  return deals_.Mutable(index);
}
inline ::protocol::MAX::BidRequest_AdSlot_Deal* BidRequest_AdSlot::add_deals() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.AdSlot.deals)
  return deals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot_Deal >*
BidRequest_AdSlot::mutable_deals() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.AdSlot.deals)
  return &deals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot_Deal >&
BidRequest_AdSlot::deals() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.AdSlot.deals)
  return deals_;
}

// -------------------------------------------------------------------

// BidRequest_Mobile_Device

// optional string platform = 1;
inline bool BidRequest_Mobile_Device::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile_Device::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile_Device::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform();
}
inline const ::std::string& BidRequest_Mobile_Device::platform() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.platform)
  return platform_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_platform(const ::std::string& value) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.platform)
}
inline void BidRequest_Mobile_Device::set_platform(const char* value) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.platform)
}
inline void BidRequest_Mobile_Device::set_platform(const char* value, size_t size) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.platform)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_platform() {
  set_has_platform();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_platform() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.platform)
  clear_has_platform();
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    set_has_platform();
  } else {
    clear_has_platform();
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.platform)
}

// optional string model = 3;
inline bool BidRequest_Mobile_Device::has_model() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_model() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile_Device::clear_has_model() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile_Device::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model();
}
inline const ::std::string& BidRequest_Mobile_Device::model() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_model(const ::std::string& value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.model)
}
inline void BidRequest_Mobile_Device::set_model(const char* value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.model)
}
inline void BidRequest_Mobile_Device::set_model(const char* value, size_t size) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.model)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_model() {
  set_has_model();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_model() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.model)
  clear_has_model();
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    set_has_model();
  } else {
    clear_has_model();
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.model)
}

// optional string os = 4;
inline bool BidRequest_Mobile_Device::has_os() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_os() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Mobile_Device::clear_has_os() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Mobile_Device::clear_os() {
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os();
}
inline const ::std::string& BidRequest_Mobile_Device::os() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.os)
  return os_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_os(const ::std::string& value) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.os)
}
inline void BidRequest_Mobile_Device::set_os(const char* value) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.os)
}
inline void BidRequest_Mobile_Device::set_os(const char* value, size_t size) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.os)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_os() {
  set_has_os();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.os)
  return os_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_os() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.os)
  clear_has_os();
  return os_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_os(::std::string* os) {
  if (os != NULL) {
    set_has_os();
  } else {
    clear_has_os();
  }
  os_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.os)
}

// optional string os_version = 5;
inline bool BidRequest_Mobile_Device::has_os_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_os_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_Mobile_Device::clear_has_os_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_Mobile_Device::clear_os_version() {
  os_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os_version();
}
inline const ::std::string& BidRequest_Mobile_Device::os_version() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.os_version)
  return os_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_os_version(const ::std::string& value) {
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.os_version)
}
inline void BidRequest_Mobile_Device::set_os_version(const char* value) {
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.os_version)
}
inline void BidRequest_Mobile_Device::set_os_version(const char* value, size_t size) {
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.os_version)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_os_version() {
  set_has_os_version();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.os_version)
  return os_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_os_version() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.os_version)
  clear_has_os_version();
  return os_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_os_version(::std::string* os_version) {
  if (os_version != NULL) {
    set_has_os_version();
  } else {
    clear_has_os_version();
  }
  os_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_version);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.os_version)
}

// optional uint32 network = 6;
inline bool BidRequest_Mobile_Device::has_network() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_network() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_Mobile_Device::clear_has_network() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_Mobile_Device::clear_network() {
  network_ = 0u;
  clear_has_network();
}
inline ::google::protobuf::uint32 BidRequest_Mobile_Device::network() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.network)
  return network_;
}
inline void BidRequest_Mobile_Device::set_network(::google::protobuf::uint32 value) {
  set_has_network();
  network_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.network)
}

// optional int32 carrier_id = 7;
inline bool BidRequest_Mobile_Device::has_carrier_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_carrier_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_Mobile_Device::clear_has_carrier_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_Mobile_Device::clear_carrier_id() {
  carrier_id_ = 0;
  clear_has_carrier_id();
}
inline ::google::protobuf::int32 BidRequest_Mobile_Device::carrier_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.carrier_id)
  return carrier_id_;
}
inline void BidRequest_Mobile_Device::set_carrier_id(::google::protobuf::int32 value) {
  set_has_carrier_id();
  carrier_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.carrier_id)
}

// optional string longitude = 8;
inline bool BidRequest_Mobile_Device::has_longitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_longitude() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidRequest_Mobile_Device::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidRequest_Mobile_Device::clear_longitude() {
  longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_longitude();
}
inline const ::std::string& BidRequest_Mobile_Device::longitude() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.longitude)
  return longitude_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_longitude(const ::std::string& value) {
  set_has_longitude();
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.longitude)
}
inline void BidRequest_Mobile_Device::set_longitude(const char* value) {
  set_has_longitude();
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.longitude)
}
inline void BidRequest_Mobile_Device::set_longitude(const char* value, size_t size) {
  set_has_longitude();
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.longitude)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_longitude() {
  set_has_longitude();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.longitude)
  return longitude_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_longitude() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.longitude)
  clear_has_longitude();
  return longitude_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_longitude(::std::string* longitude) {
  if (longitude != NULL) {
    set_has_longitude();
  } else {
    clear_has_longitude();
  }
  longitude_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), longitude);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.longitude)
}

// optional string latitude = 9;
inline bool BidRequest_Mobile_Device::has_latitude() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_latitude() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidRequest_Mobile_Device::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidRequest_Mobile_Device::clear_latitude() {
  latitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_latitude();
}
inline const ::std::string& BidRequest_Mobile_Device::latitude() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.latitude)
  return latitude_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_latitude(const ::std::string& value) {
  set_has_latitude();
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.latitude)
}
inline void BidRequest_Mobile_Device::set_latitude(const char* value) {
  set_has_latitude();
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.latitude)
}
inline void BidRequest_Mobile_Device::set_latitude(const char* value, size_t size) {
  set_has_latitude();
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.latitude)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_latitude() {
  set_has_latitude();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.latitude)
  return latitude_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_latitude() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.latitude)
  clear_has_latitude();
  return latitude_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_latitude(::std::string* latitude) {
  if (latitude != NULL) {
    set_has_latitude();
  } else {
    clear_has_latitude();
  }
  latitude_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), latitude);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.latitude)
}

// optional int32 screen_width = 10;
inline bool BidRequest_Mobile_Device::has_screen_width() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_screen_width() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BidRequest_Mobile_Device::clear_has_screen_width() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BidRequest_Mobile_Device::clear_screen_width() {
  screen_width_ = 0;
  clear_has_screen_width();
}
inline ::google::protobuf::int32 BidRequest_Mobile_Device::screen_width() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.screen_width)
  return screen_width_;
}
inline void BidRequest_Mobile_Device::set_screen_width(::google::protobuf::int32 value) {
  set_has_screen_width();
  screen_width_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.screen_width)
}

// optional int32 screen_height = 11;
inline bool BidRequest_Mobile_Device::has_screen_height() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_screen_height() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidRequest_Mobile_Device::clear_has_screen_height() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidRequest_Mobile_Device::clear_screen_height() {
  screen_height_ = 0;
  clear_has_screen_height();
}
inline ::google::protobuf::int32 BidRequest_Mobile_Device::screen_height() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.screen_height)
  return screen_height_;
}
inline void BidRequest_Mobile_Device::set_screen_height(::google::protobuf::int32 value) {
  set_has_screen_height();
  screen_height_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.screen_height)
}

// optional .protocol.MAX.BidRequest.Mobile.Device.ScreenOrientation screen_orientation = 12 [default = SCREEN_ORIENTATION_UNKNOWN];
inline bool BidRequest_Mobile_Device::has_screen_orientation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_screen_orientation() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BidRequest_Mobile_Device::clear_has_screen_orientation() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BidRequest_Mobile_Device::clear_screen_orientation() {
  screen_orientation_ = 0;
  clear_has_screen_orientation();
}
inline ::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation BidRequest_Mobile_Device::screen_orientation() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.screen_orientation)
  return static_cast< ::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation >(screen_orientation_);
}
inline void BidRequest_Mobile_Device::set_screen_orientation(::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation value) {
  assert(::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation_IsValid(value));
  set_has_screen_orientation();
  screen_orientation_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.screen_orientation)
}

// optional string idfa = 13;
inline bool BidRequest_Mobile_Device::has_idfa() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_idfa() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidRequest_Mobile_Device::clear_has_idfa() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidRequest_Mobile_Device::clear_idfa() {
  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idfa();
}
inline const ::std::string& BidRequest_Mobile_Device::idfa() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.idfa)
  return idfa_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_idfa(const ::std::string& value) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.idfa)
}
inline void BidRequest_Mobile_Device::set_idfa(const char* value) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.idfa)
}
inline void BidRequest_Mobile_Device::set_idfa(const char* value, size_t size) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.idfa)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_idfa() {
  set_has_idfa();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.idfa)
  return idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_idfa() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.idfa)
  clear_has_idfa();
  return idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_idfa(::std::string* idfa) {
  if (idfa != NULL) {
    set_has_idfa();
  } else {
    clear_has_idfa();
  }
  idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idfa);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.idfa)
}

// optional string hashed_idfa = 14;
inline bool BidRequest_Mobile_Device::has_hashed_idfa() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_hashed_idfa() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BidRequest_Mobile_Device::clear_has_hashed_idfa() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BidRequest_Mobile_Device::clear_hashed_idfa() {
  hashed_idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hashed_idfa();
}
inline const ::std::string& BidRequest_Mobile_Device::hashed_idfa() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
  return hashed_idfa_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_hashed_idfa(const ::std::string& value) {
  set_has_hashed_idfa();
  hashed_idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
}
inline void BidRequest_Mobile_Device::set_hashed_idfa(const char* value) {
  set_has_hashed_idfa();
  hashed_idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
}
inline void BidRequest_Mobile_Device::set_hashed_idfa(const char* value, size_t size) {
  set_has_hashed_idfa();
  hashed_idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_hashed_idfa() {
  set_has_hashed_idfa();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
  return hashed_idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_hashed_idfa() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
  clear_has_hashed_idfa();
  return hashed_idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_hashed_idfa(::std::string* hashed_idfa) {
  if (hashed_idfa != NULL) {
    set_has_hashed_idfa();
  } else {
    clear_has_hashed_idfa();
  }
  hashed_idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashed_idfa);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
}

// optional string imei = 16;
inline bool BidRequest_Mobile_Device::has_imei() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_imei() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidRequest_Mobile_Device::clear_has_imei() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidRequest_Mobile_Device::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& BidRequest_Mobile_Device::imei() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.imei)
  return imei_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.imei)
}
inline void BidRequest_Mobile_Device::set_imei(const char* value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.imei)
}
inline void BidRequest_Mobile_Device::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.imei)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_imei() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.imei)
}

// optional string hashed_imei = 15;
inline bool BidRequest_Mobile_Device::has_hashed_imei() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_hashed_imei() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BidRequest_Mobile_Device::clear_has_hashed_imei() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BidRequest_Mobile_Device::clear_hashed_imei() {
  hashed_imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hashed_imei();
}
inline const ::std::string& BidRequest_Mobile_Device::hashed_imei() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
  return hashed_imei_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_hashed_imei(const ::std::string& value) {
  set_has_hashed_imei();
  hashed_imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
}
inline void BidRequest_Mobile_Device::set_hashed_imei(const char* value) {
  set_has_hashed_imei();
  hashed_imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
}
inline void BidRequest_Mobile_Device::set_hashed_imei(const char* value, size_t size) {
  set_has_hashed_imei();
  hashed_imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_hashed_imei() {
  set_has_hashed_imei();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
  return hashed_imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_hashed_imei() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
  clear_has_hashed_imei();
  return hashed_imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_hashed_imei(::std::string* hashed_imei) {
  if (hashed_imei != NULL) {
    set_has_hashed_imei();
  } else {
    clear_has_hashed_imei();
  }
  hashed_imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashed_imei);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
}

// optional string android_id = 17;
inline bool BidRequest_Mobile_Device::has_android_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_android_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BidRequest_Mobile_Device::clear_has_android_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BidRequest_Mobile_Device::clear_android_id() {
  android_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_android_id();
}
inline const ::std::string& BidRequest_Mobile_Device::android_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.android_id)
  return android_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_android_id(const ::std::string& value) {
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.android_id)
}
inline void BidRequest_Mobile_Device::set_android_id(const char* value) {
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.android_id)
}
inline void BidRequest_Mobile_Device::set_android_id(const char* value, size_t size) {
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.android_id)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_android_id() {
  set_has_android_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.android_id)
  return android_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_android_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.android_id)
  clear_has_android_id();
  return android_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_android_id(::std::string* android_id) {
  if (android_id != NULL) {
    set_has_android_id();
  } else {
    clear_has_android_id();
  }
  android_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), android_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.android_id)
}

// optional string hashed_android_id = 18;
inline bool BidRequest_Mobile_Device::has_hashed_android_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_hashed_android_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BidRequest_Mobile_Device::clear_has_hashed_android_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BidRequest_Mobile_Device::clear_hashed_android_id() {
  hashed_android_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hashed_android_id();
}
inline const ::std::string& BidRequest_Mobile_Device::hashed_android_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
  return hashed_android_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_hashed_android_id(const ::std::string& value) {
  set_has_hashed_android_id();
  hashed_android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
}
inline void BidRequest_Mobile_Device::set_hashed_android_id(const char* value) {
  set_has_hashed_android_id();
  hashed_android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
}
inline void BidRequest_Mobile_Device::set_hashed_android_id(const char* value, size_t size) {
  set_has_hashed_android_id();
  hashed_android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_hashed_android_id() {
  set_has_hashed_android_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
  return hashed_android_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_hashed_android_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
  clear_has_hashed_android_id();
  return hashed_android_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_hashed_android_id(::std::string* hashed_android_id) {
  if (hashed_android_id != NULL) {
    set_has_hashed_android_id();
  } else {
    clear_has_hashed_android_id();
  }
  hashed_android_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashed_android_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
}

// optional string mac = 19;
inline bool BidRequest_Mobile_Device::has_mac() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_mac() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BidRequest_Mobile_Device::clear_has_mac() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BidRequest_Mobile_Device::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mac();
}
inline const ::std::string& BidRequest_Mobile_Device::mac() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.mac)
  return mac_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_mac(const ::std::string& value) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.mac)
}
inline void BidRequest_Mobile_Device::set_mac(const char* value) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.mac)
}
inline void BidRequest_Mobile_Device::set_mac(const char* value, size_t size) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.mac)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_mac() {
  set_has_mac();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_mac() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.mac)
  clear_has_mac();
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    set_has_mac();
  } else {
    clear_has_mac();
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.mac)
}

// optional string hashed_mac = 20;
inline bool BidRequest_Mobile_Device::has_hashed_mac() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_hashed_mac() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BidRequest_Mobile_Device::clear_has_hashed_mac() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BidRequest_Mobile_Device::clear_hashed_mac() {
  hashed_mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hashed_mac();
}
inline const ::std::string& BidRequest_Mobile_Device::hashed_mac() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
  return hashed_mac_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_hashed_mac(const ::std::string& value) {
  set_has_hashed_mac();
  hashed_mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
}
inline void BidRequest_Mobile_Device::set_hashed_mac(const char* value) {
  set_has_hashed_mac();
  hashed_mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
}
inline void BidRequest_Mobile_Device::set_hashed_mac(const char* value, size_t size) {
  set_has_hashed_mac();
  hashed_mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_hashed_mac() {
  set_has_hashed_mac();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
  return hashed_mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_hashed_mac() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
  clear_has_hashed_mac();
  return hashed_mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_hashed_mac(::std::string* hashed_mac) {
  if (hashed_mac != NULL) {
    set_has_hashed_mac();
  } else {
    clear_has_hashed_mac();
  }
  hashed_mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashed_mac);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
}

// optional string m2id = 21;
inline bool BidRequest_Mobile_Device::has_m2id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BidRequest_Mobile_Device::set_has_m2id() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BidRequest_Mobile_Device::clear_has_m2id() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BidRequest_Mobile_Device::clear_m2id() {
  m2id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_m2id();
}
inline const ::std::string& BidRequest_Mobile_Device::m2id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.m2id)
  return m2id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_m2id(const ::std::string& value) {
  set_has_m2id();
  m2id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.m2id)
}
inline void BidRequest_Mobile_Device::set_m2id(const char* value) {
  set_has_m2id();
  m2id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.m2id)
}
inline void BidRequest_Mobile_Device::set_m2id(const char* value, size_t size) {
  set_has_m2id();
  m2id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.m2id)
}
inline ::std::string* BidRequest_Mobile_Device::mutable_m2id() {
  set_has_m2id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.m2id)
  return m2id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_Device::release_m2id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.m2id)
  clear_has_m2id();
  return m2id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_Device::set_allocated_m2id(::std::string* m2id) {
  if (m2id != NULL) {
    set_has_m2id();
  } else {
    clear_has_m2id();
  }
  m2id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m2id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.m2id)
}

// -------------------------------------------------------------------

// BidRequest_Mobile

// optional bool is_app = 1;
inline bool BidRequest_Mobile::has_is_app() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile::set_has_is_app() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile::clear_has_is_app() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile::clear_is_app() {
  is_app_ = false;
  clear_has_is_app();
}
inline bool BidRequest_Mobile::is_app() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.is_app)
  return is_app_;
}
inline void BidRequest_Mobile::set_is_app(bool value) {
  set_has_is_app();
  is_app_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.is_app)
}

// optional bool is_fullscreen = 2;
inline bool BidRequest_Mobile::has_is_fullscreen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile::set_has_is_fullscreen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile::clear_has_is_fullscreen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile::clear_is_fullscreen() {
  is_fullscreen_ = false;
  clear_has_is_fullscreen();
}
inline bool BidRequest_Mobile::is_fullscreen() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.is_fullscreen)
  return is_fullscreen_;
}
inline void BidRequest_Mobile::set_is_fullscreen(bool value) {
  set_has_is_fullscreen();
  is_fullscreen_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.is_fullscreen)
}

// optional string app_id = 3;
inline bool BidRequest_Mobile::has_app_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Mobile::set_has_app_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Mobile::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Mobile::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_id();
}
inline const ::std::string& BidRequest_Mobile::app_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.app_id)
  return app_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_app_id(const ::std::string& value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.app_id)
}
inline void BidRequest_Mobile::set_app_id(const char* value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.app_id)
}
inline void BidRequest_Mobile::set_app_id(const char* value, size_t size) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.app_id)
}
inline ::std::string* BidRequest_Mobile::mutable_app_id() {
  set_has_app_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_app_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.app_id)
  clear_has_app_id();
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    set_has_app_id();
  } else {
    clear_has_app_id();
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.app_id)
}

// optional string package_name = 6;
inline bool BidRequest_Mobile::has_package_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_Mobile::set_has_package_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_Mobile::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_Mobile::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& BidRequest_Mobile::package_name() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.package_name)
  return package_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.package_name)
}
inline void BidRequest_Mobile::set_package_name(const char* value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.package_name)
}
inline void BidRequest_Mobile::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.package_name)
}
inline ::std::string* BidRequest_Mobile::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_package_name() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.package_name)
}

// optional .protocol.MAX.BidRequest.Mobile.Device device = 4;
inline bool BidRequest_Mobile::has_device() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_Mobile::set_has_device() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_Mobile::clear_has_device() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_Mobile::clear_device() {
  if (device_ != NULL) device_->::protocol::MAX::BidRequest_Mobile_Device::Clear();
  clear_has_device();
}
inline const ::protocol::MAX::BidRequest_Mobile_Device& BidRequest_Mobile::device() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.device)
  return device_ != NULL ? *device_ : *default_instance_->device_;
}
inline ::protocol::MAX::BidRequest_Mobile_Device* BidRequest_Mobile::mutable_device() {
  set_has_device();
  if (device_ == NULL) {
    device_ = new ::protocol::MAX::BidRequest_Mobile_Device;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.device)
  return device_;
}
inline ::protocol::MAX::BidRequest_Mobile_Device* BidRequest_Mobile::release_device() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.device)
  clear_has_device();
  ::protocol::MAX::BidRequest_Mobile_Device* temp = device_;
  device_ = NULL;
  return temp;
}
inline void BidRequest_Mobile::set_allocated_device(::protocol::MAX::BidRequest_Mobile_Device* device) {
  delete device_;
  device_ = device;
  if (device) {
    set_has_device();
  } else {
    clear_has_device();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.device)
}

// repeated int32 app_category = 5;
inline int BidRequest_Mobile::app_category_size() const {
  return app_category_.size();
}
inline void BidRequest_Mobile::clear_app_category() {
  app_category_.Clear();
}
inline ::google::protobuf::int32 BidRequest_Mobile::app_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.app_category)
  return app_category_.Get(index);
}
inline void BidRequest_Mobile::set_app_category(int index, ::google::protobuf::int32 value) {
  app_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.app_category)
}
inline void BidRequest_Mobile::add_app_category(::google::protobuf::int32 value) {
  app_category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.Mobile.app_category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_Mobile::app_category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.Mobile.app_category)
  return app_category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_Mobile::mutable_app_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.Mobile.app_category)
  return &app_category_;
}

// -------------------------------------------------------------------

// BidRequest

// required string bid = 1;
inline bool BidRequest::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest::clear_bid() {
  bid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bid();
}
inline const ::std::string& BidRequest::bid() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.bid)
  return bid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_bid(const ::std::string& value) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.bid)
}
inline void BidRequest::set_bid(const char* value) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.bid)
}
inline void BidRequest::set_bid(const char* value, size_t size) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.bid)
}
inline ::std::string* BidRequest::mutable_bid() {
  set_has_bid();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.bid)
  return bid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_bid() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.bid)
  clear_has_bid();
  return bid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_bid(::std::string* bid) {
  if (bid != NULL) {
    set_has_bid();
  } else {
    clear_has_bid();
  }
  bid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bid);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.bid)
}

// optional uint32 is_test = 9 [default = 0];
inline bool BidRequest::has_is_test() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest::set_has_is_test() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest::clear_has_is_test() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest::clear_is_test() {
  is_test_ = 0u;
  clear_has_is_test();
}
inline ::google::protobuf::uint32 BidRequest::is_test() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.is_test)
  return is_test_;
}
inline void BidRequest::set_is_test(::google::protobuf::uint32 value) {
  set_has_is_test();
  is_test_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.is_test)
}

// optional string mediav_user_id = 2 [deprecated = true];
inline bool BidRequest::has_mediav_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest::set_has_mediav_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest::clear_has_mediav_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest::clear_mediav_user_id() {
  mediav_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mediav_user_id();
}
inline const ::std::string& BidRequest::mediav_user_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.mediav_user_id)
  return mediav_user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_mediav_user_id(const ::std::string& value) {
  set_has_mediav_user_id();
  mediav_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.mediav_user_id)
}
inline void BidRequest::set_mediav_user_id(const char* value) {
  set_has_mediav_user_id();
  mediav_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.mediav_user_id)
}
inline void BidRequest::set_mediav_user_id(const char* value, size_t size) {
  set_has_mediav_user_id();
  mediav_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.mediav_user_id)
}
inline ::std::string* BidRequest::mutable_mediav_user_id() {
  set_has_mediav_user_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.mediav_user_id)
  return mediav_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_mediav_user_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.mediav_user_id)
  clear_has_mediav_user_id();
  return mediav_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_mediav_user_id(::std::string* mediav_user_id) {
  if (mediav_user_id != NULL) {
    set_has_mediav_user_id();
  } else {
    clear_has_mediav_user_id();
  }
  mediav_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mediav_user_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.mediav_user_id)
}

// optional string mv_user_id = 17;
inline bool BidRequest::has_mv_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest::set_has_mv_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest::clear_has_mv_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest::clear_mv_user_id() {
  mv_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mv_user_id();
}
inline const ::std::string& BidRequest::mv_user_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.mv_user_id)
  return mv_user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_mv_user_id(const ::std::string& value) {
  set_has_mv_user_id();
  mv_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.mv_user_id)
}
inline void BidRequest::set_mv_user_id(const char* value) {
  set_has_mv_user_id();
  mv_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.mv_user_id)
}
inline void BidRequest::set_mv_user_id(const char* value, size_t size) {
  set_has_mv_user_id();
  mv_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.mv_user_id)
}
inline ::std::string* BidRequest::mutable_mv_user_id() {
  set_has_mv_user_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.mv_user_id)
  return mv_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_mv_user_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.mv_user_id)
  clear_has_mv_user_id();
  return mv_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_mv_user_id(::std::string* mv_user_id) {
  if (mv_user_id != NULL) {
    set_has_mv_user_id();
  } else {
    clear_has_mv_user_id();
  }
  mv_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mv_user_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.mv_user_id)
}

// optional string mid = 20;
inline bool BidRequest::has_mid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest::set_has_mid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest::clear_has_mid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest::clear_mid() {
  mid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mid();
}
inline const ::std::string& BidRequest::mid() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.mid)
  return mid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_mid(const ::std::string& value) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.mid)
}
inline void BidRequest::set_mid(const char* value) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.mid)
}
inline void BidRequest::set_mid(const char* value, size_t size) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.mid)
}
inline ::std::string* BidRequest::mutable_mid() {
  set_has_mid();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.mid)
  return mid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_mid() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.mid)
  clear_has_mid();
  return mid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_mid(::std::string* mid) {
  if (mid != NULL) {
    set_has_mid();
  } else {
    clear_has_mid();
  }
  mid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mid);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.mid)
}

// optional string ip = 3;
inline bool BidRequest::has_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest::set_has_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest::clear_has_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& BidRequest::ip() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.ip)
}
inline void BidRequest::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.ip)
}
inline void BidRequest::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.ip)
}
inline ::std::string* BidRequest::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_ip() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.ip)
}

// optional string user_agent = 4;
inline bool BidRequest::has_user_agent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidRequest::set_has_user_agent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidRequest::clear_has_user_agent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidRequest::clear_user_agent() {
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_agent();
}
inline const ::std::string& BidRequest::user_agent() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.user_agent)
  return user_agent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_user_agent(const ::std::string& value) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.user_agent)
}
inline void BidRequest::set_user_agent(const char* value) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.user_agent)
}
inline void BidRequest::set_user_agent(const char* value, size_t size) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.user_agent)
}
inline ::std::string* BidRequest::mutable_user_agent() {
  set_has_user_agent();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.user_agent)
  return user_agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_user_agent() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.user_agent)
  clear_has_user_agent();
  return user_agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_user_agent(::std::string* user_agent) {
  if (user_agent != NULL) {
    set_has_user_agent();
  } else {
    clear_has_user_agent();
  }
  user_agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_agent);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.user_agent)
}

// repeated int32 user_vertical = 10;
inline int BidRequest::user_vertical_size() const {
  return user_vertical_.size();
}
inline void BidRequest::clear_user_vertical() {
  user_vertical_.Clear();
}
inline ::google::protobuf::int32 BidRequest::user_vertical(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.user_vertical)
  return user_vertical_.Get(index);
}
inline void BidRequest::set_user_vertical(int index, ::google::protobuf::int32 value) {
  user_vertical_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.user_vertical)
}
inline void BidRequest::add_user_vertical(::google::protobuf::int32 value) {
  user_vertical_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.user_vertical)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::user_vertical() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.user_vertical)
  return user_vertical_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_user_vertical() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.user_vertical)
  return &user_vertical_;
}

// repeated .protocol.MAX.BidRequest.UserCategory user_category = 19;
inline int BidRequest::user_category_size() const {
  return user_category_.size();
}
inline void BidRequest::clear_user_category() {
  user_category_.Clear();
}
inline const ::protocol::MAX::BidRequest_UserCategory& BidRequest::user_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.user_category)
  return user_category_.Get(index);
}
inline ::protocol::MAX::BidRequest_UserCategory* BidRequest::mutable_user_category(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.user_category)
  return user_category_.Mutable(index);
}
inline ::protocol::MAX::BidRequest_UserCategory* BidRequest::add_user_category() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.user_category)
  return user_category_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_UserCategory >*
BidRequest::mutable_user_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.user_category)
  return &user_category_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_UserCategory >&
BidRequest::user_category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.user_category)
  return user_category_;
}

// optional string url = 5;
inline bool BidRequest::has_url() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidRequest::set_has_url() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& BidRequest::url() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.url)
}
inline void BidRequest::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.url)
}
inline void BidRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.url)
}
inline ::std::string* BidRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_url() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.url)
}

// optional bool is_https = 21;
inline bool BidRequest::has_is_https() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BidRequest::set_has_is_https() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BidRequest::clear_has_is_https() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BidRequest::clear_is_https() {
  is_https_ = false;
  clear_has_is_https();
}
inline bool BidRequest::is_https() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.is_https)
  return is_https_;
}
inline void BidRequest::set_is_https(bool value) {
  set_has_is_https();
  is_https_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.is_https)
}

// optional uint32 adx_type = 6 [default = 0];
inline bool BidRequest::has_adx_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidRequest::set_has_adx_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidRequest::clear_has_adx_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidRequest::clear_adx_type() {
  adx_type_ = 0u;
  clear_has_adx_type();
}
inline ::google::protobuf::uint32 BidRequest::adx_type() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.adx_type)
  return adx_type_;
}
inline void BidRequest::set_adx_type(::google::protobuf::uint32 value) {
  set_has_adx_type();
  adx_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.adx_type)
}

// optional string detected_language = 11;
inline bool BidRequest::has_detected_language() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BidRequest::set_has_detected_language() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BidRequest::clear_has_detected_language() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BidRequest::clear_detected_language() {
  detected_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detected_language();
}
inline const ::std::string& BidRequest::detected_language() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.detected_language)
  return detected_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_detected_language(const ::std::string& value) {
  set_has_detected_language();
  detected_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.detected_language)
}
inline void BidRequest::set_detected_language(const char* value) {
  set_has_detected_language();
  detected_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.detected_language)
}
inline void BidRequest::set_detected_language(const char* value, size_t size) {
  set_has_detected_language();
  detected_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.detected_language)
}
inline ::std::string* BidRequest::mutable_detected_language() {
  set_has_detected_language();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.detected_language)
  return detected_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_detected_language() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.detected_language)
  clear_has_detected_language();
  return detected_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_detected_language(::std::string* detected_language) {
  if (detected_language != NULL) {
    set_has_detected_language();
  } else {
    clear_has_detected_language();
  }
  detected_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detected_language);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.detected_language)
}

// optional int32 publisher_id = 13;
inline bool BidRequest::has_publisher_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidRequest::set_has_publisher_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidRequest::clear_has_publisher_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidRequest::clear_publisher_id() {
  publisher_id_ = 0;
  clear_has_publisher_id();
}
inline ::google::protobuf::int32 BidRequest::publisher_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.publisher_id)
  return publisher_id_;
}
inline void BidRequest::set_publisher_id(::google::protobuf::int32 value) {
  set_has_publisher_id();
  publisher_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.publisher_id)
}

// repeated int32 publisher_category = 14;
inline int BidRequest::publisher_category_size() const {
  return publisher_category_.size();
}
inline void BidRequest::clear_publisher_category() {
  publisher_category_.Clear();
}
inline ::google::protobuf::int32 BidRequest::publisher_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.publisher_category)
  return publisher_category_.Get(index);
}
inline void BidRequest::set_publisher_category(int index, ::google::protobuf::int32 value) {
  publisher_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.publisher_category)
}
inline void BidRequest::add_publisher_category(::google::protobuf::int32 value) {
  publisher_category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.publisher_category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::publisher_category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.publisher_category)
  return publisher_category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_publisher_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.publisher_category)
  return &publisher_category_;
}

// optional int32 publisher_category_version = 15;
inline bool BidRequest::has_publisher_category_version() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BidRequest::set_has_publisher_category_version() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BidRequest::clear_has_publisher_category_version() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BidRequest::clear_publisher_category_version() {
  publisher_category_version_ = 0;
  clear_has_publisher_category_version();
}
inline ::google::protobuf::int32 BidRequest::publisher_category_version() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.publisher_category_version)
  return publisher_category_version_;
}
inline void BidRequest::set_publisher_category_version(::google::protobuf::int32 value) {
  set_has_publisher_category_version();
  publisher_category_version_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.publisher_category_version)
}

// repeated .protocol.MAX.BidRequest.ContentCategory content_category = 18;
inline int BidRequest::content_category_size() const {
  return content_category_.size();
}
inline void BidRequest::clear_content_category() {
  content_category_.Clear();
}
inline const ::protocol::MAX::BidRequest_ContentCategory& BidRequest::content_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.content_category)
  return content_category_.Get(index);
}
inline ::protocol::MAX::BidRequest_ContentCategory* BidRequest::mutable_content_category(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.content_category)
  return content_category_.Mutable(index);
}
inline ::protocol::MAX::BidRequest_ContentCategory* BidRequest::add_content_category() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.content_category)
  return content_category_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_ContentCategory >*
BidRequest::mutable_content_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.content_category)
  return &content_category_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_ContentCategory >&
BidRequest::content_category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.content_category)
  return content_category_;
}

// repeated .protocol.MAX.BidRequest.AdSlot adslot = 7;
inline int BidRequest::adslot_size() const {
  return adslot_.size();
}
inline void BidRequest::clear_adslot() {
  adslot_.Clear();
}
inline const ::protocol::MAX::BidRequest_AdSlot& BidRequest::adslot(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.adslot)
  return adslot_.Get(index);
}
inline ::protocol::MAX::BidRequest_AdSlot* BidRequest::mutable_adslot(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.adslot)
  return adslot_.Mutable(index);
}
inline ::protocol::MAX::BidRequest_AdSlot* BidRequest::add_adslot() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.adslot)
  return adslot_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot >*
BidRequest::mutable_adslot() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.adslot)
  return &adslot_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot >&
BidRequest::adslot() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.adslot)
  return adslot_;
}

// repeated int32 excluded_attribute = 16;
inline int BidRequest::excluded_attribute_size() const {
  return excluded_attribute_.size();
}
inline void BidRequest::clear_excluded_attribute() {
  excluded_attribute_.Clear();
}
inline ::google::protobuf::int32 BidRequest::excluded_attribute(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.excluded_attribute)
  return excluded_attribute_.Get(index);
}
inline void BidRequest::set_excluded_attribute(int index, ::google::protobuf::int32 value) {
  excluded_attribute_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.excluded_attribute)
}
inline void BidRequest::add_excluded_attribute(::google::protobuf::int32 value) {
  excluded_attribute_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.excluded_attribute)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::excluded_attribute() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.excluded_attribute)
  return excluded_attribute_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_excluded_attribute() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.excluded_attribute)
  return &excluded_attribute_;
}

// repeated int32 excluded_ad_category = 12;
inline int BidRequest::excluded_ad_category_size() const {
  return excluded_ad_category_.size();
}
inline void BidRequest::clear_excluded_ad_category() {
  excluded_ad_category_.Clear();
}
inline ::google::protobuf::int32 BidRequest::excluded_ad_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.excluded_ad_category)
  return excluded_ad_category_.Get(index);
}
inline void BidRequest::set_excluded_ad_category(int index, ::google::protobuf::int32 value) {
  excluded_ad_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.excluded_ad_category)
}
inline void BidRequest::add_excluded_ad_category(::google::protobuf::int32 value) {
  excluded_ad_category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.excluded_ad_category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::excluded_ad_category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.excluded_ad_category)
  return excluded_ad_category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_excluded_ad_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.excluded_ad_category)
  return &excluded_ad_category_;
}

// optional .protocol.MAX.BidRequest.Mobile mobile = 8;
inline bool BidRequest::has_mobile() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void BidRequest::set_has_mobile() {
  _has_bits_[0] |= 0x00100000u;
}
inline void BidRequest::clear_has_mobile() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void BidRequest::clear_mobile() {
  if (mobile_ != NULL) mobile_->::protocol::MAX::BidRequest_Mobile::Clear();
  clear_has_mobile();
}
inline const ::protocol::MAX::BidRequest_Mobile& BidRequest::mobile() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.mobile)
  return mobile_ != NULL ? *mobile_ : *default_instance_->mobile_;
}
inline ::protocol::MAX::BidRequest_Mobile* BidRequest::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == NULL) {
    mobile_ = new ::protocol::MAX::BidRequest_Mobile;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.mobile)
  return mobile_;
}
inline ::protocol::MAX::BidRequest_Mobile* BidRequest::release_mobile() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.mobile)
  clear_has_mobile();
  ::protocol::MAX::BidRequest_Mobile* temp = mobile_;
  mobile_ = NULL;
  return temp;
}
inline void BidRequest::set_allocated_mobile(::protocol::MAX::BidRequest_Mobile* mobile) {
  delete mobile_;
  mobile_ = mobile;
  if (mobile) {
    set_has_mobile();
  } else {
    clear_has_mobile();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.mobile)
}

// optional string extend_data = 100;
inline bool BidRequest::has_extend_data() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void BidRequest::set_has_extend_data() {
  _has_bits_[0] |= 0x00200000u;
}
inline void BidRequest::clear_has_extend_data() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void BidRequest::clear_extend_data() {
  extend_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extend_data();
}
inline const ::std::string& BidRequest::extend_data() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.extend_data)
  return extend_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_extend_data(const ::std::string& value) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.extend_data)
}
inline void BidRequest::set_extend_data(const char* value) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.extend_data)
}
inline void BidRequest::set_extend_data(const char* value, size_t size) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.extend_data)
}
inline ::std::string* BidRequest::mutable_extend_data() {
  set_has_extend_data();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.extend_data)
  return extend_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_extend_data() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.extend_data)
  clear_has_extend_data();
  return extend_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_extend_data(::std::string* extend_data) {
  if (extend_data != NULL) {
    set_has_extend_data();
  } else {
    clear_has_extend_data();
  }
  extend_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend_data);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.extend_data)
}

// -------------------------------------------------------------------

// BidResponse_Ads

// required uint32 adslot_id = 1;
inline bool BidResponse_Ads::has_adslot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ads::set_has_adslot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ads::clear_has_adslot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ads::clear_adslot_id() {
  adslot_id_ = 0u;
  clear_has_adslot_id();
}
inline ::google::protobuf::uint32 BidResponse_Ads::adslot_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.adslot_id)
  return adslot_id_;
}
inline void BidResponse_Ads::set_adslot_id(::google::protobuf::uint32 value) {
  set_has_adslot_id();
  adslot_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.adslot_id)
}

// required uint32 max_cpm_price = 2;
inline bool BidResponse_Ads::has_max_cpm_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse_Ads::set_has_max_cpm_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse_Ads::clear_has_max_cpm_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse_Ads::clear_max_cpm_price() {
  max_cpm_price_ = 0u;
  clear_has_max_cpm_price();
}
inline ::google::protobuf::uint32 BidResponse_Ads::max_cpm_price() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.max_cpm_price)
  return max_cpm_price_;
}
inline void BidResponse_Ads::set_max_cpm_price(::google::protobuf::uint32 value) {
  set_has_max_cpm_price();
  max_cpm_price_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.max_cpm_price)
}

// optional string html_snippet = 3;
inline bool BidResponse_Ads::has_html_snippet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse_Ads::set_has_html_snippet() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse_Ads::clear_has_html_snippet() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse_Ads::clear_html_snippet() {
  html_snippet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_html_snippet();
}
inline const ::std::string& BidResponse_Ads::html_snippet() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.html_snippet)
  return html_snippet_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ads::set_html_snippet(const ::std::string& value) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.html_snippet)
}
inline void BidResponse_Ads::set_html_snippet(const char* value) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.html_snippet)
}
inline void BidResponse_Ads::set_html_snippet(const char* value, size_t size) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.html_snippet)
}
inline ::std::string* BidResponse_Ads::mutable_html_snippet() {
  set_has_html_snippet();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.html_snippet)
  return html_snippet_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ads::release_html_snippet() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.Ads.html_snippet)
  clear_has_html_snippet();
  return html_snippet_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ads::set_allocated_html_snippet(::std::string* html_snippet) {
  if (html_snippet != NULL) {
    set_has_html_snippet();
  } else {
    clear_has_html_snippet();
  }
  html_snippet_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), html_snippet);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.Ads.html_snippet)
}

// repeated .protocol.MAX.NativeAd native_ad = 13;
inline int BidResponse_Ads::native_ad_size() const {
  return native_ad_.size();
}
inline void BidResponse_Ads::clear_native_ad() {
  native_ad_.Clear();
}
inline const ::protocol::MAX::NativeAd& BidResponse_Ads::native_ad(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.native_ad)
  return native_ad_.Get(index);
}
inline ::protocol::MAX::NativeAd* BidResponse_Ads::mutable_native_ad(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.native_ad)
  return native_ad_.Mutable(index);
}
inline ::protocol::MAX::NativeAd* BidResponse_Ads::add_native_ad() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.Ads.native_ad)
  return native_ad_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd >*
BidResponse_Ads::mutable_native_ad() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.Ads.native_ad)
  return &native_ad_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd >&
BidResponse_Ads::native_ad() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.Ads.native_ad)
  return native_ad_;
}

// repeated int32 category = 4;
inline int BidResponse_Ads::category_size() const {
  return category_.size();
}
inline void BidResponse_Ads::clear_category() {
  category_.Clear();
}
inline ::google::protobuf::int32 BidResponse_Ads::category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.category)
  return category_.Get(index);
}
inline void BidResponse_Ads::set_category(int index, ::google::protobuf::int32 value) {
  category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.category)
}
inline void BidResponse_Ads::add_category(::google::protobuf::int32 value) {
  category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.Ads.category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ads::category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.Ads.category)
  return category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ads::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.Ads.category)
  return &category_;
}

// repeated int32 creative_type = 5;
inline int BidResponse_Ads::creative_type_size() const {
  return creative_type_.size();
}
inline void BidResponse_Ads::clear_creative_type() {
  creative_type_.Clear();
}
inline ::google::protobuf::int32 BidResponse_Ads::creative_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.creative_type)
  return creative_type_.Get(index);
}
inline void BidResponse_Ads::set_creative_type(int index, ::google::protobuf::int32 value) {
  creative_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.creative_type)
}
inline void BidResponse_Ads::add_creative_type(::google::protobuf::int32 value) {
  creative_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.Ads.creative_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ads::creative_type() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.Ads.creative_type)
  return creative_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ads::mutable_creative_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.Ads.creative_type)
  return &creative_type_;
}

// repeated int32 creative_attribute = 14;
inline int BidResponse_Ads::creative_attribute_size() const {
  return creative_attribute_.size();
}
inline void BidResponse_Ads::clear_creative_attribute() {
  creative_attribute_.Clear();
}
inline ::google::protobuf::int32 BidResponse_Ads::creative_attribute(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.creative_attribute)
  return creative_attribute_.Get(index);
}
inline void BidResponse_Ads::set_creative_attribute(int index, ::google::protobuf::int32 value) {
  creative_attribute_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.creative_attribute)
}
inline void BidResponse_Ads::add_creative_attribute(::google::protobuf::int32 value) {
  creative_attribute_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.Ads.creative_attribute)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ads::creative_attribute() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.Ads.creative_attribute)
  return creative_attribute_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ads::mutable_creative_attribute() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.Ads.creative_attribute)
  return &creative_attribute_;
}

// repeated string destination_url = 6;
inline int BidResponse_Ads::destination_url_size() const {
  return destination_url_.size();
}
inline void BidResponse_Ads::clear_destination_url() {
  destination_url_.Clear();
}
inline const ::std::string& BidResponse_Ads::destination_url(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.destination_url)
  return destination_url_.Get(index);
}
inline ::std::string* BidResponse_Ads::mutable_destination_url(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.destination_url)
  return destination_url_.Mutable(index);
}
inline void BidResponse_Ads::set_destination_url(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.destination_url)
  destination_url_.Mutable(index)->assign(value);
}
inline void BidResponse_Ads::set_destination_url(int index, const char* value) {
  destination_url_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.destination_url)
}
inline void BidResponse_Ads::set_destination_url(int index, const char* value, size_t size) {
  destination_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.destination_url)
}
inline ::std::string* BidResponse_Ads::add_destination_url() {
  // @@protoc_insertion_point(field_add_mutable:protocol.MAX.BidResponse.Ads.destination_url)
  return destination_url_.Add();
}
inline void BidResponse_Ads::add_destination_url(const ::std::string& value) {
  destination_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.Ads.destination_url)
}
inline void BidResponse_Ads::add_destination_url(const char* value) {
  destination_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.MAX.BidResponse.Ads.destination_url)
}
inline void BidResponse_Ads::add_destination_url(const char* value, size_t size) {
  destination_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.MAX.BidResponse.Ads.destination_url)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidResponse_Ads::destination_url() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.Ads.destination_url)
  return destination_url_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidResponse_Ads::mutable_destination_url() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.Ads.destination_url)
  return &destination_url_;
}

// optional string advertiser_id = 7;
inline bool BidResponse_Ads::has_advertiser_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BidResponse_Ads::set_has_advertiser_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BidResponse_Ads::clear_has_advertiser_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BidResponse_Ads::clear_advertiser_id() {
  advertiser_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_advertiser_id();
}
inline const ::std::string& BidResponse_Ads::advertiser_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.advertiser_id)
  return advertiser_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ads::set_advertiser_id(const ::std::string& value) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.advertiser_id)
}
inline void BidResponse_Ads::set_advertiser_id(const char* value) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.advertiser_id)
}
inline void BidResponse_Ads::set_advertiser_id(const char* value, size_t size) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.advertiser_id)
}
inline ::std::string* BidResponse_Ads::mutable_advertiser_id() {
  set_has_advertiser_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.advertiser_id)
  return advertiser_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ads::release_advertiser_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.Ads.advertiser_id)
  clear_has_advertiser_id();
  return advertiser_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ads::set_allocated_advertiser_id(::std::string* advertiser_id) {
  if (advertiser_id != NULL) {
    set_has_advertiser_id();
  } else {
    clear_has_advertiser_id();
  }
  advertiser_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advertiser_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.Ads.advertiser_id)
}

// optional string creative_id = 8;
inline bool BidResponse_Ads::has_creative_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidResponse_Ads::set_has_creative_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidResponse_Ads::clear_has_creative_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidResponse_Ads::clear_creative_id() {
  creative_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creative_id();
}
inline const ::std::string& BidResponse_Ads::creative_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.creative_id)
  return creative_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ads::set_creative_id(const ::std::string& value) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.creative_id)
}
inline void BidResponse_Ads::set_creative_id(const char* value) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.creative_id)
}
inline void BidResponse_Ads::set_creative_id(const char* value, size_t size) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.creative_id)
}
inline ::std::string* BidResponse_Ads::mutable_creative_id() {
  set_has_creative_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.creative_id)
  return creative_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ads::release_creative_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.Ads.creative_id)
  clear_has_creative_id();
  return creative_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ads::set_allocated_creative_id(::std::string* creative_id) {
  if (creative_id != NULL) {
    set_has_creative_id();
  } else {
    clear_has_creative_id();
  }
  creative_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creative_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.Ads.creative_id)
}

// optional int32 width = 9;
inline bool BidResponse_Ads::has_width() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BidResponse_Ads::set_has_width() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BidResponse_Ads::clear_has_width() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BidResponse_Ads::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 BidResponse_Ads::width() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.width)
  return width_;
}
inline void BidResponse_Ads::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.width)
}

// optional int32 height = 10;
inline bool BidResponse_Ads::has_height() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidResponse_Ads::set_has_height() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidResponse_Ads::clear_has_height() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidResponse_Ads::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 BidResponse_Ads::height() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.height)
  return height_;
}
inline void BidResponse_Ads::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.height)
}

// optional string extend_data = 11;
inline bool BidResponse_Ads::has_extend_data() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BidResponse_Ads::set_has_extend_data() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BidResponse_Ads::clear_has_extend_data() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BidResponse_Ads::clear_extend_data() {
  extend_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extend_data();
}
inline const ::std::string& BidResponse_Ads::extend_data() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.extend_data)
  return extend_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ads::set_extend_data(const ::std::string& value) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.extend_data)
}
inline void BidResponse_Ads::set_extend_data(const char* value) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.extend_data)
}
inline void BidResponse_Ads::set_extend_data(const char* value, size_t size) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.extend_data)
}
inline ::std::string* BidResponse_Ads::mutable_extend_data() {
  set_has_extend_data();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.extend_data)
  return extend_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ads::release_extend_data() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.Ads.extend_data)
  clear_has_extend_data();
  return extend_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ads::set_allocated_extend_data(::std::string* extend_data) {
  if (extend_data != NULL) {
    set_has_extend_data();
  } else {
    clear_has_extend_data();
  }
  extend_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend_data);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.Ads.extend_data)
}

// optional string nurl = 12;
inline bool BidResponse_Ads::has_nurl() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidResponse_Ads::set_has_nurl() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidResponse_Ads::clear_has_nurl() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidResponse_Ads::clear_nurl() {
  nurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nurl();
}
inline const ::std::string& BidResponse_Ads::nurl() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.nurl)
  return nurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ads::set_nurl(const ::std::string& value) {
  set_has_nurl();
  nurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.nurl)
}
inline void BidResponse_Ads::set_nurl(const char* value) {
  set_has_nurl();
  nurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.nurl)
}
inline void BidResponse_Ads::set_nurl(const char* value, size_t size) {
  set_has_nurl();
  nurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.nurl)
}
inline ::std::string* BidResponse_Ads::mutable_nurl() {
  set_has_nurl();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.nurl)
  return nurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ads::release_nurl() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.Ads.nurl)
  clear_has_nurl();
  return nurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ads::set_allocated_nurl(::std::string* nurl) {
  if (nurl != NULL) {
    set_has_nurl();
  } else {
    clear_has_nurl();
  }
  nurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nurl);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.Ads.nurl)
}

// -------------------------------------------------------------------

// BidResponse

// required string bid = 1;
inline bool BidResponse::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse::clear_bid() {
  bid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bid();
}
inline const ::std::string& BidResponse::bid() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.bid)
  return bid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse::set_bid(const ::std::string& value) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.bid)
}
inline void BidResponse::set_bid(const char* value) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.bid)
}
inline void BidResponse::set_bid(const char* value, size_t size) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.bid)
}
inline ::std::string* BidResponse::mutable_bid() {
  set_has_bid();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.bid)
  return bid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse::release_bid() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.bid)
  clear_has_bid();
  return bid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse::set_allocated_bid(::std::string* bid) {
  if (bid != NULL) {
    set_has_bid();
  } else {
    clear_has_bid();
  }
  bid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bid);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.bid)
}

// repeated .protocol.MAX.BidResponse.Ads ads = 3;
inline int BidResponse::ads_size() const {
  return ads_.size();
}
inline void BidResponse::clear_ads() {
  ads_.Clear();
}
inline const ::protocol::MAX::BidResponse_Ads& BidResponse::ads(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.ads)
  return ads_.Get(index);
}
inline ::protocol::MAX::BidResponse_Ads* BidResponse::mutable_ads(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.ads)
  return ads_.Mutable(index);
}
inline ::protocol::MAX::BidResponse_Ads* BidResponse::add_ads() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.ads)
  return ads_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidResponse_Ads >*
BidResponse::mutable_ads() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.ads)
  return &ads_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidResponse_Ads >&
BidResponse::ads() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.ads)
  return ads_;
}

// -------------------------------------------------------------------

// NativeAd_Creative_Image

// optional string image_url = 1;
inline bool NativeAd_Creative_Image::has_image_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NativeAd_Creative_Image::set_has_image_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NativeAd_Creative_Image::clear_has_image_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NativeAd_Creative_Image::clear_image_url() {
  image_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_image_url();
}
inline const ::std::string& NativeAd_Creative_Image::image_url() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Image.image_url)
  return image_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative_Image::set_image_url(const ::std::string& value) {
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Image.image_url)
}
inline void NativeAd_Creative_Image::set_image_url(const char* value) {
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.Image.image_url)
}
inline void NativeAd_Creative_Image::set_image_url(const char* value, size_t size) {
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.Image.image_url)
}
inline ::std::string* NativeAd_Creative_Image::mutable_image_url() {
  set_has_image_url();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.Image.image_url)
  return image_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd_Creative_Image::release_image_url() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.Image.image_url)
  clear_has_image_url();
  return image_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative_Image::set_allocated_image_url(::std::string* image_url) {
  if (image_url != NULL) {
    set_has_image_url();
  } else {
    clear_has_image_url();
  }
  image_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_url);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.Image.image_url)
}

// optional int32 image_width = 2;
inline bool NativeAd_Creative_Image::has_image_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NativeAd_Creative_Image::set_has_image_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NativeAd_Creative_Image::clear_has_image_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NativeAd_Creative_Image::clear_image_width() {
  image_width_ = 0;
  clear_has_image_width();
}
inline ::google::protobuf::int32 NativeAd_Creative_Image::image_width() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Image.image_width)
  return image_width_;
}
inline void NativeAd_Creative_Image::set_image_width(::google::protobuf::int32 value) {
  set_has_image_width();
  image_width_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Image.image_width)
}

// optional int32 image_height = 3;
inline bool NativeAd_Creative_Image::has_image_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NativeAd_Creative_Image::set_has_image_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NativeAd_Creative_Image::clear_has_image_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NativeAd_Creative_Image::clear_image_height() {
  image_height_ = 0;
  clear_has_image_height();
}
inline ::google::protobuf::int32 NativeAd_Creative_Image::image_height() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Image.image_height)
  return image_height_;
}
inline void NativeAd_Creative_Image::set_image_height(::google::protobuf::int32 value) {
  set_has_image_height();
  image_height_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Image.image_height)
}

// -------------------------------------------------------------------

// NativeAd_Creative_Link

// optional string click_url = 1;
inline bool NativeAd_Creative_Link::has_click_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NativeAd_Creative_Link::set_has_click_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NativeAd_Creative_Link::clear_has_click_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NativeAd_Creative_Link::clear_click_url() {
  click_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_click_url();
}
inline const ::std::string& NativeAd_Creative_Link::click_url() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Link.click_url)
  return click_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative_Link::set_click_url(const ::std::string& value) {
  set_has_click_url();
  click_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Link.click_url)
}
inline void NativeAd_Creative_Link::set_click_url(const char* value) {
  set_has_click_url();
  click_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.Link.click_url)
}
inline void NativeAd_Creative_Link::set_click_url(const char* value, size_t size) {
  set_has_click_url();
  click_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.Link.click_url)
}
inline ::std::string* NativeAd_Creative_Link::mutable_click_url() {
  set_has_click_url();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.Link.click_url)
  return click_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd_Creative_Link::release_click_url() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.Link.click_url)
  clear_has_click_url();
  return click_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative_Link::set_allocated_click_url(::std::string* click_url) {
  if (click_url != NULL) {
    set_has_click_url();
  } else {
    clear_has_click_url();
  }
  click_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), click_url);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.Link.click_url)
}

// optional string deep_link = 4;
inline bool NativeAd_Creative_Link::has_deep_link() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NativeAd_Creative_Link::set_has_deep_link() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NativeAd_Creative_Link::clear_has_deep_link() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NativeAd_Creative_Link::clear_deep_link() {
  deep_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deep_link();
}
inline const ::std::string& NativeAd_Creative_Link::deep_link() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Link.deep_link)
  return deep_link_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative_Link::set_deep_link(const ::std::string& value) {
  set_has_deep_link();
  deep_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Link.deep_link)
}
inline void NativeAd_Creative_Link::set_deep_link(const char* value) {
  set_has_deep_link();
  deep_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.Link.deep_link)
}
inline void NativeAd_Creative_Link::set_deep_link(const char* value, size_t size) {
  set_has_deep_link();
  deep_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.Link.deep_link)
}
inline ::std::string* NativeAd_Creative_Link::mutable_deep_link() {
  set_has_deep_link();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.Link.deep_link)
  return deep_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd_Creative_Link::release_deep_link() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.Link.deep_link)
  clear_has_deep_link();
  return deep_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative_Link::set_allocated_deep_link(::std::string* deep_link) {
  if (deep_link != NULL) {
    set_has_deep_link();
  } else {
    clear_has_deep_link();
  }
  deep_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deep_link);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.Link.deep_link)
}

// optional int32 landing_type = 2;
inline bool NativeAd_Creative_Link::has_landing_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NativeAd_Creative_Link::set_has_landing_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NativeAd_Creative_Link::clear_has_landing_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NativeAd_Creative_Link::clear_landing_type() {
  landing_type_ = 0;
  clear_has_landing_type();
}
inline ::google::protobuf::int32 NativeAd_Creative_Link::landing_type() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Link.landing_type)
  return landing_type_;
}
inline void NativeAd_Creative_Link::set_landing_type(::google::protobuf::int32 value) {
  set_has_landing_type();
  landing_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Link.landing_type)
}

// repeated string content_click_tracks = 5;
inline int NativeAd_Creative_Link::content_click_tracks_size() const {
  return content_click_tracks_.size();
}
inline void NativeAd_Creative_Link::clear_content_click_tracks() {
  content_click_tracks_.Clear();
}
inline const ::std::string& NativeAd_Creative_Link::content_click_tracks(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  return content_click_tracks_.Get(index);
}
inline ::std::string* NativeAd_Creative_Link::mutable_content_click_tracks(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  return content_click_tracks_.Mutable(index);
}
inline void NativeAd_Creative_Link::set_content_click_tracks(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  content_click_tracks_.Mutable(index)->assign(value);
}
inline void NativeAd_Creative_Link::set_content_click_tracks(int index, const char* value) {
  content_click_tracks_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
}
inline void NativeAd_Creative_Link::set_content_click_tracks(int index, const char* value, size_t size) {
  content_click_tracks_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
}
inline ::std::string* NativeAd_Creative_Link::add_content_click_tracks() {
  // @@protoc_insertion_point(field_add_mutable:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  return content_click_tracks_.Add();
}
inline void NativeAd_Creative_Link::add_content_click_tracks(const ::std::string& value) {
  content_click_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
}
inline void NativeAd_Creative_Link::add_content_click_tracks(const char* value) {
  content_click_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
}
inline void NativeAd_Creative_Link::add_content_click_tracks(const char* value, size_t size) {
  content_click_tracks_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NativeAd_Creative_Link::content_click_tracks() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  return content_click_tracks_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NativeAd_Creative_Link::mutable_content_click_tracks() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  return &content_click_tracks_;
}

// repeated string click_tracks = 3;
inline int NativeAd_Creative_Link::click_tracks_size() const {
  return click_tracks_.size();
}
inline void NativeAd_Creative_Link::clear_click_tracks() {
  click_tracks_.Clear();
}
inline const ::std::string& NativeAd_Creative_Link::click_tracks(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  return click_tracks_.Get(index);
}
inline ::std::string* NativeAd_Creative_Link::mutable_click_tracks(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  return click_tracks_.Mutable(index);
}
inline void NativeAd_Creative_Link::set_click_tracks(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  click_tracks_.Mutable(index)->assign(value);
}
inline void NativeAd_Creative_Link::set_click_tracks(int index, const char* value) {
  click_tracks_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.Link.click_tracks)
}
inline void NativeAd_Creative_Link::set_click_tracks(int index, const char* value, size_t size) {
  click_tracks_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.Link.click_tracks)
}
inline ::std::string* NativeAd_Creative_Link::add_click_tracks() {
  // @@protoc_insertion_point(field_add_mutable:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  return click_tracks_.Add();
}
inline void NativeAd_Creative_Link::add_click_tracks(const ::std::string& value) {
  click_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.Creative.Link.click_tracks)
}
inline void NativeAd_Creative_Link::add_click_tracks(const char* value) {
  click_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.MAX.NativeAd.Creative.Link.click_tracks)
}
inline void NativeAd_Creative_Link::add_click_tracks(const char* value, size_t size) {
  click_tracks_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.MAX.NativeAd.Creative.Link.click_tracks)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NativeAd_Creative_Link::click_tracks() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  return click_tracks_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NativeAd_Creative_Link::mutable_click_tracks() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  return &click_tracks_;
}

// -------------------------------------------------------------------

// NativeAd_Creative

// optional int32 template_id = 9;
inline bool NativeAd_Creative::has_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NativeAd_Creative::set_has_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NativeAd_Creative::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NativeAd_Creative::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 NativeAd_Creative::template_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.template_id)
  return template_id_;
}
inline void NativeAd_Creative::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.template_id)
}

// optional string title = 1;
inline bool NativeAd_Creative::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NativeAd_Creative::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NativeAd_Creative::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NativeAd_Creative::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& NativeAd_Creative::title() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.title)
}
inline void NativeAd_Creative::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.title)
}
inline void NativeAd_Creative::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.title)
}
inline ::std::string* NativeAd_Creative::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd_Creative::release_title() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.title)
}

// optional string sub_title = 2;
inline bool NativeAd_Creative::has_sub_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NativeAd_Creative::set_has_sub_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NativeAd_Creative::clear_has_sub_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NativeAd_Creative::clear_sub_title() {
  sub_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sub_title();
}
inline const ::std::string& NativeAd_Creative::sub_title() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.sub_title)
  return sub_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative::set_sub_title(const ::std::string& value) {
  set_has_sub_title();
  sub_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.sub_title)
}
inline void NativeAd_Creative::set_sub_title(const char* value) {
  set_has_sub_title();
  sub_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.sub_title)
}
inline void NativeAd_Creative::set_sub_title(const char* value, size_t size) {
  set_has_sub_title();
  sub_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.sub_title)
}
inline ::std::string* NativeAd_Creative::mutable_sub_title() {
  set_has_sub_title();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.sub_title)
  return sub_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd_Creative::release_sub_title() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.sub_title)
  clear_has_sub_title();
  return sub_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative::set_allocated_sub_title(::std::string* sub_title) {
  if (sub_title != NULL) {
    set_has_sub_title();
  } else {
    clear_has_sub_title();
  }
  sub_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sub_title);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.sub_title)
}

// optional string description = 3;
inline bool NativeAd_Creative::has_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NativeAd_Creative::set_has_description() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NativeAd_Creative::clear_has_description() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NativeAd_Creative::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& NativeAd_Creative::description() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.description)
}
inline void NativeAd_Creative::set_description(const char* value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.description)
}
inline void NativeAd_Creative::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.description)
}
inline ::std::string* NativeAd_Creative::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd_Creative::release_description() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.description)
}

// optional string button_name = 4;
inline bool NativeAd_Creative::has_button_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NativeAd_Creative::set_has_button_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NativeAd_Creative::clear_has_button_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NativeAd_Creative::clear_button_name() {
  button_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_button_name();
}
inline const ::std::string& NativeAd_Creative::button_name() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.button_name)
  return button_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative::set_button_name(const ::std::string& value) {
  set_has_button_name();
  button_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.button_name)
}
inline void NativeAd_Creative::set_button_name(const char* value) {
  set_has_button_name();
  button_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.button_name)
}
inline void NativeAd_Creative::set_button_name(const char* value, size_t size) {
  set_has_button_name();
  button_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.button_name)
}
inline ::std::string* NativeAd_Creative::mutable_button_name() {
  set_has_button_name();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.button_name)
  return button_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd_Creative::release_button_name() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.button_name)
  clear_has_button_name();
  return button_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_Creative::set_allocated_button_name(::std::string* button_name) {
  if (button_name != NULL) {
    set_has_button_name();
  } else {
    clear_has_button_name();
  }
  button_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), button_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.button_name)
}

// optional .protocol.MAX.NativeAd.Creative.Image content_image = 5;
inline bool NativeAd_Creative::has_content_image() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NativeAd_Creative::set_has_content_image() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NativeAd_Creative::clear_has_content_image() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NativeAd_Creative::clear_content_image() {
  if (content_image_ != NULL) content_image_->::protocol::MAX::NativeAd_Creative_Image::Clear();
  clear_has_content_image();
}
inline const ::protocol::MAX::NativeAd_Creative_Image& NativeAd_Creative::content_image() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.content_image)
  return content_image_ != NULL ? *content_image_ : *default_instance_->content_image_;
}
inline ::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::mutable_content_image() {
  set_has_content_image();
  if (content_image_ == NULL) {
    content_image_ = new ::protocol::MAX::NativeAd_Creative_Image;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.content_image)
  return content_image_;
}
inline ::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::release_content_image() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.content_image)
  clear_has_content_image();
  ::protocol::MAX::NativeAd_Creative_Image* temp = content_image_;
  content_image_ = NULL;
  return temp;
}
inline void NativeAd_Creative::set_allocated_content_image(::protocol::MAX::NativeAd_Creative_Image* content_image) {
  delete content_image_;
  content_image_ = content_image;
  if (content_image) {
    set_has_content_image();
  } else {
    clear_has_content_image();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.content_image)
}

// repeated .protocol.MAX.NativeAd.Creative.Image multi_images = 12;
inline int NativeAd_Creative::multi_images_size() const {
  return multi_images_.size();
}
inline void NativeAd_Creative::clear_multi_images() {
  multi_images_.Clear();
}
inline const ::protocol::MAX::NativeAd_Creative_Image& NativeAd_Creative::multi_images(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.multi_images)
  return multi_images_.Get(index);
}
inline ::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::mutable_multi_images(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.multi_images)
  return multi_images_.Mutable(index);
}
inline ::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::add_multi_images() {
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.Creative.multi_images)
  return multi_images_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative_Image >*
NativeAd_Creative::mutable_multi_images() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.Creative.multi_images)
  return &multi_images_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative_Image >&
NativeAd_Creative::multi_images() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.Creative.multi_images)
  return multi_images_;
}

// optional .protocol.MAX.NativeAd.Creative.Image linked_image = 8;
inline bool NativeAd_Creative::has_linked_image() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NativeAd_Creative::set_has_linked_image() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NativeAd_Creative::clear_has_linked_image() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NativeAd_Creative::clear_linked_image() {
  if (linked_image_ != NULL) linked_image_->::protocol::MAX::NativeAd_Creative_Image::Clear();
  clear_has_linked_image();
}
inline const ::protocol::MAX::NativeAd_Creative_Image& NativeAd_Creative::linked_image() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.linked_image)
  return linked_image_ != NULL ? *linked_image_ : *default_instance_->linked_image_;
}
inline ::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::mutable_linked_image() {
  set_has_linked_image();
  if (linked_image_ == NULL) {
    linked_image_ = new ::protocol::MAX::NativeAd_Creative_Image;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.linked_image)
  return linked_image_;
}
inline ::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::release_linked_image() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.linked_image)
  clear_has_linked_image();
  ::protocol::MAX::NativeAd_Creative_Image* temp = linked_image_;
  linked_image_ = NULL;
  return temp;
}
inline void NativeAd_Creative::set_allocated_linked_image(::protocol::MAX::NativeAd_Creative_Image* linked_image) {
  delete linked_image_;
  linked_image_ = linked_image;
  if (linked_image) {
    set_has_linked_image();
  } else {
    clear_has_linked_image();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.linked_image)
}

// optional .protocol.MAX.NativeAd.Creative.Image logo = 6;
inline bool NativeAd_Creative::has_logo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NativeAd_Creative::set_has_logo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NativeAd_Creative::clear_has_logo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NativeAd_Creative::clear_logo() {
  if (logo_ != NULL) logo_->::protocol::MAX::NativeAd_Creative_Image::Clear();
  clear_has_logo();
}
inline const ::protocol::MAX::NativeAd_Creative_Image& NativeAd_Creative::logo() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.logo)
  return logo_ != NULL ? *logo_ : *default_instance_->logo_;
}
inline ::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::mutable_logo() {
  set_has_logo();
  if (logo_ == NULL) {
    logo_ = new ::protocol::MAX::NativeAd_Creative_Image;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.logo)
  return logo_;
}
inline ::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::release_logo() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.logo)
  clear_has_logo();
  ::protocol::MAX::NativeAd_Creative_Image* temp = logo_;
  logo_ = NULL;
  return temp;
}
inline void NativeAd_Creative::set_allocated_logo(::protocol::MAX::NativeAd_Creative_Image* logo) {
  delete logo_;
  logo_ = logo;
  if (logo) {
    set_has_logo();
  } else {
    clear_has_logo();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.logo)
}

// optional .protocol.MAX.NativeAd.Creative.Link link = 7;
inline bool NativeAd_Creative::has_link() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NativeAd_Creative::set_has_link() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NativeAd_Creative::clear_has_link() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NativeAd_Creative::clear_link() {
  if (link_ != NULL) link_->::protocol::MAX::NativeAd_Creative_Link::Clear();
  clear_has_link();
}
inline const ::protocol::MAX::NativeAd_Creative_Link& NativeAd_Creative::link() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.link)
  return link_ != NULL ? *link_ : *default_instance_->link_;
}
inline ::protocol::MAX::NativeAd_Creative_Link* NativeAd_Creative::mutable_link() {
  set_has_link();
  if (link_ == NULL) {
    link_ = new ::protocol::MAX::NativeAd_Creative_Link;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.link)
  return link_;
}
inline ::protocol::MAX::NativeAd_Creative_Link* NativeAd_Creative::release_link() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.link)
  clear_has_link();
  ::protocol::MAX::NativeAd_Creative_Link* temp = link_;
  link_ = NULL;
  return temp;
}
inline void NativeAd_Creative::set_allocated_link(::protocol::MAX::NativeAd_Creative_Link* link) {
  delete link_;
  link_ = link;
  if (link) {
    set_has_link();
  } else {
    clear_has_link();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.link)
}

// -------------------------------------------------------------------

// NativeAd_AppAttr

// optional string app_name = 1;
inline bool NativeAd_AppAttr::has_app_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NativeAd_AppAttr::set_has_app_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NativeAd_AppAttr::clear_has_app_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NativeAd_AppAttr::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_name();
}
inline const ::std::string& NativeAd_AppAttr::app_name() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.AppAttr.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_AppAttr::set_app_name(const ::std::string& value) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.AppAttr.app_name)
}
inline void NativeAd_AppAttr::set_app_name(const char* value) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.AppAttr.app_name)
}
inline void NativeAd_AppAttr::set_app_name(const char* value, size_t size) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.AppAttr.app_name)
}
inline ::std::string* NativeAd_AppAttr::mutable_app_name() {
  set_has_app_name();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.AppAttr.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd_AppAttr::release_app_name() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.AppAttr.app_name)
  clear_has_app_name();
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_AppAttr::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    set_has_app_name();
  } else {
    clear_has_app_name();
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.AppAttr.app_name)
}

// optional string app_pkg = 2;
inline bool NativeAd_AppAttr::has_app_pkg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NativeAd_AppAttr::set_has_app_pkg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NativeAd_AppAttr::clear_has_app_pkg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NativeAd_AppAttr::clear_app_pkg() {
  app_pkg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_pkg();
}
inline const ::std::string& NativeAd_AppAttr::app_pkg() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.AppAttr.app_pkg)
  return app_pkg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_AppAttr::set_app_pkg(const ::std::string& value) {
  set_has_app_pkg();
  app_pkg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.AppAttr.app_pkg)
}
inline void NativeAd_AppAttr::set_app_pkg(const char* value) {
  set_has_app_pkg();
  app_pkg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.AppAttr.app_pkg)
}
inline void NativeAd_AppAttr::set_app_pkg(const char* value, size_t size) {
  set_has_app_pkg();
  app_pkg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.AppAttr.app_pkg)
}
inline ::std::string* NativeAd_AppAttr::mutable_app_pkg() {
  set_has_app_pkg();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.AppAttr.app_pkg)
  return app_pkg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd_AppAttr::release_app_pkg() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.AppAttr.app_pkg)
  clear_has_app_pkg();
  return app_pkg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_AppAttr::set_allocated_app_pkg(::std::string* app_pkg) {
  if (app_pkg != NULL) {
    set_has_app_pkg();
  } else {
    clear_has_app_pkg();
  }
  app_pkg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_pkg);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.AppAttr.app_pkg)
}

// optional string app_md5 = 3;
inline bool NativeAd_AppAttr::has_app_md5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NativeAd_AppAttr::set_has_app_md5() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NativeAd_AppAttr::clear_has_app_md5() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NativeAd_AppAttr::clear_app_md5() {
  app_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_md5();
}
inline const ::std::string& NativeAd_AppAttr::app_md5() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.AppAttr.app_md5)
  return app_md5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_AppAttr::set_app_md5(const ::std::string& value) {
  set_has_app_md5();
  app_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.AppAttr.app_md5)
}
inline void NativeAd_AppAttr::set_app_md5(const char* value) {
  set_has_app_md5();
  app_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.AppAttr.app_md5)
}
inline void NativeAd_AppAttr::set_app_md5(const char* value, size_t size) {
  set_has_app_md5();
  app_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.AppAttr.app_md5)
}
inline ::std::string* NativeAd_AppAttr::mutable_app_md5() {
  set_has_app_md5();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.AppAttr.app_md5)
  return app_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd_AppAttr::release_app_md5() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.AppAttr.app_md5)
  clear_has_app_md5();
  return app_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd_AppAttr::set_allocated_app_md5(::std::string* app_md5) {
  if (app_md5 != NULL) {
    set_has_app_md5();
  } else {
    clear_has_app_md5();
  }
  app_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_md5);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.AppAttr.app_md5)
}

// optional int32 app_vc = 4;
inline bool NativeAd_AppAttr::has_app_vc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NativeAd_AppAttr::set_has_app_vc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NativeAd_AppAttr::clear_has_app_vc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NativeAd_AppAttr::clear_app_vc() {
  app_vc_ = 0;
  clear_has_app_vc();
}
inline ::google::protobuf::int32 NativeAd_AppAttr::app_vc() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.AppAttr.app_vc)
  return app_vc_;
}
inline void NativeAd_AppAttr::set_app_vc(::google::protobuf::int32 value) {
  set_has_app_vc();
  app_vc_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.AppAttr.app_vc)
}

// optional int32 app_size = 5;
inline bool NativeAd_AppAttr::has_app_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NativeAd_AppAttr::set_has_app_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NativeAd_AppAttr::clear_has_app_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NativeAd_AppAttr::clear_app_size() {
  app_size_ = 0;
  clear_has_app_size();
}
inline ::google::protobuf::int32 NativeAd_AppAttr::app_size() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.AppAttr.app_size)
  return app_size_;
}
inline void NativeAd_AppAttr::set_app_size(::google::protobuf::int32 value) {
  set_has_app_size();
  app_size_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.AppAttr.app_size)
}

// -------------------------------------------------------------------

// NativeAd

// required uint32 max_cpm_price = 1;
inline bool NativeAd::has_max_cpm_price() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NativeAd::set_has_max_cpm_price() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NativeAd::clear_has_max_cpm_price() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NativeAd::clear_max_cpm_price() {
  max_cpm_price_ = 0u;
  clear_has_max_cpm_price();
}
inline ::google::protobuf::uint32 NativeAd::max_cpm_price() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.max_cpm_price)
  return max_cpm_price_;
}
inline void NativeAd::set_max_cpm_price(::google::protobuf::uint32 value) {
  set_has_max_cpm_price();
  max_cpm_price_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.max_cpm_price)
}

// repeated .protocol.MAX.NativeAd.Creative creatives = 2;
inline int NativeAd::creatives_size() const {
  return creatives_.size();
}
inline void NativeAd::clear_creatives() {
  creatives_.Clear();
}
inline const ::protocol::MAX::NativeAd_Creative& NativeAd::creatives(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.creatives)
  return creatives_.Get(index);
}
inline ::protocol::MAX::NativeAd_Creative* NativeAd::mutable_creatives(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.creatives)
  return creatives_.Mutable(index);
}
inline ::protocol::MAX::NativeAd_Creative* NativeAd::add_creatives() {
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.creatives)
  return creatives_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative >*
NativeAd::mutable_creatives() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.creatives)
  return &creatives_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative >&
NativeAd::creatives() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.creatives)
  return creatives_;
}

// optional int32 template_id = 10;
inline bool NativeAd::has_template_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NativeAd::set_has_template_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NativeAd::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NativeAd::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
inline ::google::protobuf::int32 NativeAd::template_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.template_id)
  return template_id_;
}
inline void NativeAd::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.template_id)
}

// optional .protocol.MAX.NativeAd.AppAttr app_attr = 9;
inline bool NativeAd::has_app_attr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NativeAd::set_has_app_attr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NativeAd::clear_has_app_attr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NativeAd::clear_app_attr() {
  if (app_attr_ != NULL) app_attr_->::protocol::MAX::NativeAd_AppAttr::Clear();
  clear_has_app_attr();
}
inline const ::protocol::MAX::NativeAd_AppAttr& NativeAd::app_attr() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.app_attr)
  return app_attr_ != NULL ? *app_attr_ : *default_instance_->app_attr_;
}
inline ::protocol::MAX::NativeAd_AppAttr* NativeAd::mutable_app_attr() {
  set_has_app_attr();
  if (app_attr_ == NULL) {
    app_attr_ = new ::protocol::MAX::NativeAd_AppAttr;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.app_attr)
  return app_attr_;
}
inline ::protocol::MAX::NativeAd_AppAttr* NativeAd::release_app_attr() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.app_attr)
  clear_has_app_attr();
  ::protocol::MAX::NativeAd_AppAttr* temp = app_attr_;
  app_attr_ = NULL;
  return temp;
}
inline void NativeAd::set_allocated_app_attr(::protocol::MAX::NativeAd_AppAttr* app_attr) {
  delete app_attr_;
  app_attr_ = app_attr;
  if (app_attr) {
    set_has_app_attr();
  } else {
    clear_has_app_attr();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.app_attr)
}

// repeated string impression_tracks = 3;
inline int NativeAd::impression_tracks_size() const {
  return impression_tracks_.size();
}
inline void NativeAd::clear_impression_tracks() {
  impression_tracks_.Clear();
}
inline const ::std::string& NativeAd::impression_tracks(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.impression_tracks)
  return impression_tracks_.Get(index);
}
inline ::std::string* NativeAd::mutable_impression_tracks(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.impression_tracks)
  return impression_tracks_.Mutable(index);
}
inline void NativeAd::set_impression_tracks(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.impression_tracks)
  impression_tracks_.Mutable(index)->assign(value);
}
inline void NativeAd::set_impression_tracks(int index, const char* value) {
  impression_tracks_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.impression_tracks)
}
inline void NativeAd::set_impression_tracks(int index, const char* value, size_t size) {
  impression_tracks_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.impression_tracks)
}
inline ::std::string* NativeAd::add_impression_tracks() {
  // @@protoc_insertion_point(field_add_mutable:protocol.MAX.NativeAd.impression_tracks)
  return impression_tracks_.Add();
}
inline void NativeAd::add_impression_tracks(const ::std::string& value) {
  impression_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.impression_tracks)
}
inline void NativeAd::add_impression_tracks(const char* value) {
  impression_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.MAX.NativeAd.impression_tracks)
}
inline void NativeAd::add_impression_tracks(const char* value, size_t size) {
  impression_tracks_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.MAX.NativeAd.impression_tracks)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NativeAd::impression_tracks() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.impression_tracks)
  return impression_tracks_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NativeAd::mutable_impression_tracks() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.impression_tracks)
  return &impression_tracks_;
}

// repeated int32 category = 4;
inline int NativeAd::category_size() const {
  return category_.size();
}
inline void NativeAd::clear_category() {
  category_.Clear();
}
inline ::google::protobuf::int32 NativeAd::category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.category)
  return category_.Get(index);
}
inline void NativeAd::set_category(int index, ::google::protobuf::int32 value) {
  category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.category)
}
inline void NativeAd::add_category(::google::protobuf::int32 value) {
  category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NativeAd::category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.category)
  return category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NativeAd::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.category)
  return &category_;
}

// repeated string destination_url = 5;
inline int NativeAd::destination_url_size() const {
  return destination_url_.size();
}
inline void NativeAd::clear_destination_url() {
  destination_url_.Clear();
}
inline const ::std::string& NativeAd::destination_url(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.destination_url)
  return destination_url_.Get(index);
}
inline ::std::string* NativeAd::mutable_destination_url(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.destination_url)
  return destination_url_.Mutable(index);
}
inline void NativeAd::set_destination_url(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.destination_url)
  destination_url_.Mutable(index)->assign(value);
}
inline void NativeAd::set_destination_url(int index, const char* value) {
  destination_url_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.destination_url)
}
inline void NativeAd::set_destination_url(int index, const char* value, size_t size) {
  destination_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.destination_url)
}
inline ::std::string* NativeAd::add_destination_url() {
  // @@protoc_insertion_point(field_add_mutable:protocol.MAX.NativeAd.destination_url)
  return destination_url_.Add();
}
inline void NativeAd::add_destination_url(const ::std::string& value) {
  destination_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.destination_url)
}
inline void NativeAd::add_destination_url(const char* value) {
  destination_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.MAX.NativeAd.destination_url)
}
inline void NativeAd::add_destination_url(const char* value, size_t size) {
  destination_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.MAX.NativeAd.destination_url)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NativeAd::destination_url() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.destination_url)
  return destination_url_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NativeAd::mutable_destination_url() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.destination_url)
  return &destination_url_;
}

// optional string advertiser_id = 6;
inline bool NativeAd::has_advertiser_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NativeAd::set_has_advertiser_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NativeAd::clear_has_advertiser_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NativeAd::clear_advertiser_id() {
  advertiser_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_advertiser_id();
}
inline const ::std::string& NativeAd::advertiser_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.advertiser_id)
  return advertiser_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd::set_advertiser_id(const ::std::string& value) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.advertiser_id)
}
inline void NativeAd::set_advertiser_id(const char* value) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.advertiser_id)
}
inline void NativeAd::set_advertiser_id(const char* value, size_t size) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.advertiser_id)
}
inline ::std::string* NativeAd::mutable_advertiser_id() {
  set_has_advertiser_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.advertiser_id)
  return advertiser_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd::release_advertiser_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.advertiser_id)
  clear_has_advertiser_id();
  return advertiser_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd::set_allocated_advertiser_id(::std::string* advertiser_id) {
  if (advertiser_id != NULL) {
    set_has_advertiser_id();
  } else {
    clear_has_advertiser_id();
  }
  advertiser_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advertiser_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.advertiser_id)
}

// optional string creative_id = 7;
inline bool NativeAd::has_creative_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NativeAd::set_has_creative_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NativeAd::clear_has_creative_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NativeAd::clear_creative_id() {
  creative_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creative_id();
}
inline const ::std::string& NativeAd::creative_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.creative_id)
  return creative_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd::set_creative_id(const ::std::string& value) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.creative_id)
}
inline void NativeAd::set_creative_id(const char* value) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.creative_id)
}
inline void NativeAd::set_creative_id(const char* value, size_t size) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.creative_id)
}
inline ::std::string* NativeAd::mutable_creative_id() {
  set_has_creative_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.creative_id)
  return creative_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NativeAd::release_creative_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.creative_id)
  clear_has_creative_id();
  return creative_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NativeAd::set_allocated_creative_id(::std::string* creative_id) {
  if (creative_id != NULL) {
    set_has_creative_id();
  } else {
    clear_has_creative_id();
  }
  creative_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creative_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.creative_id)
}

// optional int64 deal_id = 8;
inline bool NativeAd::has_deal_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NativeAd::set_has_deal_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NativeAd::clear_has_deal_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NativeAd::clear_deal_id() {
  deal_id_ = GOOGLE_LONGLONG(0);
  clear_has_deal_id();
}
inline ::google::protobuf::int64 NativeAd::deal_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.deal_id)
  return deal_id_;
}
inline void NativeAd::set_deal_id(::google::protobuf::int64 value) {
  set_has_deal_id();
  deal_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.deal_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MAX
}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protocol::MAX::BidRequest_AdSlot_Deal_DealType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::MAX::BidRequest_AdSlot_Deal_DealType>() {
  return ::protocol::MAX::BidRequest_AdSlot_Deal_DealType_descriptor();
}
template <> struct is_proto_enum< ::protocol::MAX::BidRequest_AdSlot_SlotVisibility> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::MAX::BidRequest_AdSlot_SlotVisibility>() {
  return ::protocol::MAX::BidRequest_AdSlot_SlotVisibility_descriptor();
}
template <> struct is_proto_enum< ::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation>() {
  return ::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_max_2dbidding_2eproto__INCLUDED
