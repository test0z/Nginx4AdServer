// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: max-bidding.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "max-bidding.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protocol {
namespace MAX {

namespace {

const ::google::protobuf::Descriptor* BidRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidRequest_UserCategory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidRequest_UserCategory_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidRequest_ContentCategory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidRequest_ContentCategory_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidRequest_AdSlot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidRequest_AdSlot_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidRequest_AdSlot_Native_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidRequest_AdSlot_Native_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidRequest_AdSlot_Deal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidRequest_AdSlot_Deal_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_Deal_DealType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_SlotVisibility_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BidRequest_Mobile_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidRequest_Mobile_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidRequest_Mobile_Device_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidRequest_Mobile_Device_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_Device_ScreenOrientation_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BidResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidResponse_Ads_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidResponse_Ads_reflection_ = NULL;
const ::google::protobuf::Descriptor* NativeAd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NativeAd_reflection_ = NULL;
const ::google::protobuf::Descriptor* NativeAd_Creative_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NativeAd_Creative_reflection_ = NULL;
const ::google::protobuf::Descriptor* NativeAd_Creative_Image_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NativeAd_Creative_Image_reflection_ = NULL;
const ::google::protobuf::Descriptor* NativeAd_Creative_Link_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NativeAd_Creative_Link_reflection_ = NULL;
const ::google::protobuf::Descriptor* NativeAd_AppAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NativeAd_AppAttr_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_max_2dbidding_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_max_2dbidding_2eproto() {
  protobuf_AddDesc_max_2dbidding_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "max-bidding.proto");
  GOOGLE_CHECK(file != NULL);
  BidRequest_descriptor_ = file->message_type(0);
  static const int BidRequest_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, bid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, is_test_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, mediav_user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, mv_user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, mid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, user_agent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, user_vertical_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, user_category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, is_https_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, adx_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, detected_language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, publisher_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, publisher_category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, publisher_category_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, content_category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, adslot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, excluded_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, excluded_ad_category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, mobile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, extend_data_),
  };
  BidRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BidRequest_descriptor_,
      BidRequest::default_instance_,
      BidRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(BidRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest, _internal_metadata_),
      -1);
  BidRequest_UserCategory_descriptor_ = BidRequest_descriptor_->nested_type(0);
  static const int BidRequest_UserCategory_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_UserCategory, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_UserCategory, weight_),
  };
  BidRequest_UserCategory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BidRequest_UserCategory_descriptor_,
      BidRequest_UserCategory::default_instance_,
      BidRequest_UserCategory_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_UserCategory, _has_bits_[0]),
      -1,
      -1,
      sizeof(BidRequest_UserCategory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_UserCategory, _internal_metadata_),
      -1);
  BidRequest_ContentCategory_descriptor_ = BidRequest_descriptor_->nested_type(1);
  static const int BidRequest_ContentCategory_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_ContentCategory, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_ContentCategory, weight_),
  };
  BidRequest_ContentCategory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BidRequest_ContentCategory_descriptor_,
      BidRequest_ContentCategory::default_instance_,
      BidRequest_ContentCategory_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_ContentCategory, _has_bits_[0]),
      -1,
      -1,
      sizeof(BidRequest_ContentCategory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_ContentCategory, _internal_metadata_),
      -1);
  BidRequest_AdSlot_descriptor_ = BidRequest_descriptor_->nested_type(2);
  static const int BidRequest_AdSlot_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot, view_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot, min_cpm_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot, slot_visibility_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot, native_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot, deals_),
  };
  BidRequest_AdSlot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BidRequest_AdSlot_descriptor_,
      BidRequest_AdSlot::default_instance_,
      BidRequest_AdSlot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot, _has_bits_[0]),
      -1,
      -1,
      sizeof(BidRequest_AdSlot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot, _internal_metadata_),
      -1);
  BidRequest_AdSlot_Native_descriptor_ = BidRequest_AdSlot_descriptor_->nested_type(0);
  static const int BidRequest_AdSlot_Native_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot_Native, ad_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot_Native, landing_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot_Native, template_id_),
  };
  BidRequest_AdSlot_Native_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BidRequest_AdSlot_Native_descriptor_,
      BidRequest_AdSlot_Native::default_instance_,
      BidRequest_AdSlot_Native_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot_Native, _has_bits_[0]),
      -1,
      -1,
      sizeof(BidRequest_AdSlot_Native),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot_Native, _internal_metadata_),
      -1);
  BidRequest_AdSlot_Deal_descriptor_ = BidRequest_AdSlot_descriptor_->nested_type(1);
  static const int BidRequest_AdSlot_Deal_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot_Deal, deal_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot_Deal, deal_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot_Deal, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot_Deal, date_),
  };
  BidRequest_AdSlot_Deal_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BidRequest_AdSlot_Deal_descriptor_,
      BidRequest_AdSlot_Deal::default_instance_,
      BidRequest_AdSlot_Deal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot_Deal, _has_bits_[0]),
      -1,
      -1,
      sizeof(BidRequest_AdSlot_Deal),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_AdSlot_Deal, _internal_metadata_),
      -1);
  BidRequest_AdSlot_Deal_DealType_descriptor_ = BidRequest_AdSlot_Deal_descriptor_->enum_type(0);
  BidRequest_AdSlot_SlotVisibility_descriptor_ = BidRequest_AdSlot_descriptor_->enum_type(0);
  BidRequest_Mobile_descriptor_ = BidRequest_descriptor_->nested_type(3);
  static const int BidRequest_Mobile_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile, is_app_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile, is_fullscreen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile, package_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile, device_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile, app_category_),
  };
  BidRequest_Mobile_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BidRequest_Mobile_descriptor_,
      BidRequest_Mobile::default_instance_,
      BidRequest_Mobile_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile, _has_bits_[0]),
      -1,
      -1,
      sizeof(BidRequest_Mobile),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile, _internal_metadata_),
      -1);
  BidRequest_Mobile_Device_descriptor_ = BidRequest_Mobile_descriptor_->nested_type(0);
  static const int BidRequest_Mobile_Device_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, os_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, os_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, network_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, carrier_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, screen_width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, screen_height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, screen_orientation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, idfa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, hashed_idfa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, imei_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, hashed_imei_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, android_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, hashed_android_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, mac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, hashed_mac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, m2id_),
  };
  BidRequest_Mobile_Device_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BidRequest_Mobile_Device_descriptor_,
      BidRequest_Mobile_Device::default_instance_,
      BidRequest_Mobile_Device_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, _has_bits_[0]),
      -1,
      -1,
      sizeof(BidRequest_Mobile_Device),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidRequest_Mobile_Device, _internal_metadata_),
      -1);
  BidRequest_Mobile_Device_ScreenOrientation_descriptor_ = BidRequest_Mobile_Device_descriptor_->enum_type(0);
  BidResponse_descriptor_ = file->message_type(1);
  static const int BidResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse, bid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse, ads_),
  };
  BidResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BidResponse_descriptor_,
      BidResponse::default_instance_,
      BidResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(BidResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse, _internal_metadata_),
      -1);
  BidResponse_Ads_descriptor_ = BidResponse_descriptor_->nested_type(0);
  static const int BidResponse_Ads_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, adslot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, max_cpm_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, html_snippet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, native_ad_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, creative_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, creative_attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, destination_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, advertiser_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, creative_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, extend_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, nurl_),
  };
  BidResponse_Ads_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BidResponse_Ads_descriptor_,
      BidResponse_Ads::default_instance_,
      BidResponse_Ads_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, _has_bits_[0]),
      -1,
      -1,
      sizeof(BidResponse_Ads),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidResponse_Ads, _internal_metadata_),
      -1);
  NativeAd_descriptor_ = file->message_type(2);
  static const int NativeAd_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, max_cpm_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, creatives_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, template_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, app_attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, impression_tracks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, destination_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, advertiser_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, creative_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, deal_id_),
  };
  NativeAd_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NativeAd_descriptor_,
      NativeAd::default_instance_,
      NativeAd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, _has_bits_[0]),
      -1,
      -1,
      sizeof(NativeAd),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd, _internal_metadata_),
      -1);
  NativeAd_Creative_descriptor_ = NativeAd_descriptor_->nested_type(0);
  static const int NativeAd_Creative_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, template_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, sub_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, button_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, content_image_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, multi_images_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, linked_image_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, logo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, link_),
  };
  NativeAd_Creative_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NativeAd_Creative_descriptor_,
      NativeAd_Creative::default_instance_,
      NativeAd_Creative_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, _has_bits_[0]),
      -1,
      -1,
      sizeof(NativeAd_Creative),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative, _internal_metadata_),
      -1);
  NativeAd_Creative_Image_descriptor_ = NativeAd_Creative_descriptor_->nested_type(0);
  static const int NativeAd_Creative_Image_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Image, image_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Image, image_width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Image, image_height_),
  };
  NativeAd_Creative_Image_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NativeAd_Creative_Image_descriptor_,
      NativeAd_Creative_Image::default_instance_,
      NativeAd_Creative_Image_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Image, _has_bits_[0]),
      -1,
      -1,
      sizeof(NativeAd_Creative_Image),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Image, _internal_metadata_),
      -1);
  NativeAd_Creative_Link_descriptor_ = NativeAd_Creative_descriptor_->nested_type(1);
  static const int NativeAd_Creative_Link_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Link, click_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Link, deep_link_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Link, landing_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Link, content_click_tracks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Link, click_tracks_),
  };
  NativeAd_Creative_Link_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NativeAd_Creative_Link_descriptor_,
      NativeAd_Creative_Link::default_instance_,
      NativeAd_Creative_Link_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Link, _has_bits_[0]),
      -1,
      -1,
      sizeof(NativeAd_Creative_Link),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_Creative_Link, _internal_metadata_),
      -1);
  NativeAd_AppAttr_descriptor_ = NativeAd_descriptor_->nested_type(1);
  static const int NativeAd_AppAttr_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_AppAttr, app_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_AppAttr, app_pkg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_AppAttr, app_md5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_AppAttr, app_vc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_AppAttr, app_size_),
  };
  NativeAd_AppAttr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NativeAd_AppAttr_descriptor_,
      NativeAd_AppAttr::default_instance_,
      NativeAd_AppAttr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_AppAttr, _has_bits_[0]),
      -1,
      -1,
      sizeof(NativeAd_AppAttr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NativeAd_AppAttr, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_max_2dbidding_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BidRequest_descriptor_, &BidRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BidRequest_UserCategory_descriptor_, &BidRequest_UserCategory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BidRequest_ContentCategory_descriptor_, &BidRequest_ContentCategory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BidRequest_AdSlot_descriptor_, &BidRequest_AdSlot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BidRequest_AdSlot_Native_descriptor_, &BidRequest_AdSlot_Native::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BidRequest_AdSlot_Deal_descriptor_, &BidRequest_AdSlot_Deal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BidRequest_Mobile_descriptor_, &BidRequest_Mobile::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BidRequest_Mobile_Device_descriptor_, &BidRequest_Mobile_Device::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BidResponse_descriptor_, &BidResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BidResponse_Ads_descriptor_, &BidResponse_Ads::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NativeAd_descriptor_, &NativeAd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NativeAd_Creative_descriptor_, &NativeAd_Creative::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NativeAd_Creative_Image_descriptor_, &NativeAd_Creative_Image::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NativeAd_Creative_Link_descriptor_, &NativeAd_Creative_Link::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NativeAd_AppAttr_descriptor_, &NativeAd_AppAttr::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_max_2dbidding_2eproto() {
  delete BidRequest::default_instance_;
  delete BidRequest_reflection_;
  delete BidRequest_UserCategory::default_instance_;
  delete BidRequest_UserCategory_reflection_;
  delete BidRequest_ContentCategory::default_instance_;
  delete BidRequest_ContentCategory_reflection_;
  delete BidRequest_AdSlot::default_instance_;
  delete BidRequest_AdSlot_reflection_;
  delete BidRequest_AdSlot_Native::default_instance_;
  delete BidRequest_AdSlot_Native_reflection_;
  delete BidRequest_AdSlot_Deal::default_instance_;
  delete BidRequest_AdSlot_Deal_reflection_;
  delete BidRequest_Mobile::default_instance_;
  delete BidRequest_Mobile_reflection_;
  delete BidRequest_Mobile_Device::default_instance_;
  delete BidRequest_Mobile_Device_reflection_;
  delete BidResponse::default_instance_;
  delete BidResponse_reflection_;
  delete BidResponse_Ads::default_instance_;
  delete BidResponse_Ads_reflection_;
  delete NativeAd::default_instance_;
  delete NativeAd_reflection_;
  delete NativeAd_Creative::default_instance_;
  delete NativeAd_Creative_reflection_;
  delete NativeAd_Creative_Image::default_instance_;
  delete NativeAd_Creative_Image_reflection_;
  delete NativeAd_Creative_Link::default_instance_;
  delete NativeAd_Creative_Link_reflection_;
  delete NativeAd_AppAttr::default_instance_;
  delete NativeAd_AppAttr_reflection_;
}

void protobuf_AddDesc_max_2dbidding_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_max_2dbidding_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021max-bidding.proto\022\014protocol.MAX\"\211\021\n\nBi"
    "dRequest\022\013\n\003bid\030\001 \002(\t\022\022\n\007is_test\030\t \001(\r:\001"
    "0\022\032\n\016mediav_user_id\030\002 \001(\tB\002\030\001\022\022\n\nmv_user"
    "_id\030\021 \001(\t\022\013\n\003mid\030\024 \001(\t\022\n\n\002ip\030\003 \001(\t\022\022\n\nus"
    "er_agent\030\004 \001(\t\022\025\n\ruser_vertical\030\n \003(\005\022<\n"
    "\ruser_category\030\023 \003(\0132%.protocol.MAX.BidR"
    "equest.UserCategory\022\013\n\003url\030\005 \001(\t\022\020\n\010is_h"
    "ttps\030\025 \001(\010\022\023\n\010adx_type\030\006 \001(\r:\0010\022\031\n\021detec"
    "ted_language\030\013 \001(\t\022\024\n\014publisher_id\030\r \001(\005"
    "\022\032\n\022publisher_category\030\016 \003(\005\022\"\n\032publishe"
    "r_category_version\030\017 \001(\005\022B\n\020content_cate"
    "gory\030\022 \003(\0132(.protocol.MAX.BidRequest.Con"
    "tentCategory\022/\n\006adslot\030\007 \003(\0132\037.protocol."
    "MAX.BidRequest.AdSlot\022\032\n\022excluded_attrib"
    "ute\030\020 \003(\005\022\034\n\024excluded_ad_category\030\014 \003(\005\022"
    "/\n\006mobile\030\010 \001(\0132\037.protocol.MAX.BidReques"
    "t.Mobile\022\023\n\013extend_data\030d \001(\t\0320\n\014UserCat"
    "egory\022\n\n\002id\030\001 \002(\005\022\024\n\006weight\030\002 \002(\005:\0041000\032"
    "3\n\017ContentCategory\022\n\n\002id\030\001 \002(\005\022\024\n\006weight"
    "\030\002 \002(\005:\0041000\032\257\005\n\006AdSlot\022\n\n\002id\030\001 \002(\r\022\013\n\003p"
    "id\030\002 \001(\t\022\r\n\005width\030\003 \001(\005\022\016\n\006height\030\004 \001(\005\022"
    "\021\n\tview_type\030\005 \003(\r\022\025\n\rmin_cpm_price\030\006 \001("
    "\r\022U\n\017slot_visibility\030\007 \001(\0162..protocol.MA"
    "X.BidRequest.AdSlot.SlotVisibility:\014NO_D"
    "ETECTION\0226\n\006native\030\010 \001(\0132&.protocol.MAX."
    "BidRequest.AdSlot.Native\0223\n\005deals\030\t \003(\0132"
    "$.protocol.MAX.BidRequest.AdSlot.Deal\032C\n"
    "\006Native\022\016\n\006ad_num\030\001 \001(\r\022\024\n\014landing_type\030"
    "\002 \003(\005\022\023\n\013template_id\030\003 \003(\005\032\355\001\n\004Deal\022\017\n\007d"
    "eal_id\030\001 \002(\003\022S\n\tdeal_type\030\002 \002(\0162-.protoc"
    "ol.MAX.BidRequest.AdSlot.Deal.DealType:\021"
    "UNKNOWN_DEAL_TYPE\022\r\n\005price\030\004 \001(\r\022\014\n\004date"
    "\030\003 \001(\t\"b\n\010DealType\022\025\n\021UNKNOWN_DEAL_TYPE\020"
    "\000\022\022\n\016PREFERRED_DEAL\020\001\022\023\n\017PRIVATE_AUCTION"
    "\020\002\022\026\n\022PRIVATE_DIRECT_BUY\020\003\"J\n\016SlotVisibi"
    "lity\022\020\n\014NO_DETECTION\020\000\022\022\n\016ABOVE_THE_FOLD"
    "\020\001\022\022\n\016BELOW_THE_FOLD\020\002\032\364\005\n\006Mobile\022\016\n\006is_"
    "app\030\001 \001(\010\022\025\n\ris_fullscreen\030\002 \001(\010\022\016\n\006app_"
    "id\030\003 \001(\t\022\024\n\014package_name\030\006 \001(\t\0226\n\006device"
    "\030\004 \001(\0132&.protocol.MAX.BidRequest.Mobile."
    "Device\022\024\n\014app_category\030\005 \003(\005\032\316\004\n\006Device\022"
    "\020\n\010platform\030\001 \001(\t\022\r\n\005model\030\003 \001(\t\022\n\n\002os\030\004"
    " \001(\t\022\022\n\nos_version\030\005 \001(\t\022\017\n\007network\030\006 \001("
    "\r\022\022\n\ncarrier_id\030\007 \001(\005\022\021\n\tlongitude\030\010 \001(\t"
    "\022\020\n\010latitude\030\t \001(\t\022\024\n\014screen_width\030\n \001(\005"
    "\022\025\n\rscreen_height\030\013 \001(\005\022p\n\022screen_orient"
    "ation\030\014 \001(\01628.protocol.MAX.BidRequest.Mo"
    "bile.Device.ScreenOrientation:\032SCREEN_OR"
    "IENTATION_UNKNOWN\022\014\n\004idfa\030\r \001(\t\022\023\n\013hashe"
    "d_idfa\030\016 \001(\t\022\014\n\004imei\030\020 \001(\t\022\023\n\013hashed_ime"
    "i\030\017 \001(\t\022\022\n\nandroid_id\030\021 \001(\t\022\031\n\021hashed_an"
    "droid_id\030\022 \001(\t\022\013\n\003mac\030\023 \001(\t\022\022\n\nhashed_ma"
    "c\030\024 \001(\t\022\014\n\004m2id\030\025 \001(\t\"v\n\021ScreenOrientati"
    "on\022\036\n\032SCREEN_ORIENTATION_UNKNOWN\020\000\022\037\n\033SC"
    "REEN_ORIENTATION_PORTRAIT\020\001\022 \n\034SCREEN_OR"
    "IENTATION_LANDSCAPE\020\002\"\205\003\n\013BidResponse\022\013\n"
    "\003bid\030\001 \002(\t\022*\n\003ads\030\003 \003(\0132\035.protocol.MAX.B"
    "idResponse.Ads\032\274\002\n\003Ads\022\021\n\tadslot_id\030\001 \002("
    "\r\022\025\n\rmax_cpm_price\030\002 \002(\r\022\024\n\014html_snippet"
    "\030\003 \001(\t\022)\n\tnative_ad\030\r \003(\0132\026.protocol.MAX"
    ".NativeAd\022\020\n\010category\030\004 \003(\005\022\025\n\rcreative_"
    "type\030\005 \003(\005\022\032\n\022creative_attribute\030\016 \003(\005\022\027"
    "\n\017destination_url\030\006 \003(\t\022\025\n\radvertiser_id"
    "\030\007 \001(\t\022\023\n\013creative_id\030\010 \001(\t\022\r\n\005width\030\t \001"
    "(\005\022\016\n\006height\030\n \001(\005\022\023\n\013extend_data\030\013 \001(\t\022"
    "\014\n\004nurl\030\014 \001(\t\"\316\007\n\010NativeAd\022\025\n\rmax_cpm_pr"
    "ice\030\001 \002(\r\0222\n\tcreatives\030\002 \003(\0132\037.protocol."
    "MAX.NativeAd.Creative\022\023\n\013template_id\030\n \001"
    "(\005\0220\n\010app_attr\030\t \001(\0132\036.protocol.MAX.Nati"
    "veAd.AppAttr\022\031\n\021impression_tracks\030\003 \003(\t\022"
    "\020\n\010category\030\004 \003(\005\022\027\n\017destination_url\030\005 \003"
    "(\t\022\025\n\radvertiser_id\030\006 \001(\t\022\023\n\013creative_id"
    "\030\007 \001(\t\022\017\n\007deal_id\030\010 \001(\003\032\313\004\n\010Creative\022\023\n\013"
    "template_id\030\t \001(\005\022\r\n\005title\030\001 \001(\t\022\021\n\tsub_"
    "title\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\023\n\013butt"
    "on_name\030\004 \001(\t\022<\n\rcontent_image\030\005 \001(\0132%.p"
    "rotocol.MAX.NativeAd.Creative.Image\022;\n\014m"
    "ulti_images\030\014 \003(\0132%.protocol.MAX.NativeA"
    "d.Creative.Image\022;\n\014linked_image\030\010 \001(\0132%"
    ".protocol.MAX.NativeAd.Creative.Image\0223\n"
    "\004logo\030\006 \001(\0132%.protocol.MAX.NativeAd.Crea"
    "tive.Image\0222\n\004link\030\007 \001(\0132$.protocol.MAX."
    "NativeAd.Creative.Link\032E\n\005Image\022\021\n\timage"
    "_url\030\001 \001(\t\022\023\n\013image_width\030\002 \001(\005\022\024\n\014image"
    "_height\030\003 \001(\005\032v\n\004Link\022\021\n\tclick_url\030\001 \001(\t"
    "\022\021\n\tdeep_link\030\004 \001(\t\022\024\n\014landing_type\030\002 \001("
    "\005\022\034\n\024content_click_tracks\030\005 \003(\t\022\024\n\014click"
    "_tracks\030\003 \003(\t\032_\n\007AppAttr\022\020\n\010app_name\030\001 \001"
    "(\t\022\017\n\007app_pkg\030\002 \001(\t\022\017\n\007app_md5\030\003 \001(\t\022\016\n\006"
    "app_vc\030\004 \001(\005\022\020\n\010app_size\030\005 \001(\005", 3590);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "max-bidding.proto", &protobuf_RegisterTypes);
  BidRequest::default_instance_ = new BidRequest();
  BidRequest_UserCategory::default_instance_ = new BidRequest_UserCategory();
  BidRequest_ContentCategory::default_instance_ = new BidRequest_ContentCategory();
  BidRequest_AdSlot::default_instance_ = new BidRequest_AdSlot();
  BidRequest_AdSlot_Native::default_instance_ = new BidRequest_AdSlot_Native();
  BidRequest_AdSlot_Deal::default_instance_ = new BidRequest_AdSlot_Deal();
  BidRequest_Mobile::default_instance_ = new BidRequest_Mobile();
  BidRequest_Mobile_Device::default_instance_ = new BidRequest_Mobile_Device();
  BidResponse::default_instance_ = new BidResponse();
  BidResponse_Ads::default_instance_ = new BidResponse_Ads();
  NativeAd::default_instance_ = new NativeAd();
  NativeAd_Creative::default_instance_ = new NativeAd_Creative();
  NativeAd_Creative_Image::default_instance_ = new NativeAd_Creative_Image();
  NativeAd_Creative_Link::default_instance_ = new NativeAd_Creative_Link();
  NativeAd_AppAttr::default_instance_ = new NativeAd_AppAttr();
  BidRequest::default_instance_->InitAsDefaultInstance();
  BidRequest_UserCategory::default_instance_->InitAsDefaultInstance();
  BidRequest_ContentCategory::default_instance_->InitAsDefaultInstance();
  BidRequest_AdSlot::default_instance_->InitAsDefaultInstance();
  BidRequest_AdSlot_Native::default_instance_->InitAsDefaultInstance();
  BidRequest_AdSlot_Deal::default_instance_->InitAsDefaultInstance();
  BidRequest_Mobile::default_instance_->InitAsDefaultInstance();
  BidRequest_Mobile_Device::default_instance_->InitAsDefaultInstance();
  BidResponse::default_instance_->InitAsDefaultInstance();
  BidResponse_Ads::default_instance_->InitAsDefaultInstance();
  NativeAd::default_instance_->InitAsDefaultInstance();
  NativeAd_Creative::default_instance_->InitAsDefaultInstance();
  NativeAd_Creative_Image::default_instance_->InitAsDefaultInstance();
  NativeAd_Creative_Link::default_instance_->InitAsDefaultInstance();
  NativeAd_AppAttr::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_max_2dbidding_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_max_2dbidding_2eproto {
  StaticDescriptorInitializer_max_2dbidding_2eproto() {
    protobuf_AddDesc_max_2dbidding_2eproto();
  }
} static_descriptor_initializer_max_2dbidding_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidRequest_UserCategory::kIdFieldNumber;
const int BidRequest_UserCategory::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidRequest_UserCategory::BidRequest_UserCategory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.BidRequest.UserCategory)
}

void BidRequest_UserCategory::InitAsDefaultInstance() {
}

BidRequest_UserCategory::BidRequest_UserCategory(const BidRequest_UserCategory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.BidRequest.UserCategory)
}

void BidRequest_UserCategory::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  weight_ = 1000;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidRequest_UserCategory::~BidRequest_UserCategory() {
  // @@protoc_insertion_point(destructor:protocol.MAX.BidRequest.UserCategory)
  SharedDtor();
}

void BidRequest_UserCategory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BidRequest_UserCategory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidRequest_UserCategory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidRequest_UserCategory_descriptor_;
}

const BidRequest_UserCategory& BidRequest_UserCategory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

BidRequest_UserCategory* BidRequest_UserCategory::default_instance_ = NULL;

BidRequest_UserCategory* BidRequest_UserCategory::New(::google::protobuf::Arena* arena) const {
  BidRequest_UserCategory* n = new BidRequest_UserCategory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BidRequest_UserCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.BidRequest.UserCategory)
  if (_has_bits_[0 / 32] & 3u) {
    id_ = 0;
    weight_ = 1000;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BidRequest_UserCategory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.BidRequest.UserCategory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_weight;
        break;
      }

      // required int32 weight = 2 [default = 1000];
      case 2: {
        if (tag == 16) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.BidRequest.UserCategory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.BidRequest.UserCategory)
  return false;
#undef DO_
}

void BidRequest_UserCategory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.BidRequest.UserCategory)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 weight = 2 [default = 1000];
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->weight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.BidRequest.UserCategory)
}

::google::protobuf::uint8* BidRequest_UserCategory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.BidRequest.UserCategory)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 weight = 2 [default = 1000];
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->weight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.BidRequest.UserCategory)
  return target;
}

int BidRequest_UserCategory::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.MAX.BidRequest.UserCategory)
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_weight()) {
    // required int32 weight = 2 [default = 1000];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weight());
  }

  return total_size;
}
int BidRequest_UserCategory::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.BidRequest.UserCategory)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 weight = 2 [default = 1000];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weight());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidRequest_UserCategory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.BidRequest.UserCategory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BidRequest_UserCategory* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BidRequest_UserCategory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.BidRequest.UserCategory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.BidRequest.UserCategory)
    MergeFrom(*source);
  }
}

void BidRequest_UserCategory::MergeFrom(const BidRequest_UserCategory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.BidRequest.UserCategory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_weight()) {
      set_weight(from.weight());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BidRequest_UserCategory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.BidRequest.UserCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidRequest_UserCategory::CopyFrom(const BidRequest_UserCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.BidRequest.UserCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidRequest_UserCategory::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BidRequest_UserCategory::Swap(BidRequest_UserCategory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidRequest_UserCategory::InternalSwap(BidRequest_UserCategory* other) {
  std::swap(id_, other->id_);
  std::swap(weight_, other->weight_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BidRequest_UserCategory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidRequest_UserCategory_descriptor_;
  metadata.reflection = BidRequest_UserCategory_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidRequest_ContentCategory::kIdFieldNumber;
const int BidRequest_ContentCategory::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidRequest_ContentCategory::BidRequest_ContentCategory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.BidRequest.ContentCategory)
}

void BidRequest_ContentCategory::InitAsDefaultInstance() {
}

BidRequest_ContentCategory::BidRequest_ContentCategory(const BidRequest_ContentCategory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.BidRequest.ContentCategory)
}

void BidRequest_ContentCategory::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  weight_ = 1000;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidRequest_ContentCategory::~BidRequest_ContentCategory() {
  // @@protoc_insertion_point(destructor:protocol.MAX.BidRequest.ContentCategory)
  SharedDtor();
}

void BidRequest_ContentCategory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BidRequest_ContentCategory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidRequest_ContentCategory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidRequest_ContentCategory_descriptor_;
}

const BidRequest_ContentCategory& BidRequest_ContentCategory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

BidRequest_ContentCategory* BidRequest_ContentCategory::default_instance_ = NULL;

BidRequest_ContentCategory* BidRequest_ContentCategory::New(::google::protobuf::Arena* arena) const {
  BidRequest_ContentCategory* n = new BidRequest_ContentCategory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BidRequest_ContentCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.BidRequest.ContentCategory)
  if (_has_bits_[0 / 32] & 3u) {
    id_ = 0;
    weight_ = 1000;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BidRequest_ContentCategory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.BidRequest.ContentCategory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_weight;
        break;
      }

      // required int32 weight = 2 [default = 1000];
      case 2: {
        if (tag == 16) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.BidRequest.ContentCategory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.BidRequest.ContentCategory)
  return false;
#undef DO_
}

void BidRequest_ContentCategory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.BidRequest.ContentCategory)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 weight = 2 [default = 1000];
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->weight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.BidRequest.ContentCategory)
}

::google::protobuf::uint8* BidRequest_ContentCategory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.BidRequest.ContentCategory)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 weight = 2 [default = 1000];
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->weight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.BidRequest.ContentCategory)
  return target;
}

int BidRequest_ContentCategory::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.MAX.BidRequest.ContentCategory)
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_weight()) {
    // required int32 weight = 2 [default = 1000];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weight());
  }

  return total_size;
}
int BidRequest_ContentCategory::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.BidRequest.ContentCategory)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 weight = 2 [default = 1000];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weight());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidRequest_ContentCategory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.BidRequest.ContentCategory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BidRequest_ContentCategory* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BidRequest_ContentCategory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.BidRequest.ContentCategory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.BidRequest.ContentCategory)
    MergeFrom(*source);
  }
}

void BidRequest_ContentCategory::MergeFrom(const BidRequest_ContentCategory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.BidRequest.ContentCategory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_weight()) {
      set_weight(from.weight());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BidRequest_ContentCategory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.BidRequest.ContentCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidRequest_ContentCategory::CopyFrom(const BidRequest_ContentCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.BidRequest.ContentCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidRequest_ContentCategory::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BidRequest_ContentCategory::Swap(BidRequest_ContentCategory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidRequest_ContentCategory::InternalSwap(BidRequest_ContentCategory* other) {
  std::swap(id_, other->id_);
  std::swap(weight_, other->weight_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BidRequest_ContentCategory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidRequest_ContentCategory_descriptor_;
  metadata.reflection = BidRequest_ContentCategory_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_SlotVisibility_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidRequest_AdSlot_SlotVisibility_descriptor_;
}
bool BidRequest_AdSlot_SlotVisibility_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot::NO_DETECTION;
const BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot::ABOVE_THE_FOLD;
const BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot::BELOW_THE_FOLD;
const BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot::SlotVisibility_MIN;
const BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot::SlotVisibility_MAX;
const int BidRequest_AdSlot::SlotVisibility_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidRequest_AdSlot_Native::kAdNumFieldNumber;
const int BidRequest_AdSlot_Native::kLandingTypeFieldNumber;
const int BidRequest_AdSlot_Native::kTemplateIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidRequest_AdSlot_Native::BidRequest_AdSlot_Native()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.BidRequest.AdSlot.Native)
}

void BidRequest_AdSlot_Native::InitAsDefaultInstance() {
}

BidRequest_AdSlot_Native::BidRequest_AdSlot_Native(const BidRequest_AdSlot_Native& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.BidRequest.AdSlot.Native)
}

void BidRequest_AdSlot_Native::SharedCtor() {
  _cached_size_ = 0;
  ad_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidRequest_AdSlot_Native::~BidRequest_AdSlot_Native() {
  // @@protoc_insertion_point(destructor:protocol.MAX.BidRequest.AdSlot.Native)
  SharedDtor();
}

void BidRequest_AdSlot_Native::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BidRequest_AdSlot_Native::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidRequest_AdSlot_Native::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidRequest_AdSlot_Native_descriptor_;
}

const BidRequest_AdSlot_Native& BidRequest_AdSlot_Native::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

BidRequest_AdSlot_Native* BidRequest_AdSlot_Native::default_instance_ = NULL;

BidRequest_AdSlot_Native* BidRequest_AdSlot_Native::New(::google::protobuf::Arena* arena) const {
  BidRequest_AdSlot_Native* n = new BidRequest_AdSlot_Native;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BidRequest_AdSlot_Native::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.BidRequest.AdSlot.Native)
  ad_num_ = 0u;
  landing_type_.Clear();
  template_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BidRequest_AdSlot_Native::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.BidRequest.AdSlot.Native)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ad_num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ad_num_)));
          set_has_ad_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_landing_type;
        break;
      }

      // repeated int32 landing_type = 2;
      case 2: {
        if (tag == 16) {
         parse_landing_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_landing_type())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_landing_type())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_landing_type;
        if (input->ExpectTag(24)) goto parse_template_id;
        break;
      }

      // repeated int32 template_id = 3;
      case 3: {
        if (tag == 24) {
         parse_template_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_template_id())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_template_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_template_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.BidRequest.AdSlot.Native)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.BidRequest.AdSlot.Native)
  return false;
#undef DO_
}

void BidRequest_AdSlot_Native::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.BidRequest.AdSlot.Native)
  // optional uint32 ad_num = 1;
  if (has_ad_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ad_num(), output);
  }

  // repeated int32 landing_type = 2;
  for (int i = 0; i < this->landing_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->landing_type(i), output);
  }

  // repeated int32 template_id = 3;
  for (int i = 0; i < this->template_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->template_id(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.BidRequest.AdSlot.Native)
}

::google::protobuf::uint8* BidRequest_AdSlot_Native::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.BidRequest.AdSlot.Native)
  // optional uint32 ad_num = 1;
  if (has_ad_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ad_num(), target);
  }

  // repeated int32 landing_type = 2;
  for (int i = 0; i < this->landing_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->landing_type(i), target);
  }

  // repeated int32 template_id = 3;
  for (int i = 0; i < this->template_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->template_id(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.BidRequest.AdSlot.Native)
  return target;
}

int BidRequest_AdSlot_Native::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.BidRequest.AdSlot.Native)
  int total_size = 0;

  // optional uint32 ad_num = 1;
  if (has_ad_num()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ad_num());
  }

  // repeated int32 landing_type = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->landing_type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->landing_type(i));
    }
    total_size += 1 * this->landing_type_size() + data_size;
  }

  // repeated int32 template_id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->template_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->template_id(i));
    }
    total_size += 1 * this->template_id_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidRequest_AdSlot_Native::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.BidRequest.AdSlot.Native)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BidRequest_AdSlot_Native* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BidRequest_AdSlot_Native>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.BidRequest.AdSlot.Native)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.BidRequest.AdSlot.Native)
    MergeFrom(*source);
  }
}

void BidRequest_AdSlot_Native::MergeFrom(const BidRequest_AdSlot_Native& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.BidRequest.AdSlot.Native)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  landing_type_.MergeFrom(from.landing_type_);
  template_id_.MergeFrom(from.template_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ad_num()) {
      set_ad_num(from.ad_num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BidRequest_AdSlot_Native::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.BidRequest.AdSlot.Native)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidRequest_AdSlot_Native::CopyFrom(const BidRequest_AdSlot_Native& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.BidRequest.AdSlot.Native)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidRequest_AdSlot_Native::IsInitialized() const {

  return true;
}

void BidRequest_AdSlot_Native::Swap(BidRequest_AdSlot_Native* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidRequest_AdSlot_Native::InternalSwap(BidRequest_AdSlot_Native* other) {
  std::swap(ad_num_, other->ad_num_);
  landing_type_.UnsafeArenaSwap(&other->landing_type_);
  template_id_.UnsafeArenaSwap(&other->template_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BidRequest_AdSlot_Native::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidRequest_AdSlot_Native_descriptor_;
  metadata.reflection = BidRequest_AdSlot_Native_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_Deal_DealType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidRequest_AdSlot_Deal_DealType_descriptor_;
}
bool BidRequest_AdSlot_Deal_DealType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BidRequest_AdSlot_Deal_DealType BidRequest_AdSlot_Deal::UNKNOWN_DEAL_TYPE;
const BidRequest_AdSlot_Deal_DealType BidRequest_AdSlot_Deal::PREFERRED_DEAL;
const BidRequest_AdSlot_Deal_DealType BidRequest_AdSlot_Deal::PRIVATE_AUCTION;
const BidRequest_AdSlot_Deal_DealType BidRequest_AdSlot_Deal::PRIVATE_DIRECT_BUY;
const BidRequest_AdSlot_Deal_DealType BidRequest_AdSlot_Deal::DealType_MIN;
const BidRequest_AdSlot_Deal_DealType BidRequest_AdSlot_Deal::DealType_MAX;
const int BidRequest_AdSlot_Deal::DealType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidRequest_AdSlot_Deal::kDealIdFieldNumber;
const int BidRequest_AdSlot_Deal::kDealTypeFieldNumber;
const int BidRequest_AdSlot_Deal::kPriceFieldNumber;
const int BidRequest_AdSlot_Deal::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidRequest_AdSlot_Deal::BidRequest_AdSlot_Deal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.BidRequest.AdSlot.Deal)
}

void BidRequest_AdSlot_Deal::InitAsDefaultInstance() {
}

BidRequest_AdSlot_Deal::BidRequest_AdSlot_Deal(const BidRequest_AdSlot_Deal& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.BidRequest.AdSlot.Deal)
}

void BidRequest_AdSlot_Deal::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  deal_id_ = GOOGLE_LONGLONG(0);
  deal_type_ = 0;
  price_ = 0u;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidRequest_AdSlot_Deal::~BidRequest_AdSlot_Deal() {
  // @@protoc_insertion_point(destructor:protocol.MAX.BidRequest.AdSlot.Deal)
  SharedDtor();
}

void BidRequest_AdSlot_Deal::SharedDtor() {
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BidRequest_AdSlot_Deal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidRequest_AdSlot_Deal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidRequest_AdSlot_Deal_descriptor_;
}

const BidRequest_AdSlot_Deal& BidRequest_AdSlot_Deal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

BidRequest_AdSlot_Deal* BidRequest_AdSlot_Deal::default_instance_ = NULL;

BidRequest_AdSlot_Deal* BidRequest_AdSlot_Deal::New(::google::protobuf::Arena* arena) const {
  BidRequest_AdSlot_Deal* n = new BidRequest_AdSlot_Deal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BidRequest_AdSlot_Deal::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.BidRequest.AdSlot.Deal)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BidRequest_AdSlot_Deal, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BidRequest_AdSlot_Deal*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(deal_id_, price_);
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BidRequest_AdSlot_Deal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.BidRequest.AdSlot.Deal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 deal_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &deal_id_)));
          set_has_deal_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_deal_type;
        break;
      }

      // required .protocol.MAX.BidRequest.AdSlot.Deal.DealType deal_type = 2 [default = UNKNOWN_DEAL_TYPE];
      case 2: {
        if (tag == 16) {
         parse_deal_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protocol::MAX::BidRequest_AdSlot_Deal_DealType_IsValid(value)) {
            set_deal_type(static_cast< ::protocol::MAX::BidRequest_AdSlot_Deal_DealType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_date;
        break;
      }

      // optional string date = 3;
      case 3: {
        if (tag == 26) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.AdSlot.Deal.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_price;
        break;
      }

      // optional uint32 price = 4;
      case 4: {
        if (tag == 32) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.BidRequest.AdSlot.Deal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.BidRequest.AdSlot.Deal)
  return false;
#undef DO_
}

void BidRequest_AdSlot_Deal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.BidRequest.AdSlot.Deal)
  // required int64 deal_id = 1;
  if (has_deal_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->deal_id(), output);
  }

  // required .protocol.MAX.BidRequest.AdSlot.Deal.DealType deal_type = 2 [default = UNKNOWN_DEAL_TYPE];
  if (has_deal_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->deal_type(), output);
  }

  // optional string date = 3;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.AdSlot.Deal.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->date(), output);
  }

  // optional uint32 price = 4;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.BidRequest.AdSlot.Deal)
}

::google::protobuf::uint8* BidRequest_AdSlot_Deal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.BidRequest.AdSlot.Deal)
  // required int64 deal_id = 1;
  if (has_deal_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->deal_id(), target);
  }

  // required .protocol.MAX.BidRequest.AdSlot.Deal.DealType deal_type = 2 [default = UNKNOWN_DEAL_TYPE];
  if (has_deal_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->deal_type(), target);
  }

  // optional string date = 3;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.AdSlot.Deal.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->date(), target);
  }

  // optional uint32 price = 4;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.BidRequest.AdSlot.Deal)
  return target;
}

int BidRequest_AdSlot_Deal::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.MAX.BidRequest.AdSlot.Deal)
  int total_size = 0;

  if (has_deal_id()) {
    // required int64 deal_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->deal_id());
  }

  if (has_deal_type()) {
    // required .protocol.MAX.BidRequest.AdSlot.Deal.DealType deal_type = 2 [default = UNKNOWN_DEAL_TYPE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->deal_type());
  }

  return total_size;
}
int BidRequest_AdSlot_Deal::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.BidRequest.AdSlot.Deal)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 deal_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->deal_id());

    // required .protocol.MAX.BidRequest.AdSlot.Deal.DealType deal_type = 2 [default = UNKNOWN_DEAL_TYPE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->deal_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional uint32 price = 4;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price());
    }

    // optional string date = 3;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidRequest_AdSlot_Deal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.BidRequest.AdSlot.Deal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BidRequest_AdSlot_Deal* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BidRequest_AdSlot_Deal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.BidRequest.AdSlot.Deal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.BidRequest.AdSlot.Deal)
    MergeFrom(*source);
  }
}

void BidRequest_AdSlot_Deal::MergeFrom(const BidRequest_AdSlot_Deal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.BidRequest.AdSlot.Deal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_deal_id()) {
      set_deal_id(from.deal_id());
    }
    if (from.has_deal_type()) {
      set_deal_type(from.deal_type());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BidRequest_AdSlot_Deal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.BidRequest.AdSlot.Deal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidRequest_AdSlot_Deal::CopyFrom(const BidRequest_AdSlot_Deal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.BidRequest.AdSlot.Deal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidRequest_AdSlot_Deal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BidRequest_AdSlot_Deal::Swap(BidRequest_AdSlot_Deal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidRequest_AdSlot_Deal::InternalSwap(BidRequest_AdSlot_Deal* other) {
  std::swap(deal_id_, other->deal_id_);
  std::swap(deal_type_, other->deal_type_);
  std::swap(price_, other->price_);
  date_.Swap(&other->date_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BidRequest_AdSlot_Deal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidRequest_AdSlot_Deal_descriptor_;
  metadata.reflection = BidRequest_AdSlot_Deal_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidRequest_AdSlot::kIdFieldNumber;
const int BidRequest_AdSlot::kPidFieldNumber;
const int BidRequest_AdSlot::kWidthFieldNumber;
const int BidRequest_AdSlot::kHeightFieldNumber;
const int BidRequest_AdSlot::kViewTypeFieldNumber;
const int BidRequest_AdSlot::kMinCpmPriceFieldNumber;
const int BidRequest_AdSlot::kSlotVisibilityFieldNumber;
const int BidRequest_AdSlot::kNativeFieldNumber;
const int BidRequest_AdSlot::kDealsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidRequest_AdSlot::BidRequest_AdSlot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.BidRequest.AdSlot)
}

void BidRequest_AdSlot::InitAsDefaultInstance() {
  native_ = const_cast< ::protocol::MAX::BidRequest_AdSlot_Native*>(&::protocol::MAX::BidRequest_AdSlot_Native::default_instance());
}

BidRequest_AdSlot::BidRequest_AdSlot(const BidRequest_AdSlot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.BidRequest.AdSlot)
}

void BidRequest_AdSlot::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  width_ = 0;
  height_ = 0;
  min_cpm_price_ = 0u;
  slot_visibility_ = 0;
  native_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidRequest_AdSlot::~BidRequest_AdSlot() {
  // @@protoc_insertion_point(destructor:protocol.MAX.BidRequest.AdSlot)
  SharedDtor();
}

void BidRequest_AdSlot::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete native_;
  }
}

void BidRequest_AdSlot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidRequest_AdSlot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidRequest_AdSlot_descriptor_;
}

const BidRequest_AdSlot& BidRequest_AdSlot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

BidRequest_AdSlot* BidRequest_AdSlot::default_instance_ = NULL;

BidRequest_AdSlot* BidRequest_AdSlot::New(::google::protobuf::Arena* arena) const {
  BidRequest_AdSlot* n = new BidRequest_AdSlot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BidRequest_AdSlot::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.BidRequest.AdSlot)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BidRequest_AdSlot, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BidRequest_AdSlot*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 239u) {
    ZR_(id_, width_);
    ZR_(height_, min_cpm_price_);
    if (has_pid()) {
      pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    slot_visibility_ = 0;
    if (has_native()) {
      if (native_ != NULL) native_->::protocol::MAX::BidRequest_AdSlot_Native::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  view_type_.Clear();
  deals_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BidRequest_AdSlot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.BidRequest.AdSlot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pid;
        break;
      }

      // optional string pid = 2;
      case 2: {
        if (tag == 18) {
         parse_pid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pid().data(), this->pid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.AdSlot.pid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_width;
        break;
      }

      // optional int32 width = 3;
      case 3: {
        if (tag == 24) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_height;
        break;
      }

      // optional int32 height = 4;
      case 4: {
        if (tag == 32) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_view_type;
        break;
      }

      // repeated uint32 view_type = 5;
      case 5: {
        if (tag == 40) {
         parse_view_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_view_type())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_view_type())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_view_type;
        if (input->ExpectTag(48)) goto parse_min_cpm_price;
        break;
      }

      // optional uint32 min_cpm_price = 6;
      case 6: {
        if (tag == 48) {
         parse_min_cpm_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &min_cpm_price_)));
          set_has_min_cpm_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_slot_visibility;
        break;
      }

      // optional .protocol.MAX.BidRequest.AdSlot.SlotVisibility slot_visibility = 7 [default = NO_DETECTION];
      case 7: {
        if (tag == 56) {
         parse_slot_visibility:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protocol::MAX::BidRequest_AdSlot_SlotVisibility_IsValid(value)) {
            set_slot_visibility(static_cast< ::protocol::MAX::BidRequest_AdSlot_SlotVisibility >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_native;
        break;
      }

      // optional .protocol.MAX.BidRequest.AdSlot.Native native = 8;
      case 8: {
        if (tag == 66) {
         parse_native:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_native()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_deals;
        break;
      }

      // repeated .protocol.MAX.BidRequest.AdSlot.Deal deals = 9;
      case 9: {
        if (tag == 74) {
         parse_deals:
          DO_(input->IncrementRecursionDepth());
         parse_loop_deals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_deals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_deals;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.BidRequest.AdSlot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.BidRequest.AdSlot)
  return false;
#undef DO_
}

void BidRequest_AdSlot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.BidRequest.AdSlot)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional string pid = 2;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.AdSlot.pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pid(), output);
  }

  // optional int32 width = 3;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }

  // optional int32 height = 4;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->height(), output);
  }

  // repeated uint32 view_type = 5;
  for (int i = 0; i < this->view_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->view_type(i), output);
  }

  // optional uint32 min_cpm_price = 6;
  if (has_min_cpm_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->min_cpm_price(), output);
  }

  // optional .protocol.MAX.BidRequest.AdSlot.SlotVisibility slot_visibility = 7 [default = NO_DETECTION];
  if (has_slot_visibility()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->slot_visibility(), output);
  }

  // optional .protocol.MAX.BidRequest.AdSlot.Native native = 8;
  if (has_native()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->native_, output);
  }

  // repeated .protocol.MAX.BidRequest.AdSlot.Deal deals = 9;
  for (unsigned int i = 0, n = this->deals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->deals(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.BidRequest.AdSlot)
}

::google::protobuf::uint8* BidRequest_AdSlot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.BidRequest.AdSlot)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional string pid = 2;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.AdSlot.pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pid(), target);
  }

  // optional int32 width = 3;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }

  // optional int32 height = 4;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->height(), target);
  }

  // repeated uint32 view_type = 5;
  for (int i = 0; i < this->view_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->view_type(i), target);
  }

  // optional uint32 min_cpm_price = 6;
  if (has_min_cpm_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->min_cpm_price(), target);
  }

  // optional .protocol.MAX.BidRequest.AdSlot.SlotVisibility slot_visibility = 7 [default = NO_DETECTION];
  if (has_slot_visibility()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->slot_visibility(), target);
  }

  // optional .protocol.MAX.BidRequest.AdSlot.Native native = 8;
  if (has_native()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->native_, false, target);
  }

  // repeated .protocol.MAX.BidRequest.AdSlot.Deal deals = 9;
  for (unsigned int i = 0, n = this->deals_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->deals(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.BidRequest.AdSlot)
  return target;
}

int BidRequest_AdSlot::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.BidRequest.AdSlot)
  int total_size = 0;

  // required uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }
  if (_has_bits_[1 / 32] & 238u) {
    // optional string pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pid());
    }

    // optional int32 width = 3;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 height = 4;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

    // optional uint32 min_cpm_price = 6;
    if (has_min_cpm_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->min_cpm_price());
    }

    // optional .protocol.MAX.BidRequest.AdSlot.SlotVisibility slot_visibility = 7 [default = NO_DETECTION];
    if (has_slot_visibility()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->slot_visibility());
    }

    // optional .protocol.MAX.BidRequest.AdSlot.Native native = 8;
    if (has_native()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->native_);
    }

  }
  // repeated uint32 view_type = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->view_type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->view_type(i));
    }
    total_size += 1 * this->view_type_size() + data_size;
  }

  // repeated .protocol.MAX.BidRequest.AdSlot.Deal deals = 9;
  total_size += 1 * this->deals_size();
  for (int i = 0; i < this->deals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->deals(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidRequest_AdSlot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.BidRequest.AdSlot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BidRequest_AdSlot* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BidRequest_AdSlot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.BidRequest.AdSlot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.BidRequest.AdSlot)
    MergeFrom(*source);
  }
}

void BidRequest_AdSlot::MergeFrom(const BidRequest_AdSlot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.BidRequest.AdSlot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  view_type_.MergeFrom(from.view_type_);
  deals_.MergeFrom(from.deals_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_pid()) {
      set_has_pid();
      pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_min_cpm_price()) {
      set_min_cpm_price(from.min_cpm_price());
    }
    if (from.has_slot_visibility()) {
      set_slot_visibility(from.slot_visibility());
    }
    if (from.has_native()) {
      mutable_native()->::protocol::MAX::BidRequest_AdSlot_Native::MergeFrom(from.native());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BidRequest_AdSlot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.BidRequest.AdSlot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidRequest_AdSlot::CopyFrom(const BidRequest_AdSlot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.BidRequest.AdSlot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidRequest_AdSlot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->deals())) return false;
  return true;
}

void BidRequest_AdSlot::Swap(BidRequest_AdSlot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidRequest_AdSlot::InternalSwap(BidRequest_AdSlot* other) {
  std::swap(id_, other->id_);
  pid_.Swap(&other->pid_);
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  view_type_.UnsafeArenaSwap(&other->view_type_);
  std::swap(min_cpm_price_, other->min_cpm_price_);
  std::swap(slot_visibility_, other->slot_visibility_);
  std::swap(native_, other->native_);
  deals_.UnsafeArenaSwap(&other->deals_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BidRequest_AdSlot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidRequest_AdSlot_descriptor_;
  metadata.reflection = BidRequest_AdSlot_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_Device_ScreenOrientation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidRequest_Mobile_Device_ScreenOrientation_descriptor_;
}
bool BidRequest_Mobile_Device_ScreenOrientation_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BidRequest_Mobile_Device_ScreenOrientation BidRequest_Mobile_Device::SCREEN_ORIENTATION_UNKNOWN;
const BidRequest_Mobile_Device_ScreenOrientation BidRequest_Mobile_Device::SCREEN_ORIENTATION_PORTRAIT;
const BidRequest_Mobile_Device_ScreenOrientation BidRequest_Mobile_Device::SCREEN_ORIENTATION_LANDSCAPE;
const BidRequest_Mobile_Device_ScreenOrientation BidRequest_Mobile_Device::ScreenOrientation_MIN;
const BidRequest_Mobile_Device_ScreenOrientation BidRequest_Mobile_Device::ScreenOrientation_MAX;
const int BidRequest_Mobile_Device::ScreenOrientation_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidRequest_Mobile_Device::kPlatformFieldNumber;
const int BidRequest_Mobile_Device::kModelFieldNumber;
const int BidRequest_Mobile_Device::kOsFieldNumber;
const int BidRequest_Mobile_Device::kOsVersionFieldNumber;
const int BidRequest_Mobile_Device::kNetworkFieldNumber;
const int BidRequest_Mobile_Device::kCarrierIdFieldNumber;
const int BidRequest_Mobile_Device::kLongitudeFieldNumber;
const int BidRequest_Mobile_Device::kLatitudeFieldNumber;
const int BidRequest_Mobile_Device::kScreenWidthFieldNumber;
const int BidRequest_Mobile_Device::kScreenHeightFieldNumber;
const int BidRequest_Mobile_Device::kScreenOrientationFieldNumber;
const int BidRequest_Mobile_Device::kIdfaFieldNumber;
const int BidRequest_Mobile_Device::kHashedIdfaFieldNumber;
const int BidRequest_Mobile_Device::kImeiFieldNumber;
const int BidRequest_Mobile_Device::kHashedImeiFieldNumber;
const int BidRequest_Mobile_Device::kAndroidIdFieldNumber;
const int BidRequest_Mobile_Device::kHashedAndroidIdFieldNumber;
const int BidRequest_Mobile_Device::kMacFieldNumber;
const int BidRequest_Mobile_Device::kHashedMacFieldNumber;
const int BidRequest_Mobile_Device::kM2IdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidRequest_Mobile_Device::BidRequest_Mobile_Device()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.BidRequest.Mobile.Device)
}

void BidRequest_Mobile_Device::InitAsDefaultInstance() {
}

BidRequest_Mobile_Device::BidRequest_Mobile_Device(const BidRequest_Mobile_Device& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.BidRequest.Mobile.Device)
}

void BidRequest_Mobile_Device::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_ = 0u;
  carrier_id_ = 0;
  longitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screen_width_ = 0;
  screen_height_ = 0;
  screen_orientation_ = 0;
  idfa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashed_idfa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashed_imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashed_android_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashed_mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  m2id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidRequest_Mobile_Device::~BidRequest_Mobile_Device() {
  // @@protoc_insertion_point(destructor:protocol.MAX.BidRequest.Mobile.Device)
  SharedDtor();
}

void BidRequest_Mobile_Device::SharedDtor() {
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  longitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idfa_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashed_idfa_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashed_imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashed_android_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashed_mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  m2id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BidRequest_Mobile_Device::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidRequest_Mobile_Device::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidRequest_Mobile_Device_descriptor_;
}

const BidRequest_Mobile_Device& BidRequest_Mobile_Device::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

BidRequest_Mobile_Device* BidRequest_Mobile_Device::default_instance_ = NULL;

BidRequest_Mobile_Device* BidRequest_Mobile_Device::New(::google::protobuf::Arena* arena) const {
  BidRequest_Mobile_Device* n = new BidRequest_Mobile_Device;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BidRequest_Mobile_Device::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.BidRequest.Mobile.Device)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BidRequest_Mobile_Device, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BidRequest_Mobile_Device*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(network_, carrier_id_);
    if (has_platform()) {
      platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_model()) {
      model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_os()) {
      os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_os_version()) {
      os_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_longitude()) {
      longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_latitude()) {
      latitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(screen_width_, screen_height_);
    screen_orientation_ = 0;
    if (has_idfa()) {
      idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_hashed_idfa()) {
      hashed_idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_imei()) {
      imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_hashed_imei()) {
      hashed_imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_android_id()) {
      android_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[16 / 32] & 983040u) {
    if (has_hashed_android_id()) {
      hashed_android_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mac()) {
      mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_hashed_mac()) {
      hashed_mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_m2id()) {
      m2id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BidRequest_Mobile_Device::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.BidRequest.Mobile.Device)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string platform = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platform().data(), this->platform().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.platform");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_model;
        break;
      }

      // optional string model = 3;
      case 3: {
        if (tag == 26) {
         parse_model:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model().data(), this->model().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.model");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_os;
        break;
      }

      // optional string os = 4;
      case 4: {
        if (tag == 34) {
         parse_os:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->os().data(), this->os().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.os");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_os_version;
        break;
      }

      // optional string os_version = 5;
      case 5: {
        if (tag == 42) {
         parse_os_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->os_version().data(), this->os_version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.os_version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_network;
        break;
      }

      // optional uint32 network = 6;
      case 6: {
        if (tag == 48) {
         parse_network:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_)));
          set_has_network();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_carrier_id;
        break;
      }

      // optional int32 carrier_id = 7;
      case 7: {
        if (tag == 56) {
         parse_carrier_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrier_id_)));
          set_has_carrier_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_longitude;
        break;
      }

      // optional string longitude = 8;
      case 8: {
        if (tag == 66) {
         parse_longitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_longitude()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->longitude().data(), this->longitude().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.longitude");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_latitude;
        break;
      }

      // optional string latitude = 9;
      case 9: {
        if (tag == 74) {
         parse_latitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latitude()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->latitude().data(), this->latitude().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.latitude");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_screen_width;
        break;
      }

      // optional int32 screen_width = 10;
      case 10: {
        if (tag == 80) {
         parse_screen_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &screen_width_)));
          set_has_screen_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_screen_height;
        break;
      }

      // optional int32 screen_height = 11;
      case 11: {
        if (tag == 88) {
         parse_screen_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &screen_height_)));
          set_has_screen_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_screen_orientation;
        break;
      }

      // optional .protocol.MAX.BidRequest.Mobile.Device.ScreenOrientation screen_orientation = 12 [default = SCREEN_ORIENTATION_UNKNOWN];
      case 12: {
        if (tag == 96) {
         parse_screen_orientation:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation_IsValid(value)) {
            set_screen_orientation(static_cast< ::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_idfa;
        break;
      }

      // optional string idfa = 13;
      case 13: {
        if (tag == 106) {
         parse_idfa:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idfa()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->idfa().data(), this->idfa().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.idfa");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_hashed_idfa;
        break;
      }

      // optional string hashed_idfa = 14;
      case 14: {
        if (tag == 114) {
         parse_hashed_idfa:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashed_idfa()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hashed_idfa().data(), this->hashed_idfa().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.hashed_idfa");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_hashed_imei;
        break;
      }

      // optional string hashed_imei = 15;
      case 15: {
        if (tag == 122) {
         parse_hashed_imei:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashed_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hashed_imei().data(), this->hashed_imei().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.hashed_imei");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_imei;
        break;
      }

      // optional string imei = 16;
      case 16: {
        if (tag == 130) {
         parse_imei:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imei().data(), this->imei().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.imei");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_android_id;
        break;
      }

      // optional string android_id = 17;
      case 17: {
        if (tag == 138) {
         parse_android_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_android_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->android_id().data(), this->android_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.android_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_hashed_android_id;
        break;
      }

      // optional string hashed_android_id = 18;
      case 18: {
        if (tag == 146) {
         parse_hashed_android_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashed_android_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hashed_android_id().data(), this->hashed_android_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.hashed_android_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_mac;
        break;
      }

      // optional string mac = 19;
      case 19: {
        if (tag == 154) {
         parse_mac:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mac().data(), this->mac().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.mac");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_hashed_mac;
        break;
      }

      // optional string hashed_mac = 20;
      case 20: {
        if (tag == 162) {
         parse_hashed_mac:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashed_mac()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hashed_mac().data(), this->hashed_mac().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.hashed_mac");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_m2id;
        break;
      }

      // optional string m2id = 21;
      case 21: {
        if (tag == 170) {
         parse_m2id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m2id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->m2id().data(), this->m2id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.Device.m2id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.BidRequest.Mobile.Device)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.BidRequest.Mobile.Device)
  return false;
#undef DO_
}

void BidRequest_Mobile_Device::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.BidRequest.Mobile.Device)
  // optional string platform = 1;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->platform(), output);
  }

  // optional string model = 3;
  if (has_model()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->model(), output);
  }

  // optional string os = 4;
  if (has_os()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os().data(), this->os().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.os");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->os(), output);
  }

  // optional string os_version = 5;
  if (has_os_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os_version().data(), this->os_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.os_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->os_version(), output);
  }

  // optional uint32 network = 6;
  if (has_network()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->network(), output);
  }

  // optional int32 carrier_id = 7;
  if (has_carrier_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->carrier_id(), output);
  }

  // optional string longitude = 8;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.longitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->longitude(), output);
  }

  // optional string latitude = 9;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.latitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->latitude(), output);
  }

  // optional int32 screen_width = 10;
  if (has_screen_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->screen_width(), output);
  }

  // optional int32 screen_height = 11;
  if (has_screen_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->screen_height(), output);
  }

  // optional .protocol.MAX.BidRequest.Mobile.Device.ScreenOrientation screen_orientation = 12 [default = SCREEN_ORIENTATION_UNKNOWN];
  if (has_screen_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->screen_orientation(), output);
  }

  // optional string idfa = 13;
  if (has_idfa()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idfa().data(), this->idfa().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.idfa");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->idfa(), output);
  }

  // optional string hashed_idfa = 14;
  if (has_hashed_idfa()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashed_idfa().data(), this->hashed_idfa().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.hashed_idfa");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->hashed_idfa(), output);
  }

  // optional string hashed_imei = 15;
  if (has_hashed_imei()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashed_imei().data(), this->hashed_imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.hashed_imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->hashed_imei(), output);
  }

  // optional string imei = 16;
  if (has_imei()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->imei(), output);
  }

  // optional string android_id = 17;
  if (has_android_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->android_id().data(), this->android_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.android_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->android_id(), output);
  }

  // optional string hashed_android_id = 18;
  if (has_hashed_android_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashed_android_id().data(), this->hashed_android_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.hashed_android_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->hashed_android_id(), output);
  }

  // optional string mac = 19;
  if (has_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->mac(), output);
  }

  // optional string hashed_mac = 20;
  if (has_hashed_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashed_mac().data(), this->hashed_mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.hashed_mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->hashed_mac(), output);
  }

  // optional string m2id = 21;
  if (has_m2id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->m2id().data(), this->m2id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.m2id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->m2id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.BidRequest.Mobile.Device)
}

::google::protobuf::uint8* BidRequest_Mobile_Device::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.BidRequest.Mobile.Device)
  // optional string platform = 1;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->platform(), target);
  }

  // optional string model = 3;
  if (has_model()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->model(), target);
  }

  // optional string os = 4;
  if (has_os()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os().data(), this->os().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.os");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->os(), target);
  }

  // optional string os_version = 5;
  if (has_os_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os_version().data(), this->os_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.os_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->os_version(), target);
  }

  // optional uint32 network = 6;
  if (has_network()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->network(), target);
  }

  // optional int32 carrier_id = 7;
  if (has_carrier_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->carrier_id(), target);
  }

  // optional string longitude = 8;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.longitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->longitude(), target);
  }

  // optional string latitude = 9;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.latitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->latitude(), target);
  }

  // optional int32 screen_width = 10;
  if (has_screen_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->screen_width(), target);
  }

  // optional int32 screen_height = 11;
  if (has_screen_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->screen_height(), target);
  }

  // optional .protocol.MAX.BidRequest.Mobile.Device.ScreenOrientation screen_orientation = 12 [default = SCREEN_ORIENTATION_UNKNOWN];
  if (has_screen_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->screen_orientation(), target);
  }

  // optional string idfa = 13;
  if (has_idfa()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->idfa().data(), this->idfa().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.idfa");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->idfa(), target);
  }

  // optional string hashed_idfa = 14;
  if (has_hashed_idfa()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashed_idfa().data(), this->hashed_idfa().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.hashed_idfa");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->hashed_idfa(), target);
  }

  // optional string hashed_imei = 15;
  if (has_hashed_imei()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashed_imei().data(), this->hashed_imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.hashed_imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->hashed_imei(), target);
  }

  // optional string imei = 16;
  if (has_imei()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->imei(), target);
  }

  // optional string android_id = 17;
  if (has_android_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->android_id().data(), this->android_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.android_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->android_id(), target);
  }

  // optional string hashed_android_id = 18;
  if (has_hashed_android_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashed_android_id().data(), this->hashed_android_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.hashed_android_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->hashed_android_id(), target);
  }

  // optional string mac = 19;
  if (has_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->mac(), target);
  }

  // optional string hashed_mac = 20;
  if (has_hashed_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashed_mac().data(), this->hashed_mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.hashed_mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->hashed_mac(), target);
  }

  // optional string m2id = 21;
  if (has_m2id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->m2id().data(), this->m2id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.Device.m2id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->m2id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.BidRequest.Mobile.Device)
  return target;
}

int BidRequest_Mobile_Device::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.BidRequest.Mobile.Device)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string platform = 1;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platform());
    }

    // optional string model = 3;
    if (has_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model());
    }

    // optional string os = 4;
    if (has_os()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->os());
    }

    // optional string os_version = 5;
    if (has_os_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->os_version());
    }

    // optional uint32 network = 6;
    if (has_network()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network());
    }

    // optional int32 carrier_id = 7;
    if (has_carrier_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->carrier_id());
    }

    // optional string longitude = 8;
    if (has_longitude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->longitude());
    }

    // optional string latitude = 9;
    if (has_latitude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->latitude());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 screen_width = 10;
    if (has_screen_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->screen_width());
    }

    // optional int32 screen_height = 11;
    if (has_screen_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->screen_height());
    }

    // optional .protocol.MAX.BidRequest.Mobile.Device.ScreenOrientation screen_orientation = 12 [default = SCREEN_ORIENTATION_UNKNOWN];
    if (has_screen_orientation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->screen_orientation());
    }

    // optional string idfa = 13;
    if (has_idfa()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->idfa());
    }

    // optional string hashed_idfa = 14;
    if (has_hashed_idfa()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hashed_idfa());
    }

    // optional string imei = 16;
    if (has_imei()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

    // optional string hashed_imei = 15;
    if (has_hashed_imei()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hashed_imei());
    }

    // optional string android_id = 17;
    if (has_android_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->android_id());
    }

  }
  if (_has_bits_[16 / 32] & 983040u) {
    // optional string hashed_android_id = 18;
    if (has_hashed_android_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hashed_android_id());
    }

    // optional string mac = 19;
    if (has_mac()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mac());
    }

    // optional string hashed_mac = 20;
    if (has_hashed_mac()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hashed_mac());
    }

    // optional string m2id = 21;
    if (has_m2id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m2id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidRequest_Mobile_Device::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.BidRequest.Mobile.Device)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BidRequest_Mobile_Device* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BidRequest_Mobile_Device>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.BidRequest.Mobile.Device)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.BidRequest.Mobile.Device)
    MergeFrom(*source);
  }
}

void BidRequest_Mobile_Device::MergeFrom(const BidRequest_Mobile_Device& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.BidRequest.Mobile.Device)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_platform()) {
      set_has_platform();
      platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
    }
    if (from.has_model()) {
      set_has_model();
      model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
    }
    if (from.has_os()) {
      set_has_os();
      os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
    }
    if (from.has_os_version()) {
      set_has_os_version();
      os_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_version_);
    }
    if (from.has_network()) {
      set_network(from.network());
    }
    if (from.has_carrier_id()) {
      set_carrier_id(from.carrier_id());
    }
    if (from.has_longitude()) {
      set_has_longitude();
      longitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longitude_);
    }
    if (from.has_latitude()) {
      set_has_latitude();
      latitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latitude_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_screen_width()) {
      set_screen_width(from.screen_width());
    }
    if (from.has_screen_height()) {
      set_screen_height(from.screen_height());
    }
    if (from.has_screen_orientation()) {
      set_screen_orientation(from.screen_orientation());
    }
    if (from.has_idfa()) {
      set_has_idfa();
      idfa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idfa_);
    }
    if (from.has_hashed_idfa()) {
      set_has_hashed_idfa();
      hashed_idfa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashed_idfa_);
    }
    if (from.has_imei()) {
      set_has_imei();
      imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
    }
    if (from.has_hashed_imei()) {
      set_has_hashed_imei();
      hashed_imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashed_imei_);
    }
    if (from.has_android_id()) {
      set_has_android_id();
      android_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_id_);
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_hashed_android_id()) {
      set_has_hashed_android_id();
      hashed_android_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashed_android_id_);
    }
    if (from.has_mac()) {
      set_has_mac();
      mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
    }
    if (from.has_hashed_mac()) {
      set_has_hashed_mac();
      hashed_mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashed_mac_);
    }
    if (from.has_m2id()) {
      set_has_m2id();
      m2id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.m2id_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BidRequest_Mobile_Device::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.BidRequest.Mobile.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidRequest_Mobile_Device::CopyFrom(const BidRequest_Mobile_Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.BidRequest.Mobile.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidRequest_Mobile_Device::IsInitialized() const {

  return true;
}

void BidRequest_Mobile_Device::Swap(BidRequest_Mobile_Device* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidRequest_Mobile_Device::InternalSwap(BidRequest_Mobile_Device* other) {
  platform_.Swap(&other->platform_);
  model_.Swap(&other->model_);
  os_.Swap(&other->os_);
  os_version_.Swap(&other->os_version_);
  std::swap(network_, other->network_);
  std::swap(carrier_id_, other->carrier_id_);
  longitude_.Swap(&other->longitude_);
  latitude_.Swap(&other->latitude_);
  std::swap(screen_width_, other->screen_width_);
  std::swap(screen_height_, other->screen_height_);
  std::swap(screen_orientation_, other->screen_orientation_);
  idfa_.Swap(&other->idfa_);
  hashed_idfa_.Swap(&other->hashed_idfa_);
  imei_.Swap(&other->imei_);
  hashed_imei_.Swap(&other->hashed_imei_);
  android_id_.Swap(&other->android_id_);
  hashed_android_id_.Swap(&other->hashed_android_id_);
  mac_.Swap(&other->mac_);
  hashed_mac_.Swap(&other->hashed_mac_);
  m2id_.Swap(&other->m2id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BidRequest_Mobile_Device::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidRequest_Mobile_Device_descriptor_;
  metadata.reflection = BidRequest_Mobile_Device_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidRequest_Mobile::kIsAppFieldNumber;
const int BidRequest_Mobile::kIsFullscreenFieldNumber;
const int BidRequest_Mobile::kAppIdFieldNumber;
const int BidRequest_Mobile::kPackageNameFieldNumber;
const int BidRequest_Mobile::kDeviceFieldNumber;
const int BidRequest_Mobile::kAppCategoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidRequest_Mobile::BidRequest_Mobile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.BidRequest.Mobile)
}

void BidRequest_Mobile::InitAsDefaultInstance() {
  device_ = const_cast< ::protocol::MAX::BidRequest_Mobile_Device*>(&::protocol::MAX::BidRequest_Mobile_Device::default_instance());
}

BidRequest_Mobile::BidRequest_Mobile(const BidRequest_Mobile& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.BidRequest.Mobile)
}

void BidRequest_Mobile::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  is_app_ = false;
  is_fullscreen_ = false;
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidRequest_Mobile::~BidRequest_Mobile() {
  // @@protoc_insertion_point(destructor:protocol.MAX.BidRequest.Mobile)
  SharedDtor();
}

void BidRequest_Mobile::SharedDtor() {
  app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete device_;
  }
}

void BidRequest_Mobile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidRequest_Mobile::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidRequest_Mobile_descriptor_;
}

const BidRequest_Mobile& BidRequest_Mobile::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

BidRequest_Mobile* BidRequest_Mobile::default_instance_ = NULL;

BidRequest_Mobile* BidRequest_Mobile::New(::google::protobuf::Arena* arena) const {
  BidRequest_Mobile* n = new BidRequest_Mobile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BidRequest_Mobile::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.BidRequest.Mobile)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BidRequest_Mobile, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BidRequest_Mobile*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(is_app_, is_fullscreen_);
    if (has_app_id()) {
      app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_package_name()) {
      package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_device()) {
      if (device_ != NULL) device_->::protocol::MAX::BidRequest_Mobile_Device::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  app_category_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BidRequest_Mobile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.BidRequest.Mobile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_app = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_app_)));
          set_has_is_app();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_is_fullscreen;
        break;
      }

      // optional bool is_fullscreen = 2;
      case 2: {
        if (tag == 16) {
         parse_is_fullscreen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_fullscreen_)));
          set_has_is_fullscreen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_app_id;
        break;
      }

      // optional string app_id = 3;
      case 3: {
        if (tag == 26) {
         parse_app_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app_id().data(), this->app_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.app_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_device;
        break;
      }

      // optional .protocol.MAX.BidRequest.Mobile.Device device = 4;
      case 4: {
        if (tag == 34) {
         parse_device:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_device()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_app_category;
        break;
      }

      // repeated int32 app_category = 5;
      case 5: {
        if (tag == 40) {
         parse_app_category:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_app_category())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_app_category())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_app_category;
        if (input->ExpectTag(50)) goto parse_package_name;
        break;
      }

      // optional string package_name = 6;
      case 6: {
        if (tag == 50) {
         parse_package_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package_name().data(), this->package_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.Mobile.package_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.BidRequest.Mobile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.BidRequest.Mobile)
  return false;
#undef DO_
}

void BidRequest_Mobile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.BidRequest.Mobile)
  // optional bool is_app = 1;
  if (has_is_app()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_app(), output);
  }

  // optional bool is_fullscreen = 2;
  if (has_is_fullscreen()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_fullscreen(), output);
  }

  // optional string app_id = 3;
  if (has_app_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_id().data(), this->app_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.app_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->app_id(), output);
  }

  // optional .protocol.MAX.BidRequest.Mobile.Device device = 4;
  if (has_device()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->device_, output);
  }

  // repeated int32 app_category = 5;
  for (int i = 0; i < this->app_category_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->app_category(i), output);
  }

  // optional string package_name = 6;
  if (has_package_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), this->package_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->package_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.BidRequest.Mobile)
}

::google::protobuf::uint8* BidRequest_Mobile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.BidRequest.Mobile)
  // optional bool is_app = 1;
  if (has_is_app()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_app(), target);
  }

  // optional bool is_fullscreen = 2;
  if (has_is_fullscreen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_fullscreen(), target);
  }

  // optional string app_id = 3;
  if (has_app_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_id().data(), this->app_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.app_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->app_id(), target);
  }

  // optional .protocol.MAX.BidRequest.Mobile.Device device = 4;
  if (has_device()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->device_, false, target);
  }

  // repeated int32 app_category = 5;
  for (int i = 0; i < this->app_category_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->app_category(i), target);
  }

  // optional string package_name = 6;
  if (has_package_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), this->package_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.Mobile.package_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->package_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.BidRequest.Mobile)
  return target;
}

int BidRequest_Mobile::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.BidRequest.Mobile)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool is_app = 1;
    if (has_is_app()) {
      total_size += 1 + 1;
    }

    // optional bool is_fullscreen = 2;
    if (has_is_fullscreen()) {
      total_size += 1 + 1;
    }

    // optional string app_id = 3;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app_id());
    }

    // optional string package_name = 6;
    if (has_package_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional .protocol.MAX.BidRequest.Mobile.Device device = 4;
    if (has_device()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->device_);
    }

  }
  // repeated int32 app_category = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->app_category_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->app_category(i));
    }
    total_size += 1 * this->app_category_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidRequest_Mobile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.BidRequest.Mobile)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BidRequest_Mobile* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BidRequest_Mobile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.BidRequest.Mobile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.BidRequest.Mobile)
    MergeFrom(*source);
  }
}

void BidRequest_Mobile::MergeFrom(const BidRequest_Mobile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.BidRequest.Mobile)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  app_category_.MergeFrom(from.app_category_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_app()) {
      set_is_app(from.is_app());
    }
    if (from.has_is_fullscreen()) {
      set_is_fullscreen(from.is_fullscreen());
    }
    if (from.has_app_id()) {
      set_has_app_id();
      app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
    }
    if (from.has_package_name()) {
      set_has_package_name();
      package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (from.has_device()) {
      mutable_device()->::protocol::MAX::BidRequest_Mobile_Device::MergeFrom(from.device());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BidRequest_Mobile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.BidRequest.Mobile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidRequest_Mobile::CopyFrom(const BidRequest_Mobile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.BidRequest.Mobile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidRequest_Mobile::IsInitialized() const {

  return true;
}

void BidRequest_Mobile::Swap(BidRequest_Mobile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidRequest_Mobile::InternalSwap(BidRequest_Mobile* other) {
  std::swap(is_app_, other->is_app_);
  std::swap(is_fullscreen_, other->is_fullscreen_);
  app_id_.Swap(&other->app_id_);
  package_name_.Swap(&other->package_name_);
  std::swap(device_, other->device_);
  app_category_.UnsafeArenaSwap(&other->app_category_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BidRequest_Mobile::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidRequest_Mobile_descriptor_;
  metadata.reflection = BidRequest_Mobile_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidRequest::kBidFieldNumber;
const int BidRequest::kIsTestFieldNumber;
const int BidRequest::kMediavUserIdFieldNumber;
const int BidRequest::kMvUserIdFieldNumber;
const int BidRequest::kMidFieldNumber;
const int BidRequest::kIpFieldNumber;
const int BidRequest::kUserAgentFieldNumber;
const int BidRequest::kUserVerticalFieldNumber;
const int BidRequest::kUserCategoryFieldNumber;
const int BidRequest::kUrlFieldNumber;
const int BidRequest::kIsHttpsFieldNumber;
const int BidRequest::kAdxTypeFieldNumber;
const int BidRequest::kDetectedLanguageFieldNumber;
const int BidRequest::kPublisherIdFieldNumber;
const int BidRequest::kPublisherCategoryFieldNumber;
const int BidRequest::kPublisherCategoryVersionFieldNumber;
const int BidRequest::kContentCategoryFieldNumber;
const int BidRequest::kAdslotFieldNumber;
const int BidRequest::kExcludedAttributeFieldNumber;
const int BidRequest::kExcludedAdCategoryFieldNumber;
const int BidRequest::kMobileFieldNumber;
const int BidRequest::kExtendDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidRequest::BidRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.BidRequest)
}

void BidRequest::InitAsDefaultInstance() {
  mobile_ = const_cast< ::protocol::MAX::BidRequest_Mobile*>(&::protocol::MAX::BidRequest_Mobile::default_instance());
}

BidRequest::BidRequest(const BidRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.BidRequest)
}

void BidRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_test_ = 0u;
  mediav_user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mv_user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_https_ = false;
  adx_type_ = 0u;
  detected_language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publisher_id_ = 0;
  publisher_category_version_ = 0;
  mobile_ = NULL;
  extend_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidRequest::~BidRequest() {
  // @@protoc_insertion_point(destructor:protocol.MAX.BidRequest)
  SharedDtor();
}

void BidRequest::SharedDtor() {
  bid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mediav_user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mv_user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_agent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detected_language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete mobile_;
  }
}

void BidRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidRequest_descriptor_;
}

const BidRequest& BidRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

BidRequest* BidRequest::default_instance_ = NULL;

BidRequest* BidRequest::New(::google::protobuf::Arena* arena) const {
  BidRequest* n = new BidRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BidRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.BidRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BidRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BidRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    if (has_bid()) {
      bid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    is_test_ = 0u;
    if (has_mediav_user_id()) {
      mediav_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mv_user_id()) {
      mv_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mid()) {
      mid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ip()) {
      ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_user_agent()) {
      user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 48640u) {
    ZR_(adx_type_, publisher_id_);
    if (has_url()) {
      url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    is_https_ = false;
    if (has_detected_language()) {
      detected_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    publisher_category_version_ = 0;
  }
  if (_has_bits_[16 / 32] & 3145728u) {
    if (has_mobile()) {
      if (mobile_ != NULL) mobile_->::protocol::MAX::BidRequest_Mobile::Clear();
    }
    if (has_extend_data()) {
      extend_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  user_vertical_.Clear();
  user_category_.Clear();
  publisher_category_.Clear();
  content_category_.Clear();
  adslot_.Clear();
  excluded_attribute_.Clear();
  excluded_ad_category_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BidRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.BidRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bid().data(), this->bid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.bid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mediav_user_id;
        break;
      }

      // optional string mediav_user_id = 2 [deprecated = true];
      case 2: {
        if (tag == 18) {
         parse_mediav_user_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mediav_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mediav_user_id().data(), this->mediav_user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.mediav_user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ip;
        break;
      }

      // optional string ip = 3;
      case 3: {
        if (tag == 26) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_user_agent;
        break;
      }

      // optional string user_agent = 4;
      case 4: {
        if (tag == 34) {
         parse_user_agent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_agent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_agent().data(), this->user_agent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.user_agent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_url;
        break;
      }

      // optional string url = 5;
      case 5: {
        if (tag == 42) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_adx_type;
        break;
      }

      // optional uint32 adx_type = 6 [default = 0];
      case 6: {
        if (tag == 48) {
         parse_adx_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adx_type_)));
          set_has_adx_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_adslot;
        break;
      }

      // repeated .protocol.MAX.BidRequest.AdSlot adslot = 7;
      case 7: {
        if (tag == 58) {
         parse_adslot:
          DO_(input->IncrementRecursionDepth());
         parse_loop_adslot:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_adslot()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_adslot;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(66)) goto parse_mobile;
        break;
      }

      // optional .protocol.MAX.BidRequest.Mobile mobile = 8;
      case 8: {
        if (tag == 66) {
         parse_mobile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mobile()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_is_test;
        break;
      }

      // optional uint32 is_test = 9 [default = 0];
      case 9: {
        if (tag == 72) {
         parse_is_test:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_test_)));
          set_has_is_test();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_user_vertical;
        break;
      }

      // repeated int32 user_vertical = 10;
      case 10: {
        if (tag == 80) {
         parse_user_vertical:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 80, input, this->mutable_user_vertical())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_user_vertical())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_user_vertical;
        if (input->ExpectTag(90)) goto parse_detected_language;
        break;
      }

      // optional string detected_language = 11;
      case 11: {
        if (tag == 90) {
         parse_detected_language:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detected_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->detected_language().data(), this->detected_language().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.detected_language");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_excluded_ad_category;
        break;
      }

      // repeated int32 excluded_ad_category = 12;
      case 12: {
        if (tag == 96) {
         parse_excluded_ad_category:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 96, input, this->mutable_excluded_ad_category())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_excluded_ad_category())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_excluded_ad_category;
        if (input->ExpectTag(104)) goto parse_publisher_id;
        break;
      }

      // optional int32 publisher_id = 13;
      case 13: {
        if (tag == 104) {
         parse_publisher_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &publisher_id_)));
          set_has_publisher_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_publisher_category;
        break;
      }

      // repeated int32 publisher_category = 14;
      case 14: {
        if (tag == 112) {
         parse_publisher_category:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 112, input, this->mutable_publisher_category())));
        } else if (tag == 114) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_publisher_category())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_publisher_category;
        if (input->ExpectTag(120)) goto parse_publisher_category_version;
        break;
      }

      // optional int32 publisher_category_version = 15;
      case 15: {
        if (tag == 120) {
         parse_publisher_category_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &publisher_category_version_)));
          set_has_publisher_category_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_excluded_attribute;
        break;
      }

      // repeated int32 excluded_attribute = 16;
      case 16: {
        if (tag == 128) {
         parse_excluded_attribute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 128, input, this->mutable_excluded_attribute())));
        } else if (tag == 130) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_excluded_attribute())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_excluded_attribute;
        if (input->ExpectTag(138)) goto parse_mv_user_id;
        break;
      }

      // optional string mv_user_id = 17;
      case 17: {
        if (tag == 138) {
         parse_mv_user_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mv_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mv_user_id().data(), this->mv_user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.mv_user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_content_category;
        break;
      }

      // repeated .protocol.MAX.BidRequest.ContentCategory content_category = 18;
      case 18: {
        if (tag == 146) {
         parse_content_category:
          DO_(input->IncrementRecursionDepth());
         parse_loop_content_category:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_content_category()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_loop_content_category;
        if (input->ExpectTag(154)) goto parse_loop_user_category;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .protocol.MAX.BidRequest.UserCategory user_category = 19;
      case 19: {
        if (tag == 154) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_user_category:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_user_category()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_loop_user_category;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(162)) goto parse_mid;
        break;
      }

      // optional string mid = 20;
      case 20: {
        if (tag == 162) {
         parse_mid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mid().data(), this->mid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.mid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_is_https;
        break;
      }

      // optional bool is_https = 21;
      case 21: {
        if (tag == 168) {
         parse_is_https:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_https_)));
          set_has_is_https();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_extend_data;
        break;
      }

      // optional string extend_data = 100;
      case 100: {
        if (tag == 802) {
         parse_extend_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extend_data().data(), this->extend_data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidRequest.extend_data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.BidRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.BidRequest)
  return false;
#undef DO_
}

void BidRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.BidRequest)
  // required string bid = 1;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bid().data(), this->bid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.bid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bid(), output);
  }

  // optional string mediav_user_id = 2 [deprecated = true];
  if (has_mediav_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mediav_user_id().data(), this->mediav_user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.mediav_user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mediav_user_id(), output);
  }

  // optional string ip = 3;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip(), output);
  }

  // optional string user_agent = 4;
  if (has_user_agent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_agent().data(), this->user_agent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.user_agent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_agent(), output);
  }

  // optional string url = 5;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->url(), output);
  }

  // optional uint32 adx_type = 6 [default = 0];
  if (has_adx_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->adx_type(), output);
  }

  // repeated .protocol.MAX.BidRequest.AdSlot adslot = 7;
  for (unsigned int i = 0, n = this->adslot_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->adslot(i), output);
  }

  // optional .protocol.MAX.BidRequest.Mobile mobile = 8;
  if (has_mobile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->mobile_, output);
  }

  // optional uint32 is_test = 9 [default = 0];
  if (has_is_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->is_test(), output);
  }

  // repeated int32 user_vertical = 10;
  for (int i = 0; i < this->user_vertical_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      10, this->user_vertical(i), output);
  }

  // optional string detected_language = 11;
  if (has_detected_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detected_language().data(), this->detected_language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.detected_language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->detected_language(), output);
  }

  // repeated int32 excluded_ad_category = 12;
  for (int i = 0; i < this->excluded_ad_category_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      12, this->excluded_ad_category(i), output);
  }

  // optional int32 publisher_id = 13;
  if (has_publisher_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->publisher_id(), output);
  }

  // repeated int32 publisher_category = 14;
  for (int i = 0; i < this->publisher_category_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      14, this->publisher_category(i), output);
  }

  // optional int32 publisher_category_version = 15;
  if (has_publisher_category_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->publisher_category_version(), output);
  }

  // repeated int32 excluded_attribute = 16;
  for (int i = 0; i < this->excluded_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      16, this->excluded_attribute(i), output);
  }

  // optional string mv_user_id = 17;
  if (has_mv_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mv_user_id().data(), this->mv_user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.mv_user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->mv_user_id(), output);
  }

  // repeated .protocol.MAX.BidRequest.ContentCategory content_category = 18;
  for (unsigned int i = 0, n = this->content_category_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->content_category(i), output);
  }

  // repeated .protocol.MAX.BidRequest.UserCategory user_category = 19;
  for (unsigned int i = 0, n = this->user_category_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->user_category(i), output);
  }

  // optional string mid = 20;
  if (has_mid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.mid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->mid(), output);
  }

  // optional bool is_https = 21;
  if (has_is_https()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->is_https(), output);
  }

  // optional string extend_data = 100;
  if (has_extend_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extend_data().data(), this->extend_data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.extend_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->extend_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.BidRequest)
}

::google::protobuf::uint8* BidRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.BidRequest)
  // required string bid = 1;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bid().data(), this->bid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.bid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bid(), target);
  }

  // optional string mediav_user_id = 2 [deprecated = true];
  if (has_mediav_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mediav_user_id().data(), this->mediav_user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.mediav_user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mediav_user_id(), target);
  }

  // optional string ip = 3;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip(), target);
  }

  // optional string user_agent = 4;
  if (has_user_agent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_agent().data(), this->user_agent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.user_agent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_agent(), target);
  }

  // optional string url = 5;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->url(), target);
  }

  // optional uint32 adx_type = 6 [default = 0];
  if (has_adx_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->adx_type(), target);
  }

  // repeated .protocol.MAX.BidRequest.AdSlot adslot = 7;
  for (unsigned int i = 0, n = this->adslot_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->adslot(i), false, target);
  }

  // optional .protocol.MAX.BidRequest.Mobile mobile = 8;
  if (has_mobile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->mobile_, false, target);
  }

  // optional uint32 is_test = 9 [default = 0];
  if (has_is_test()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->is_test(), target);
  }

  // repeated int32 user_vertical = 10;
  for (int i = 0; i < this->user_vertical_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(10, this->user_vertical(i), target);
  }

  // optional string detected_language = 11;
  if (has_detected_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detected_language().data(), this->detected_language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.detected_language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->detected_language(), target);
  }

  // repeated int32 excluded_ad_category = 12;
  for (int i = 0; i < this->excluded_ad_category_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(12, this->excluded_ad_category(i), target);
  }

  // optional int32 publisher_id = 13;
  if (has_publisher_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->publisher_id(), target);
  }

  // repeated int32 publisher_category = 14;
  for (int i = 0; i < this->publisher_category_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(14, this->publisher_category(i), target);
  }

  // optional int32 publisher_category_version = 15;
  if (has_publisher_category_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->publisher_category_version(), target);
  }

  // repeated int32 excluded_attribute = 16;
  for (int i = 0; i < this->excluded_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(16, this->excluded_attribute(i), target);
  }

  // optional string mv_user_id = 17;
  if (has_mv_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mv_user_id().data(), this->mv_user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.mv_user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->mv_user_id(), target);
  }

  // repeated .protocol.MAX.BidRequest.ContentCategory content_category = 18;
  for (unsigned int i = 0, n = this->content_category_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, this->content_category(i), false, target);
  }

  // repeated .protocol.MAX.BidRequest.UserCategory user_category = 19;
  for (unsigned int i = 0, n = this->user_category_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, this->user_category(i), false, target);
  }

  // optional string mid = 20;
  if (has_mid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.mid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->mid(), target);
  }

  // optional bool is_https = 21;
  if (has_is_https()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->is_https(), target);
  }

  // optional string extend_data = 100;
  if (has_extend_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extend_data().data(), this->extend_data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidRequest.extend_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->extend_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.BidRequest)
  return target;
}

int BidRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.BidRequest)
  int total_size = 0;

  // required string bid = 1;
  if (has_bid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bid());
  }
  if (_has_bits_[1 / 32] & 126u) {
    // optional uint32 is_test = 9 [default = 0];
    if (has_is_test()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->is_test());
    }

    // optional string mediav_user_id = 2 [deprecated = true];
    if (has_mediav_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mediav_user_id());
    }

    // optional string mv_user_id = 17;
    if (has_mv_user_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mv_user_id());
    }

    // optional string mid = 20;
    if (has_mid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mid());
    }

    // optional string ip = 3;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional string user_agent = 4;
    if (has_user_agent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_agent());
    }

  }
  if (_has_bits_[9 / 32] & 48640u) {
    // optional string url = 5;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional bool is_https = 21;
    if (has_is_https()) {
      total_size += 2 + 1;
    }

    // optional uint32 adx_type = 6 [default = 0];
    if (has_adx_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->adx_type());
    }

    // optional string detected_language = 11;
    if (has_detected_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->detected_language());
    }

    // optional int32 publisher_id = 13;
    if (has_publisher_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->publisher_id());
    }

    // optional int32 publisher_category_version = 15;
    if (has_publisher_category_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->publisher_category_version());
    }

  }
  if (_has_bits_[20 / 32] & 3145728u) {
    // optional .protocol.MAX.BidRequest.Mobile mobile = 8;
    if (has_mobile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->mobile_);
    }

    // optional string extend_data = 100;
    if (has_extend_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extend_data());
    }

  }
  // repeated int32 user_vertical = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->user_vertical_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->user_vertical(i));
    }
    total_size += 1 * this->user_vertical_size() + data_size;
  }

  // repeated .protocol.MAX.BidRequest.UserCategory user_category = 19;
  total_size += 2 * this->user_category_size();
  for (int i = 0; i < this->user_category_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->user_category(i));
  }

  // repeated int32 publisher_category = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->publisher_category_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->publisher_category(i));
    }
    total_size += 1 * this->publisher_category_size() + data_size;
  }

  // repeated .protocol.MAX.BidRequest.ContentCategory content_category = 18;
  total_size += 2 * this->content_category_size();
  for (int i = 0; i < this->content_category_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->content_category(i));
  }

  // repeated .protocol.MAX.BidRequest.AdSlot adslot = 7;
  total_size += 1 * this->adslot_size();
  for (int i = 0; i < this->adslot_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->adslot(i));
  }

  // repeated int32 excluded_attribute = 16;
  {
    int data_size = 0;
    for (int i = 0; i < this->excluded_attribute_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->excluded_attribute(i));
    }
    total_size += 2 * this->excluded_attribute_size() + data_size;
  }

  // repeated int32 excluded_ad_category = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->excluded_ad_category_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->excluded_ad_category(i));
    }
    total_size += 1 * this->excluded_ad_category_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.BidRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BidRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BidRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.BidRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.BidRequest)
    MergeFrom(*source);
  }
}

void BidRequest::MergeFrom(const BidRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.BidRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  user_vertical_.MergeFrom(from.user_vertical_);
  user_category_.MergeFrom(from.user_category_);
  publisher_category_.MergeFrom(from.publisher_category_);
  content_category_.MergeFrom(from.content_category_);
  adslot_.MergeFrom(from.adslot_);
  excluded_attribute_.MergeFrom(from.excluded_attribute_);
  excluded_ad_category_.MergeFrom(from.excluded_ad_category_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bid()) {
      set_has_bid();
      bid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bid_);
    }
    if (from.has_is_test()) {
      set_is_test(from.is_test());
    }
    if (from.has_mediav_user_id()) {
      set_has_mediav_user_id();
      mediav_user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mediav_user_id_);
    }
    if (from.has_mv_user_id()) {
      set_has_mv_user_id();
      mv_user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mv_user_id_);
    }
    if (from.has_mid()) {
      set_has_mid();
      mid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mid_);
    }
    if (from.has_ip()) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (from.has_user_agent()) {
      set_has_user_agent();
      user_agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_agent_);
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_url()) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (from.has_is_https()) {
      set_is_https(from.is_https());
    }
    if (from.has_adx_type()) {
      set_adx_type(from.adx_type());
    }
    if (from.has_detected_language()) {
      set_has_detected_language();
      detected_language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detected_language_);
    }
    if (from.has_publisher_id()) {
      set_publisher_id(from.publisher_id());
    }
    if (from.has_publisher_category_version()) {
      set_publisher_category_version(from.publisher_category_version());
    }
  }
  if (from._has_bits_[20 / 32] & (0xffu << (20 % 32))) {
    if (from.has_mobile()) {
      mutable_mobile()->::protocol::MAX::BidRequest_Mobile::MergeFrom(from.mobile());
    }
    if (from.has_extend_data()) {
      set_has_extend_data();
      extend_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BidRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.BidRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidRequest::CopyFrom(const BidRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.BidRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->user_category())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->content_category())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->adslot())) return false;
  return true;
}

void BidRequest::Swap(BidRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidRequest::InternalSwap(BidRequest* other) {
  bid_.Swap(&other->bid_);
  std::swap(is_test_, other->is_test_);
  mediav_user_id_.Swap(&other->mediav_user_id_);
  mv_user_id_.Swap(&other->mv_user_id_);
  mid_.Swap(&other->mid_);
  ip_.Swap(&other->ip_);
  user_agent_.Swap(&other->user_agent_);
  user_vertical_.UnsafeArenaSwap(&other->user_vertical_);
  user_category_.UnsafeArenaSwap(&other->user_category_);
  url_.Swap(&other->url_);
  std::swap(is_https_, other->is_https_);
  std::swap(adx_type_, other->adx_type_);
  detected_language_.Swap(&other->detected_language_);
  std::swap(publisher_id_, other->publisher_id_);
  publisher_category_.UnsafeArenaSwap(&other->publisher_category_);
  std::swap(publisher_category_version_, other->publisher_category_version_);
  content_category_.UnsafeArenaSwap(&other->content_category_);
  adslot_.UnsafeArenaSwap(&other->adslot_);
  excluded_attribute_.UnsafeArenaSwap(&other->excluded_attribute_);
  excluded_ad_category_.UnsafeArenaSwap(&other->excluded_ad_category_);
  std::swap(mobile_, other->mobile_);
  extend_data_.Swap(&other->extend_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BidRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidRequest_descriptor_;
  metadata.reflection = BidRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BidRequest_UserCategory

// required int32 id = 1;
bool BidRequest_UserCategory::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BidRequest_UserCategory::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void BidRequest_UserCategory::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void BidRequest_UserCategory::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 BidRequest_UserCategory::id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.UserCategory.id)
  return id_;
}
 void BidRequest_UserCategory::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.UserCategory.id)
}

// required int32 weight = 2 [default = 1000];
bool BidRequest_UserCategory::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BidRequest_UserCategory::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
void BidRequest_UserCategory::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
void BidRequest_UserCategory::clear_weight() {
  weight_ = 1000;
  clear_has_weight();
}
 ::google::protobuf::int32 BidRequest_UserCategory::weight() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.UserCategory.weight)
  return weight_;
}
 void BidRequest_UserCategory::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.UserCategory.weight)
}

// -------------------------------------------------------------------

// BidRequest_ContentCategory

// required int32 id = 1;
bool BidRequest_ContentCategory::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BidRequest_ContentCategory::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void BidRequest_ContentCategory::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void BidRequest_ContentCategory::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 BidRequest_ContentCategory::id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.ContentCategory.id)
  return id_;
}
 void BidRequest_ContentCategory::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.ContentCategory.id)
}

// required int32 weight = 2 [default = 1000];
bool BidRequest_ContentCategory::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BidRequest_ContentCategory::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
void BidRequest_ContentCategory::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
void BidRequest_ContentCategory::clear_weight() {
  weight_ = 1000;
  clear_has_weight();
}
 ::google::protobuf::int32 BidRequest_ContentCategory::weight() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.ContentCategory.weight)
  return weight_;
}
 void BidRequest_ContentCategory::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.ContentCategory.weight)
}

// -------------------------------------------------------------------

// BidRequest_AdSlot_Native

// optional uint32 ad_num = 1;
bool BidRequest_AdSlot_Native::has_ad_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BidRequest_AdSlot_Native::set_has_ad_num() {
  _has_bits_[0] |= 0x00000001u;
}
void BidRequest_AdSlot_Native::clear_has_ad_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void BidRequest_AdSlot_Native::clear_ad_num() {
  ad_num_ = 0u;
  clear_has_ad_num();
}
 ::google::protobuf::uint32 BidRequest_AdSlot_Native::ad_num() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Native.ad_num)
  return ad_num_;
}
 void BidRequest_AdSlot_Native::set_ad_num(::google::protobuf::uint32 value) {
  set_has_ad_num();
  ad_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Native.ad_num)
}

// repeated int32 landing_type = 2;
int BidRequest_AdSlot_Native::landing_type_size() const {
  return landing_type_.size();
}
void BidRequest_AdSlot_Native::clear_landing_type() {
  landing_type_.Clear();
}
 ::google::protobuf::int32 BidRequest_AdSlot_Native::landing_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Native.landing_type)
  return landing_type_.Get(index);
}
 void BidRequest_AdSlot_Native::set_landing_type(int index, ::google::protobuf::int32 value) {
  landing_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Native.landing_type)
}
 void BidRequest_AdSlot_Native::add_landing_type(::google::protobuf::int32 value) {
  landing_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.AdSlot.Native.landing_type)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot_Native::landing_type() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.AdSlot.Native.landing_type)
  return landing_type_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot_Native::mutable_landing_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.AdSlot.Native.landing_type)
  return &landing_type_;
}

// repeated int32 template_id = 3;
int BidRequest_AdSlot_Native::template_id_size() const {
  return template_id_.size();
}
void BidRequest_AdSlot_Native::clear_template_id() {
  template_id_.Clear();
}
 ::google::protobuf::int32 BidRequest_AdSlot_Native::template_id(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Native.template_id)
  return template_id_.Get(index);
}
 void BidRequest_AdSlot_Native::set_template_id(int index, ::google::protobuf::int32 value) {
  template_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Native.template_id)
}
 void BidRequest_AdSlot_Native::add_template_id(::google::protobuf::int32 value) {
  template_id_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.AdSlot.Native.template_id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot_Native::template_id() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.AdSlot.Native.template_id)
  return template_id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot_Native::mutable_template_id() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.AdSlot.Native.template_id)
  return &template_id_;
}

// -------------------------------------------------------------------

// BidRequest_AdSlot_Deal

// required int64 deal_id = 1;
bool BidRequest_AdSlot_Deal::has_deal_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BidRequest_AdSlot_Deal::set_has_deal_id() {
  _has_bits_[0] |= 0x00000001u;
}
void BidRequest_AdSlot_Deal::clear_has_deal_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void BidRequest_AdSlot_Deal::clear_deal_id() {
  deal_id_ = GOOGLE_LONGLONG(0);
  clear_has_deal_id();
}
 ::google::protobuf::int64 BidRequest_AdSlot_Deal::deal_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Deal.deal_id)
  return deal_id_;
}
 void BidRequest_AdSlot_Deal::set_deal_id(::google::protobuf::int64 value) {
  set_has_deal_id();
  deal_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Deal.deal_id)
}

// required .protocol.MAX.BidRequest.AdSlot.Deal.DealType deal_type = 2 [default = UNKNOWN_DEAL_TYPE];
bool BidRequest_AdSlot_Deal::has_deal_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BidRequest_AdSlot_Deal::set_has_deal_type() {
  _has_bits_[0] |= 0x00000002u;
}
void BidRequest_AdSlot_Deal::clear_has_deal_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void BidRequest_AdSlot_Deal::clear_deal_type() {
  deal_type_ = 0;
  clear_has_deal_type();
}
 ::protocol::MAX::BidRequest_AdSlot_Deal_DealType BidRequest_AdSlot_Deal::deal_type() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Deal.deal_type)
  return static_cast< ::protocol::MAX::BidRequest_AdSlot_Deal_DealType >(deal_type_);
}
 void BidRequest_AdSlot_Deal::set_deal_type(::protocol::MAX::BidRequest_AdSlot_Deal_DealType value) {
  assert(::protocol::MAX::BidRequest_AdSlot_Deal_DealType_IsValid(value));
  set_has_deal_type();
  deal_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Deal.deal_type)
}

// optional uint32 price = 4;
bool BidRequest_AdSlot_Deal::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BidRequest_AdSlot_Deal::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
void BidRequest_AdSlot_Deal::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
void BidRequest_AdSlot_Deal::clear_price() {
  price_ = 0u;
  clear_has_price();
}
 ::google::protobuf::uint32 BidRequest_AdSlot_Deal::price() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Deal.price)
  return price_;
}
 void BidRequest_AdSlot_Deal::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Deal.price)
}

// optional string date = 3;
bool BidRequest_AdSlot_Deal::has_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BidRequest_AdSlot_Deal::set_has_date() {
  _has_bits_[0] |= 0x00000008u;
}
void BidRequest_AdSlot_Deal::clear_has_date() {
  _has_bits_[0] &= ~0x00000008u;
}
void BidRequest_AdSlot_Deal::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& BidRequest_AdSlot_Deal::date() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.Deal.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_AdSlot_Deal::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.Deal.date)
}
 void BidRequest_AdSlot_Deal::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.AdSlot.Deal.date)
}
 void BidRequest_AdSlot_Deal::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.AdSlot.Deal.date)
}
 ::std::string* BidRequest_AdSlot_Deal::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.AdSlot.Deal.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_AdSlot_Deal::release_date() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.AdSlot.Deal.date)
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_AdSlot_Deal::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.AdSlot.Deal.date)
}

// -------------------------------------------------------------------

// BidRequest_AdSlot

// required uint32 id = 1;
bool BidRequest_AdSlot::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BidRequest_AdSlot::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void BidRequest_AdSlot::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void BidRequest_AdSlot::clear_id() {
  id_ = 0u;
  clear_has_id();
}
 ::google::protobuf::uint32 BidRequest_AdSlot::id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.id)
  return id_;
}
 void BidRequest_AdSlot::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.id)
}

// optional string pid = 2;
bool BidRequest_AdSlot::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BidRequest_AdSlot::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
void BidRequest_AdSlot::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BidRequest_AdSlot::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
 const ::std::string& BidRequest_AdSlot::pid() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.pid)
  return pid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_AdSlot::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.pid)
}
 void BidRequest_AdSlot::set_pid(const char* value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.AdSlot.pid)
}
 void BidRequest_AdSlot::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.AdSlot.pid)
}
 ::std::string* BidRequest_AdSlot::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.AdSlot.pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_AdSlot::release_pid() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.AdSlot.pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_AdSlot::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.AdSlot.pid)
}

// optional int32 width = 3;
bool BidRequest_AdSlot::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BidRequest_AdSlot::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
void BidRequest_AdSlot::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
void BidRequest_AdSlot::clear_width() {
  width_ = 0;
  clear_has_width();
}
 ::google::protobuf::int32 BidRequest_AdSlot::width() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.width)
  return width_;
}
 void BidRequest_AdSlot::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.width)
}

// optional int32 height = 4;
bool BidRequest_AdSlot::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BidRequest_AdSlot::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
void BidRequest_AdSlot::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
void BidRequest_AdSlot::clear_height() {
  height_ = 0;
  clear_has_height();
}
 ::google::protobuf::int32 BidRequest_AdSlot::height() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.height)
  return height_;
}
 void BidRequest_AdSlot::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.height)
}

// repeated uint32 view_type = 5;
int BidRequest_AdSlot::view_type_size() const {
  return view_type_.size();
}
void BidRequest_AdSlot::clear_view_type() {
  view_type_.Clear();
}
 ::google::protobuf::uint32 BidRequest_AdSlot::view_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.view_type)
  return view_type_.Get(index);
}
 void BidRequest_AdSlot::set_view_type(int index, ::google::protobuf::uint32 value) {
  view_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.view_type)
}
 void BidRequest_AdSlot::add_view_type(::google::protobuf::uint32 value) {
  view_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.AdSlot.view_type)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BidRequest_AdSlot::view_type() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.AdSlot.view_type)
  return view_type_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BidRequest_AdSlot::mutable_view_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.AdSlot.view_type)
  return &view_type_;
}

// optional uint32 min_cpm_price = 6;
bool BidRequest_AdSlot::has_min_cpm_price() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BidRequest_AdSlot::set_has_min_cpm_price() {
  _has_bits_[0] |= 0x00000020u;
}
void BidRequest_AdSlot::clear_has_min_cpm_price() {
  _has_bits_[0] &= ~0x00000020u;
}
void BidRequest_AdSlot::clear_min_cpm_price() {
  min_cpm_price_ = 0u;
  clear_has_min_cpm_price();
}
 ::google::protobuf::uint32 BidRequest_AdSlot::min_cpm_price() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.min_cpm_price)
  return min_cpm_price_;
}
 void BidRequest_AdSlot::set_min_cpm_price(::google::protobuf::uint32 value) {
  set_has_min_cpm_price();
  min_cpm_price_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.min_cpm_price)
}

// optional .protocol.MAX.BidRequest.AdSlot.SlotVisibility slot_visibility = 7 [default = NO_DETECTION];
bool BidRequest_AdSlot::has_slot_visibility() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BidRequest_AdSlot::set_has_slot_visibility() {
  _has_bits_[0] |= 0x00000040u;
}
void BidRequest_AdSlot::clear_has_slot_visibility() {
  _has_bits_[0] &= ~0x00000040u;
}
void BidRequest_AdSlot::clear_slot_visibility() {
  slot_visibility_ = 0;
  clear_has_slot_visibility();
}
 ::protocol::MAX::BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot::slot_visibility() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.slot_visibility)
  return static_cast< ::protocol::MAX::BidRequest_AdSlot_SlotVisibility >(slot_visibility_);
}
 void BidRequest_AdSlot::set_slot_visibility(::protocol::MAX::BidRequest_AdSlot_SlotVisibility value) {
  assert(::protocol::MAX::BidRequest_AdSlot_SlotVisibility_IsValid(value));
  set_has_slot_visibility();
  slot_visibility_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.AdSlot.slot_visibility)
}

// optional .protocol.MAX.BidRequest.AdSlot.Native native = 8;
bool BidRequest_AdSlot::has_native() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void BidRequest_AdSlot::set_has_native() {
  _has_bits_[0] |= 0x00000080u;
}
void BidRequest_AdSlot::clear_has_native() {
  _has_bits_[0] &= ~0x00000080u;
}
void BidRequest_AdSlot::clear_native() {
  if (native_ != NULL) native_->::protocol::MAX::BidRequest_AdSlot_Native::Clear();
  clear_has_native();
}
const ::protocol::MAX::BidRequest_AdSlot_Native& BidRequest_AdSlot::native() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.native)
  return native_ != NULL ? *native_ : *default_instance_->native_;
}
::protocol::MAX::BidRequest_AdSlot_Native* BidRequest_AdSlot::mutable_native() {
  set_has_native();
  if (native_ == NULL) {
    native_ = new ::protocol::MAX::BidRequest_AdSlot_Native;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.AdSlot.native)
  return native_;
}
::protocol::MAX::BidRequest_AdSlot_Native* BidRequest_AdSlot::release_native() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.AdSlot.native)
  clear_has_native();
  ::protocol::MAX::BidRequest_AdSlot_Native* temp = native_;
  native_ = NULL;
  return temp;
}
void BidRequest_AdSlot::set_allocated_native(::protocol::MAX::BidRequest_AdSlot_Native* native) {
  delete native_;
  native_ = native;
  if (native) {
    set_has_native();
  } else {
    clear_has_native();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.AdSlot.native)
}

// repeated .protocol.MAX.BidRequest.AdSlot.Deal deals = 9;
int BidRequest_AdSlot::deals_size() const {
  return deals_.size();
}
void BidRequest_AdSlot::clear_deals() {
  deals_.Clear();
}
const ::protocol::MAX::BidRequest_AdSlot_Deal& BidRequest_AdSlot::deals(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.AdSlot.deals)
  return deals_.Get(index);
}
::protocol::MAX::BidRequest_AdSlot_Deal* BidRequest_AdSlot::mutable_deals(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.AdSlot.deals)
  return deals_.Mutable(index);
}
::protocol::MAX::BidRequest_AdSlot_Deal* BidRequest_AdSlot::add_deals() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.AdSlot.deals)
  return deals_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot_Deal >*
BidRequest_AdSlot::mutable_deals() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.AdSlot.deals)
  return &deals_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot_Deal >&
BidRequest_AdSlot::deals() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.AdSlot.deals)
  return deals_;
}

// -------------------------------------------------------------------

// BidRequest_Mobile_Device

// optional string platform = 1;
bool BidRequest_Mobile_Device::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BidRequest_Mobile_Device::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
void BidRequest_Mobile_Device::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
void BidRequest_Mobile_Device::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform();
}
 const ::std::string& BidRequest_Mobile_Device::platform() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.platform)
  return platform_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_platform(const ::std::string& value) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.platform)
}
 void BidRequest_Mobile_Device::set_platform(const char* value) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.platform)
}
 void BidRequest_Mobile_Device::set_platform(const char* value, size_t size) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.platform)
}
 ::std::string* BidRequest_Mobile_Device::mutable_platform() {
  set_has_platform();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_platform() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.platform)
  clear_has_platform();
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    set_has_platform();
  } else {
    clear_has_platform();
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.platform)
}

// optional string model = 3;
bool BidRequest_Mobile_Device::has_model() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BidRequest_Mobile_Device::set_has_model() {
  _has_bits_[0] |= 0x00000002u;
}
void BidRequest_Mobile_Device::clear_has_model() {
  _has_bits_[0] &= ~0x00000002u;
}
void BidRequest_Mobile_Device::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model();
}
 const ::std::string& BidRequest_Mobile_Device::model() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_model(const ::std::string& value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.model)
}
 void BidRequest_Mobile_Device::set_model(const char* value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.model)
}
 void BidRequest_Mobile_Device::set_model(const char* value, size_t size) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.model)
}
 ::std::string* BidRequest_Mobile_Device::mutable_model() {
  set_has_model();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_model() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.model)
  clear_has_model();
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    set_has_model();
  } else {
    clear_has_model();
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.model)
}

// optional string os = 4;
bool BidRequest_Mobile_Device::has_os() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BidRequest_Mobile_Device::set_has_os() {
  _has_bits_[0] |= 0x00000004u;
}
void BidRequest_Mobile_Device::clear_has_os() {
  _has_bits_[0] &= ~0x00000004u;
}
void BidRequest_Mobile_Device::clear_os() {
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os();
}
 const ::std::string& BidRequest_Mobile_Device::os() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.os)
  return os_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_os(const ::std::string& value) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.os)
}
 void BidRequest_Mobile_Device::set_os(const char* value) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.os)
}
 void BidRequest_Mobile_Device::set_os(const char* value, size_t size) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.os)
}
 ::std::string* BidRequest_Mobile_Device::mutable_os() {
  set_has_os();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.os)
  return os_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_os() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.os)
  clear_has_os();
  return os_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_os(::std::string* os) {
  if (os != NULL) {
    set_has_os();
  } else {
    clear_has_os();
  }
  os_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.os)
}

// optional string os_version = 5;
bool BidRequest_Mobile_Device::has_os_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BidRequest_Mobile_Device::set_has_os_version() {
  _has_bits_[0] |= 0x00000008u;
}
void BidRequest_Mobile_Device::clear_has_os_version() {
  _has_bits_[0] &= ~0x00000008u;
}
void BidRequest_Mobile_Device::clear_os_version() {
  os_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os_version();
}
 const ::std::string& BidRequest_Mobile_Device::os_version() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.os_version)
  return os_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_os_version(const ::std::string& value) {
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.os_version)
}
 void BidRequest_Mobile_Device::set_os_version(const char* value) {
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.os_version)
}
 void BidRequest_Mobile_Device::set_os_version(const char* value, size_t size) {
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.os_version)
}
 ::std::string* BidRequest_Mobile_Device::mutable_os_version() {
  set_has_os_version();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.os_version)
  return os_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_os_version() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.os_version)
  clear_has_os_version();
  return os_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_os_version(::std::string* os_version) {
  if (os_version != NULL) {
    set_has_os_version();
  } else {
    clear_has_os_version();
  }
  os_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_version);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.os_version)
}

// optional uint32 network = 6;
bool BidRequest_Mobile_Device::has_network() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BidRequest_Mobile_Device::set_has_network() {
  _has_bits_[0] |= 0x00000010u;
}
void BidRequest_Mobile_Device::clear_has_network() {
  _has_bits_[0] &= ~0x00000010u;
}
void BidRequest_Mobile_Device::clear_network() {
  network_ = 0u;
  clear_has_network();
}
 ::google::protobuf::uint32 BidRequest_Mobile_Device::network() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.network)
  return network_;
}
 void BidRequest_Mobile_Device::set_network(::google::protobuf::uint32 value) {
  set_has_network();
  network_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.network)
}

// optional int32 carrier_id = 7;
bool BidRequest_Mobile_Device::has_carrier_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BidRequest_Mobile_Device::set_has_carrier_id() {
  _has_bits_[0] |= 0x00000020u;
}
void BidRequest_Mobile_Device::clear_has_carrier_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void BidRequest_Mobile_Device::clear_carrier_id() {
  carrier_id_ = 0;
  clear_has_carrier_id();
}
 ::google::protobuf::int32 BidRequest_Mobile_Device::carrier_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.carrier_id)
  return carrier_id_;
}
 void BidRequest_Mobile_Device::set_carrier_id(::google::protobuf::int32 value) {
  set_has_carrier_id();
  carrier_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.carrier_id)
}

// optional string longitude = 8;
bool BidRequest_Mobile_Device::has_longitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BidRequest_Mobile_Device::set_has_longitude() {
  _has_bits_[0] |= 0x00000040u;
}
void BidRequest_Mobile_Device::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000040u;
}
void BidRequest_Mobile_Device::clear_longitude() {
  longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_longitude();
}
 const ::std::string& BidRequest_Mobile_Device::longitude() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.longitude)
  return longitude_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_longitude(const ::std::string& value) {
  set_has_longitude();
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.longitude)
}
 void BidRequest_Mobile_Device::set_longitude(const char* value) {
  set_has_longitude();
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.longitude)
}
 void BidRequest_Mobile_Device::set_longitude(const char* value, size_t size) {
  set_has_longitude();
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.longitude)
}
 ::std::string* BidRequest_Mobile_Device::mutable_longitude() {
  set_has_longitude();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.longitude)
  return longitude_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_longitude() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.longitude)
  clear_has_longitude();
  return longitude_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_longitude(::std::string* longitude) {
  if (longitude != NULL) {
    set_has_longitude();
  } else {
    clear_has_longitude();
  }
  longitude_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), longitude);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.longitude)
}

// optional string latitude = 9;
bool BidRequest_Mobile_Device::has_latitude() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void BidRequest_Mobile_Device::set_has_latitude() {
  _has_bits_[0] |= 0x00000080u;
}
void BidRequest_Mobile_Device::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000080u;
}
void BidRequest_Mobile_Device::clear_latitude() {
  latitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_latitude();
}
 const ::std::string& BidRequest_Mobile_Device::latitude() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.latitude)
  return latitude_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_latitude(const ::std::string& value) {
  set_has_latitude();
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.latitude)
}
 void BidRequest_Mobile_Device::set_latitude(const char* value) {
  set_has_latitude();
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.latitude)
}
 void BidRequest_Mobile_Device::set_latitude(const char* value, size_t size) {
  set_has_latitude();
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.latitude)
}
 ::std::string* BidRequest_Mobile_Device::mutable_latitude() {
  set_has_latitude();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.latitude)
  return latitude_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_latitude() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.latitude)
  clear_has_latitude();
  return latitude_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_latitude(::std::string* latitude) {
  if (latitude != NULL) {
    set_has_latitude();
  } else {
    clear_has_latitude();
  }
  latitude_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), latitude);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.latitude)
}

// optional int32 screen_width = 10;
bool BidRequest_Mobile_Device::has_screen_width() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void BidRequest_Mobile_Device::set_has_screen_width() {
  _has_bits_[0] |= 0x00000100u;
}
void BidRequest_Mobile_Device::clear_has_screen_width() {
  _has_bits_[0] &= ~0x00000100u;
}
void BidRequest_Mobile_Device::clear_screen_width() {
  screen_width_ = 0;
  clear_has_screen_width();
}
 ::google::protobuf::int32 BidRequest_Mobile_Device::screen_width() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.screen_width)
  return screen_width_;
}
 void BidRequest_Mobile_Device::set_screen_width(::google::protobuf::int32 value) {
  set_has_screen_width();
  screen_width_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.screen_width)
}

// optional int32 screen_height = 11;
bool BidRequest_Mobile_Device::has_screen_height() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void BidRequest_Mobile_Device::set_has_screen_height() {
  _has_bits_[0] |= 0x00000200u;
}
void BidRequest_Mobile_Device::clear_has_screen_height() {
  _has_bits_[0] &= ~0x00000200u;
}
void BidRequest_Mobile_Device::clear_screen_height() {
  screen_height_ = 0;
  clear_has_screen_height();
}
 ::google::protobuf::int32 BidRequest_Mobile_Device::screen_height() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.screen_height)
  return screen_height_;
}
 void BidRequest_Mobile_Device::set_screen_height(::google::protobuf::int32 value) {
  set_has_screen_height();
  screen_height_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.screen_height)
}

// optional .protocol.MAX.BidRequest.Mobile.Device.ScreenOrientation screen_orientation = 12 [default = SCREEN_ORIENTATION_UNKNOWN];
bool BidRequest_Mobile_Device::has_screen_orientation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void BidRequest_Mobile_Device::set_has_screen_orientation() {
  _has_bits_[0] |= 0x00000400u;
}
void BidRequest_Mobile_Device::clear_has_screen_orientation() {
  _has_bits_[0] &= ~0x00000400u;
}
void BidRequest_Mobile_Device::clear_screen_orientation() {
  screen_orientation_ = 0;
  clear_has_screen_orientation();
}
 ::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation BidRequest_Mobile_Device::screen_orientation() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.screen_orientation)
  return static_cast< ::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation >(screen_orientation_);
}
 void BidRequest_Mobile_Device::set_screen_orientation(::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation value) {
  assert(::protocol::MAX::BidRequest_Mobile_Device_ScreenOrientation_IsValid(value));
  set_has_screen_orientation();
  screen_orientation_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.screen_orientation)
}

// optional string idfa = 13;
bool BidRequest_Mobile_Device::has_idfa() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void BidRequest_Mobile_Device::set_has_idfa() {
  _has_bits_[0] |= 0x00000800u;
}
void BidRequest_Mobile_Device::clear_has_idfa() {
  _has_bits_[0] &= ~0x00000800u;
}
void BidRequest_Mobile_Device::clear_idfa() {
  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_idfa();
}
 const ::std::string& BidRequest_Mobile_Device::idfa() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.idfa)
  return idfa_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_idfa(const ::std::string& value) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.idfa)
}
 void BidRequest_Mobile_Device::set_idfa(const char* value) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.idfa)
}
 void BidRequest_Mobile_Device::set_idfa(const char* value, size_t size) {
  set_has_idfa();
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.idfa)
}
 ::std::string* BidRequest_Mobile_Device::mutable_idfa() {
  set_has_idfa();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.idfa)
  return idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_idfa() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.idfa)
  clear_has_idfa();
  return idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_idfa(::std::string* idfa) {
  if (idfa != NULL) {
    set_has_idfa();
  } else {
    clear_has_idfa();
  }
  idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idfa);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.idfa)
}

// optional string hashed_idfa = 14;
bool BidRequest_Mobile_Device::has_hashed_idfa() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void BidRequest_Mobile_Device::set_has_hashed_idfa() {
  _has_bits_[0] |= 0x00001000u;
}
void BidRequest_Mobile_Device::clear_has_hashed_idfa() {
  _has_bits_[0] &= ~0x00001000u;
}
void BidRequest_Mobile_Device::clear_hashed_idfa() {
  hashed_idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hashed_idfa();
}
 const ::std::string& BidRequest_Mobile_Device::hashed_idfa() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
  return hashed_idfa_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_hashed_idfa(const ::std::string& value) {
  set_has_hashed_idfa();
  hashed_idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
}
 void BidRequest_Mobile_Device::set_hashed_idfa(const char* value) {
  set_has_hashed_idfa();
  hashed_idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
}
 void BidRequest_Mobile_Device::set_hashed_idfa(const char* value, size_t size) {
  set_has_hashed_idfa();
  hashed_idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
}
 ::std::string* BidRequest_Mobile_Device::mutable_hashed_idfa() {
  set_has_hashed_idfa();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
  return hashed_idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_hashed_idfa() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
  clear_has_hashed_idfa();
  return hashed_idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_hashed_idfa(::std::string* hashed_idfa) {
  if (hashed_idfa != NULL) {
    set_has_hashed_idfa();
  } else {
    clear_has_hashed_idfa();
  }
  hashed_idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashed_idfa);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.hashed_idfa)
}

// optional string imei = 16;
bool BidRequest_Mobile_Device::has_imei() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void BidRequest_Mobile_Device::set_has_imei() {
  _has_bits_[0] |= 0x00002000u;
}
void BidRequest_Mobile_Device::clear_has_imei() {
  _has_bits_[0] &= ~0x00002000u;
}
void BidRequest_Mobile_Device::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
 const ::std::string& BidRequest_Mobile_Device::imei() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.imei)
  return imei_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.imei)
}
 void BidRequest_Mobile_Device::set_imei(const char* value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.imei)
}
 void BidRequest_Mobile_Device::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.imei)
}
 ::std::string* BidRequest_Mobile_Device::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_imei() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.imei)
}

// optional string hashed_imei = 15;
bool BidRequest_Mobile_Device::has_hashed_imei() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void BidRequest_Mobile_Device::set_has_hashed_imei() {
  _has_bits_[0] |= 0x00004000u;
}
void BidRequest_Mobile_Device::clear_has_hashed_imei() {
  _has_bits_[0] &= ~0x00004000u;
}
void BidRequest_Mobile_Device::clear_hashed_imei() {
  hashed_imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hashed_imei();
}
 const ::std::string& BidRequest_Mobile_Device::hashed_imei() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
  return hashed_imei_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_hashed_imei(const ::std::string& value) {
  set_has_hashed_imei();
  hashed_imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
}
 void BidRequest_Mobile_Device::set_hashed_imei(const char* value) {
  set_has_hashed_imei();
  hashed_imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
}
 void BidRequest_Mobile_Device::set_hashed_imei(const char* value, size_t size) {
  set_has_hashed_imei();
  hashed_imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
}
 ::std::string* BidRequest_Mobile_Device::mutable_hashed_imei() {
  set_has_hashed_imei();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
  return hashed_imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_hashed_imei() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
  clear_has_hashed_imei();
  return hashed_imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_hashed_imei(::std::string* hashed_imei) {
  if (hashed_imei != NULL) {
    set_has_hashed_imei();
  } else {
    clear_has_hashed_imei();
  }
  hashed_imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashed_imei);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.hashed_imei)
}

// optional string android_id = 17;
bool BidRequest_Mobile_Device::has_android_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void BidRequest_Mobile_Device::set_has_android_id() {
  _has_bits_[0] |= 0x00008000u;
}
void BidRequest_Mobile_Device::clear_has_android_id() {
  _has_bits_[0] &= ~0x00008000u;
}
void BidRequest_Mobile_Device::clear_android_id() {
  android_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_android_id();
}
 const ::std::string& BidRequest_Mobile_Device::android_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.android_id)
  return android_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_android_id(const ::std::string& value) {
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.android_id)
}
 void BidRequest_Mobile_Device::set_android_id(const char* value) {
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.android_id)
}
 void BidRequest_Mobile_Device::set_android_id(const char* value, size_t size) {
  set_has_android_id();
  android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.android_id)
}
 ::std::string* BidRequest_Mobile_Device::mutable_android_id() {
  set_has_android_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.android_id)
  return android_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_android_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.android_id)
  clear_has_android_id();
  return android_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_android_id(::std::string* android_id) {
  if (android_id != NULL) {
    set_has_android_id();
  } else {
    clear_has_android_id();
  }
  android_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), android_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.android_id)
}

// optional string hashed_android_id = 18;
bool BidRequest_Mobile_Device::has_hashed_android_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void BidRequest_Mobile_Device::set_has_hashed_android_id() {
  _has_bits_[0] |= 0x00010000u;
}
void BidRequest_Mobile_Device::clear_has_hashed_android_id() {
  _has_bits_[0] &= ~0x00010000u;
}
void BidRequest_Mobile_Device::clear_hashed_android_id() {
  hashed_android_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hashed_android_id();
}
 const ::std::string& BidRequest_Mobile_Device::hashed_android_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
  return hashed_android_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_hashed_android_id(const ::std::string& value) {
  set_has_hashed_android_id();
  hashed_android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
}
 void BidRequest_Mobile_Device::set_hashed_android_id(const char* value) {
  set_has_hashed_android_id();
  hashed_android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
}
 void BidRequest_Mobile_Device::set_hashed_android_id(const char* value, size_t size) {
  set_has_hashed_android_id();
  hashed_android_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
}
 ::std::string* BidRequest_Mobile_Device::mutable_hashed_android_id() {
  set_has_hashed_android_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
  return hashed_android_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_hashed_android_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
  clear_has_hashed_android_id();
  return hashed_android_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_hashed_android_id(::std::string* hashed_android_id) {
  if (hashed_android_id != NULL) {
    set_has_hashed_android_id();
  } else {
    clear_has_hashed_android_id();
  }
  hashed_android_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashed_android_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.hashed_android_id)
}

// optional string mac = 19;
bool BidRequest_Mobile_Device::has_mac() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void BidRequest_Mobile_Device::set_has_mac() {
  _has_bits_[0] |= 0x00020000u;
}
void BidRequest_Mobile_Device::clear_has_mac() {
  _has_bits_[0] &= ~0x00020000u;
}
void BidRequest_Mobile_Device::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mac();
}
 const ::std::string& BidRequest_Mobile_Device::mac() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.mac)
  return mac_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_mac(const ::std::string& value) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.mac)
}
 void BidRequest_Mobile_Device::set_mac(const char* value) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.mac)
}
 void BidRequest_Mobile_Device::set_mac(const char* value, size_t size) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.mac)
}
 ::std::string* BidRequest_Mobile_Device::mutable_mac() {
  set_has_mac();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_mac() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.mac)
  clear_has_mac();
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    set_has_mac();
  } else {
    clear_has_mac();
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.mac)
}

// optional string hashed_mac = 20;
bool BidRequest_Mobile_Device::has_hashed_mac() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void BidRequest_Mobile_Device::set_has_hashed_mac() {
  _has_bits_[0] |= 0x00040000u;
}
void BidRequest_Mobile_Device::clear_has_hashed_mac() {
  _has_bits_[0] &= ~0x00040000u;
}
void BidRequest_Mobile_Device::clear_hashed_mac() {
  hashed_mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hashed_mac();
}
 const ::std::string& BidRequest_Mobile_Device::hashed_mac() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
  return hashed_mac_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_hashed_mac(const ::std::string& value) {
  set_has_hashed_mac();
  hashed_mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
}
 void BidRequest_Mobile_Device::set_hashed_mac(const char* value) {
  set_has_hashed_mac();
  hashed_mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
}
 void BidRequest_Mobile_Device::set_hashed_mac(const char* value, size_t size) {
  set_has_hashed_mac();
  hashed_mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
}
 ::std::string* BidRequest_Mobile_Device::mutable_hashed_mac() {
  set_has_hashed_mac();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
  return hashed_mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_hashed_mac() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
  clear_has_hashed_mac();
  return hashed_mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_hashed_mac(::std::string* hashed_mac) {
  if (hashed_mac != NULL) {
    set_has_hashed_mac();
  } else {
    clear_has_hashed_mac();
  }
  hashed_mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashed_mac);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.hashed_mac)
}

// optional string m2id = 21;
bool BidRequest_Mobile_Device::has_m2id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void BidRequest_Mobile_Device::set_has_m2id() {
  _has_bits_[0] |= 0x00080000u;
}
void BidRequest_Mobile_Device::clear_has_m2id() {
  _has_bits_[0] &= ~0x00080000u;
}
void BidRequest_Mobile_Device::clear_m2id() {
  m2id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_m2id();
}
 const ::std::string& BidRequest_Mobile_Device::m2id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.Device.m2id)
  return m2id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_m2id(const ::std::string& value) {
  set_has_m2id();
  m2id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.Device.m2id)
}
 void BidRequest_Mobile_Device::set_m2id(const char* value) {
  set_has_m2id();
  m2id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.Device.m2id)
}
 void BidRequest_Mobile_Device::set_m2id(const char* value, size_t size) {
  set_has_m2id();
  m2id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.Device.m2id)
}
 ::std::string* BidRequest_Mobile_Device::mutable_m2id() {
  set_has_m2id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.Device.m2id)
  return m2id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile_Device::release_m2id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.Device.m2id)
  clear_has_m2id();
  return m2id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile_Device::set_allocated_m2id(::std::string* m2id) {
  if (m2id != NULL) {
    set_has_m2id();
  } else {
    clear_has_m2id();
  }
  m2id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m2id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.Device.m2id)
}

// -------------------------------------------------------------------

// BidRequest_Mobile

// optional bool is_app = 1;
bool BidRequest_Mobile::has_is_app() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BidRequest_Mobile::set_has_is_app() {
  _has_bits_[0] |= 0x00000001u;
}
void BidRequest_Mobile::clear_has_is_app() {
  _has_bits_[0] &= ~0x00000001u;
}
void BidRequest_Mobile::clear_is_app() {
  is_app_ = false;
  clear_has_is_app();
}
 bool BidRequest_Mobile::is_app() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.is_app)
  return is_app_;
}
 void BidRequest_Mobile::set_is_app(bool value) {
  set_has_is_app();
  is_app_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.is_app)
}

// optional bool is_fullscreen = 2;
bool BidRequest_Mobile::has_is_fullscreen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BidRequest_Mobile::set_has_is_fullscreen() {
  _has_bits_[0] |= 0x00000002u;
}
void BidRequest_Mobile::clear_has_is_fullscreen() {
  _has_bits_[0] &= ~0x00000002u;
}
void BidRequest_Mobile::clear_is_fullscreen() {
  is_fullscreen_ = false;
  clear_has_is_fullscreen();
}
 bool BidRequest_Mobile::is_fullscreen() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.is_fullscreen)
  return is_fullscreen_;
}
 void BidRequest_Mobile::set_is_fullscreen(bool value) {
  set_has_is_fullscreen();
  is_fullscreen_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.is_fullscreen)
}

// optional string app_id = 3;
bool BidRequest_Mobile::has_app_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BidRequest_Mobile::set_has_app_id() {
  _has_bits_[0] |= 0x00000004u;
}
void BidRequest_Mobile::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void BidRequest_Mobile::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_id();
}
 const ::std::string& BidRequest_Mobile::app_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.app_id)
  return app_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile::set_app_id(const ::std::string& value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.app_id)
}
 void BidRequest_Mobile::set_app_id(const char* value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.app_id)
}
 void BidRequest_Mobile::set_app_id(const char* value, size_t size) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.app_id)
}
 ::std::string* BidRequest_Mobile::mutable_app_id() {
  set_has_app_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile::release_app_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.app_id)
  clear_has_app_id();
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    set_has_app_id();
  } else {
    clear_has_app_id();
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.app_id)
}

// optional string package_name = 6;
bool BidRequest_Mobile::has_package_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BidRequest_Mobile::set_has_package_name() {
  _has_bits_[0] |= 0x00000008u;
}
void BidRequest_Mobile::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void BidRequest_Mobile::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
 const ::std::string& BidRequest_Mobile::package_name() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.package_name)
  return package_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.package_name)
}
 void BidRequest_Mobile::set_package_name(const char* value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.Mobile.package_name)
}
 void BidRequest_Mobile::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.Mobile.package_name)
}
 ::std::string* BidRequest_Mobile::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest_Mobile::release_package_name() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest_Mobile::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.package_name)
}

// optional .protocol.MAX.BidRequest.Mobile.Device device = 4;
bool BidRequest_Mobile::has_device() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BidRequest_Mobile::set_has_device() {
  _has_bits_[0] |= 0x00000010u;
}
void BidRequest_Mobile::clear_has_device() {
  _has_bits_[0] &= ~0x00000010u;
}
void BidRequest_Mobile::clear_device() {
  if (device_ != NULL) device_->::protocol::MAX::BidRequest_Mobile_Device::Clear();
  clear_has_device();
}
const ::protocol::MAX::BidRequest_Mobile_Device& BidRequest_Mobile::device() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.device)
  return device_ != NULL ? *device_ : *default_instance_->device_;
}
::protocol::MAX::BidRequest_Mobile_Device* BidRequest_Mobile::mutable_device() {
  set_has_device();
  if (device_ == NULL) {
    device_ = new ::protocol::MAX::BidRequest_Mobile_Device;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.Mobile.device)
  return device_;
}
::protocol::MAX::BidRequest_Mobile_Device* BidRequest_Mobile::release_device() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.Mobile.device)
  clear_has_device();
  ::protocol::MAX::BidRequest_Mobile_Device* temp = device_;
  device_ = NULL;
  return temp;
}
void BidRequest_Mobile::set_allocated_device(::protocol::MAX::BidRequest_Mobile_Device* device) {
  delete device_;
  device_ = device;
  if (device) {
    set_has_device();
  } else {
    clear_has_device();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.Mobile.device)
}

// repeated int32 app_category = 5;
int BidRequest_Mobile::app_category_size() const {
  return app_category_.size();
}
void BidRequest_Mobile::clear_app_category() {
  app_category_.Clear();
}
 ::google::protobuf::int32 BidRequest_Mobile::app_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.Mobile.app_category)
  return app_category_.Get(index);
}
 void BidRequest_Mobile::set_app_category(int index, ::google::protobuf::int32 value) {
  app_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.Mobile.app_category)
}
 void BidRequest_Mobile::add_app_category(::google::protobuf::int32 value) {
  app_category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.Mobile.app_category)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_Mobile::app_category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.Mobile.app_category)
  return app_category_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_Mobile::mutable_app_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.Mobile.app_category)
  return &app_category_;
}

// -------------------------------------------------------------------

// BidRequest

// required string bid = 1;
bool BidRequest::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BidRequest::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
void BidRequest::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BidRequest::clear_bid() {
  bid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bid();
}
 const ::std::string& BidRequest::bid() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.bid)
  return bid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_bid(const ::std::string& value) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.bid)
}
 void BidRequest::set_bid(const char* value) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.bid)
}
 void BidRequest::set_bid(const char* value, size_t size) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.bid)
}
 ::std::string* BidRequest::mutable_bid() {
  set_has_bid();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.bid)
  return bid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest::release_bid() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.bid)
  clear_has_bid();
  return bid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_allocated_bid(::std::string* bid) {
  if (bid != NULL) {
    set_has_bid();
  } else {
    clear_has_bid();
  }
  bid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bid);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.bid)
}

// optional uint32 is_test = 9 [default = 0];
bool BidRequest::has_is_test() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BidRequest::set_has_is_test() {
  _has_bits_[0] |= 0x00000002u;
}
void BidRequest::clear_has_is_test() {
  _has_bits_[0] &= ~0x00000002u;
}
void BidRequest::clear_is_test() {
  is_test_ = 0u;
  clear_has_is_test();
}
 ::google::protobuf::uint32 BidRequest::is_test() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.is_test)
  return is_test_;
}
 void BidRequest::set_is_test(::google::protobuf::uint32 value) {
  set_has_is_test();
  is_test_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.is_test)
}

// optional string mediav_user_id = 2 [deprecated = true];
bool BidRequest::has_mediav_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BidRequest::set_has_mediav_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
void BidRequest::clear_has_mediav_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void BidRequest::clear_mediav_user_id() {
  mediav_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mediav_user_id();
}
 const ::std::string& BidRequest::mediav_user_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.mediav_user_id)
  return mediav_user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_mediav_user_id(const ::std::string& value) {
  set_has_mediav_user_id();
  mediav_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.mediav_user_id)
}
 void BidRequest::set_mediav_user_id(const char* value) {
  set_has_mediav_user_id();
  mediav_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.mediav_user_id)
}
 void BidRequest::set_mediav_user_id(const char* value, size_t size) {
  set_has_mediav_user_id();
  mediav_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.mediav_user_id)
}
 ::std::string* BidRequest::mutable_mediav_user_id() {
  set_has_mediav_user_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.mediav_user_id)
  return mediav_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest::release_mediav_user_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.mediav_user_id)
  clear_has_mediav_user_id();
  return mediav_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_allocated_mediav_user_id(::std::string* mediav_user_id) {
  if (mediav_user_id != NULL) {
    set_has_mediav_user_id();
  } else {
    clear_has_mediav_user_id();
  }
  mediav_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mediav_user_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.mediav_user_id)
}

// optional string mv_user_id = 17;
bool BidRequest::has_mv_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BidRequest::set_has_mv_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
void BidRequest::clear_has_mv_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void BidRequest::clear_mv_user_id() {
  mv_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mv_user_id();
}
 const ::std::string& BidRequest::mv_user_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.mv_user_id)
  return mv_user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_mv_user_id(const ::std::string& value) {
  set_has_mv_user_id();
  mv_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.mv_user_id)
}
 void BidRequest::set_mv_user_id(const char* value) {
  set_has_mv_user_id();
  mv_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.mv_user_id)
}
 void BidRequest::set_mv_user_id(const char* value, size_t size) {
  set_has_mv_user_id();
  mv_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.mv_user_id)
}
 ::std::string* BidRequest::mutable_mv_user_id() {
  set_has_mv_user_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.mv_user_id)
  return mv_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest::release_mv_user_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.mv_user_id)
  clear_has_mv_user_id();
  return mv_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_allocated_mv_user_id(::std::string* mv_user_id) {
  if (mv_user_id != NULL) {
    set_has_mv_user_id();
  } else {
    clear_has_mv_user_id();
  }
  mv_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mv_user_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.mv_user_id)
}

// optional string mid = 20;
bool BidRequest::has_mid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BidRequest::set_has_mid() {
  _has_bits_[0] |= 0x00000010u;
}
void BidRequest::clear_has_mid() {
  _has_bits_[0] &= ~0x00000010u;
}
void BidRequest::clear_mid() {
  mid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mid();
}
 const ::std::string& BidRequest::mid() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.mid)
  return mid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_mid(const ::std::string& value) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.mid)
}
 void BidRequest::set_mid(const char* value) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.mid)
}
 void BidRequest::set_mid(const char* value, size_t size) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.mid)
}
 ::std::string* BidRequest::mutable_mid() {
  set_has_mid();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.mid)
  return mid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest::release_mid() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.mid)
  clear_has_mid();
  return mid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_allocated_mid(::std::string* mid) {
  if (mid != NULL) {
    set_has_mid();
  } else {
    clear_has_mid();
  }
  mid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mid);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.mid)
}

// optional string ip = 3;
bool BidRequest::has_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BidRequest::set_has_ip() {
  _has_bits_[0] |= 0x00000020u;
}
void BidRequest::clear_has_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
void BidRequest::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
 const ::std::string& BidRequest::ip() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.ip)
}
 void BidRequest::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.ip)
}
 void BidRequest::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.ip)
}
 ::std::string* BidRequest::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest::release_ip() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.ip)
}

// optional string user_agent = 4;
bool BidRequest::has_user_agent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BidRequest::set_has_user_agent() {
  _has_bits_[0] |= 0x00000040u;
}
void BidRequest::clear_has_user_agent() {
  _has_bits_[0] &= ~0x00000040u;
}
void BidRequest::clear_user_agent() {
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_agent();
}
 const ::std::string& BidRequest::user_agent() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.user_agent)
  return user_agent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_user_agent(const ::std::string& value) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.user_agent)
}
 void BidRequest::set_user_agent(const char* value) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.user_agent)
}
 void BidRequest::set_user_agent(const char* value, size_t size) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.user_agent)
}
 ::std::string* BidRequest::mutable_user_agent() {
  set_has_user_agent();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.user_agent)
  return user_agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest::release_user_agent() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.user_agent)
  clear_has_user_agent();
  return user_agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_allocated_user_agent(::std::string* user_agent) {
  if (user_agent != NULL) {
    set_has_user_agent();
  } else {
    clear_has_user_agent();
  }
  user_agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_agent);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.user_agent)
}

// repeated int32 user_vertical = 10;
int BidRequest::user_vertical_size() const {
  return user_vertical_.size();
}
void BidRequest::clear_user_vertical() {
  user_vertical_.Clear();
}
 ::google::protobuf::int32 BidRequest::user_vertical(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.user_vertical)
  return user_vertical_.Get(index);
}
 void BidRequest::set_user_vertical(int index, ::google::protobuf::int32 value) {
  user_vertical_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.user_vertical)
}
 void BidRequest::add_user_vertical(::google::protobuf::int32 value) {
  user_vertical_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.user_vertical)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::user_vertical() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.user_vertical)
  return user_vertical_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_user_vertical() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.user_vertical)
  return &user_vertical_;
}

// repeated .protocol.MAX.BidRequest.UserCategory user_category = 19;
int BidRequest::user_category_size() const {
  return user_category_.size();
}
void BidRequest::clear_user_category() {
  user_category_.Clear();
}
const ::protocol::MAX::BidRequest_UserCategory& BidRequest::user_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.user_category)
  return user_category_.Get(index);
}
::protocol::MAX::BidRequest_UserCategory* BidRequest::mutable_user_category(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.user_category)
  return user_category_.Mutable(index);
}
::protocol::MAX::BidRequest_UserCategory* BidRequest::add_user_category() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.user_category)
  return user_category_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_UserCategory >*
BidRequest::mutable_user_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.user_category)
  return &user_category_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_UserCategory >&
BidRequest::user_category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.user_category)
  return user_category_;
}

// optional string url = 5;
bool BidRequest::has_url() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void BidRequest::set_has_url() {
  _has_bits_[0] |= 0x00000200u;
}
void BidRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000200u;
}
void BidRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
 const ::std::string& BidRequest::url() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.url)
}
 void BidRequest::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.url)
}
 void BidRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.url)
}
 ::std::string* BidRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest::release_url() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.url)
}

// optional bool is_https = 21;
bool BidRequest::has_is_https() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void BidRequest::set_has_is_https() {
  _has_bits_[0] |= 0x00000400u;
}
void BidRequest::clear_has_is_https() {
  _has_bits_[0] &= ~0x00000400u;
}
void BidRequest::clear_is_https() {
  is_https_ = false;
  clear_has_is_https();
}
 bool BidRequest::is_https() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.is_https)
  return is_https_;
}
 void BidRequest::set_is_https(bool value) {
  set_has_is_https();
  is_https_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.is_https)
}

// optional uint32 adx_type = 6 [default = 0];
bool BidRequest::has_adx_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void BidRequest::set_has_adx_type() {
  _has_bits_[0] |= 0x00000800u;
}
void BidRequest::clear_has_adx_type() {
  _has_bits_[0] &= ~0x00000800u;
}
void BidRequest::clear_adx_type() {
  adx_type_ = 0u;
  clear_has_adx_type();
}
 ::google::protobuf::uint32 BidRequest::adx_type() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.adx_type)
  return adx_type_;
}
 void BidRequest::set_adx_type(::google::protobuf::uint32 value) {
  set_has_adx_type();
  adx_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.adx_type)
}

// optional string detected_language = 11;
bool BidRequest::has_detected_language() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void BidRequest::set_has_detected_language() {
  _has_bits_[0] |= 0x00001000u;
}
void BidRequest::clear_has_detected_language() {
  _has_bits_[0] &= ~0x00001000u;
}
void BidRequest::clear_detected_language() {
  detected_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detected_language();
}
 const ::std::string& BidRequest::detected_language() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.detected_language)
  return detected_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_detected_language(const ::std::string& value) {
  set_has_detected_language();
  detected_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.detected_language)
}
 void BidRequest::set_detected_language(const char* value) {
  set_has_detected_language();
  detected_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.detected_language)
}
 void BidRequest::set_detected_language(const char* value, size_t size) {
  set_has_detected_language();
  detected_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.detected_language)
}
 ::std::string* BidRequest::mutable_detected_language() {
  set_has_detected_language();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.detected_language)
  return detected_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest::release_detected_language() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.detected_language)
  clear_has_detected_language();
  return detected_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_allocated_detected_language(::std::string* detected_language) {
  if (detected_language != NULL) {
    set_has_detected_language();
  } else {
    clear_has_detected_language();
  }
  detected_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detected_language);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.detected_language)
}

// optional int32 publisher_id = 13;
bool BidRequest::has_publisher_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void BidRequest::set_has_publisher_id() {
  _has_bits_[0] |= 0x00002000u;
}
void BidRequest::clear_has_publisher_id() {
  _has_bits_[0] &= ~0x00002000u;
}
void BidRequest::clear_publisher_id() {
  publisher_id_ = 0;
  clear_has_publisher_id();
}
 ::google::protobuf::int32 BidRequest::publisher_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.publisher_id)
  return publisher_id_;
}
 void BidRequest::set_publisher_id(::google::protobuf::int32 value) {
  set_has_publisher_id();
  publisher_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.publisher_id)
}

// repeated int32 publisher_category = 14;
int BidRequest::publisher_category_size() const {
  return publisher_category_.size();
}
void BidRequest::clear_publisher_category() {
  publisher_category_.Clear();
}
 ::google::protobuf::int32 BidRequest::publisher_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.publisher_category)
  return publisher_category_.Get(index);
}
 void BidRequest::set_publisher_category(int index, ::google::protobuf::int32 value) {
  publisher_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.publisher_category)
}
 void BidRequest::add_publisher_category(::google::protobuf::int32 value) {
  publisher_category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.publisher_category)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::publisher_category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.publisher_category)
  return publisher_category_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_publisher_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.publisher_category)
  return &publisher_category_;
}

// optional int32 publisher_category_version = 15;
bool BidRequest::has_publisher_category_version() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void BidRequest::set_has_publisher_category_version() {
  _has_bits_[0] |= 0x00008000u;
}
void BidRequest::clear_has_publisher_category_version() {
  _has_bits_[0] &= ~0x00008000u;
}
void BidRequest::clear_publisher_category_version() {
  publisher_category_version_ = 0;
  clear_has_publisher_category_version();
}
 ::google::protobuf::int32 BidRequest::publisher_category_version() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.publisher_category_version)
  return publisher_category_version_;
}
 void BidRequest::set_publisher_category_version(::google::protobuf::int32 value) {
  set_has_publisher_category_version();
  publisher_category_version_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.publisher_category_version)
}

// repeated .protocol.MAX.BidRequest.ContentCategory content_category = 18;
int BidRequest::content_category_size() const {
  return content_category_.size();
}
void BidRequest::clear_content_category() {
  content_category_.Clear();
}
const ::protocol::MAX::BidRequest_ContentCategory& BidRequest::content_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.content_category)
  return content_category_.Get(index);
}
::protocol::MAX::BidRequest_ContentCategory* BidRequest::mutable_content_category(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.content_category)
  return content_category_.Mutable(index);
}
::protocol::MAX::BidRequest_ContentCategory* BidRequest::add_content_category() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.content_category)
  return content_category_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_ContentCategory >*
BidRequest::mutable_content_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.content_category)
  return &content_category_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_ContentCategory >&
BidRequest::content_category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.content_category)
  return content_category_;
}

// repeated .protocol.MAX.BidRequest.AdSlot adslot = 7;
int BidRequest::adslot_size() const {
  return adslot_.size();
}
void BidRequest::clear_adslot() {
  adslot_.Clear();
}
const ::protocol::MAX::BidRequest_AdSlot& BidRequest::adslot(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.adslot)
  return adslot_.Get(index);
}
::protocol::MAX::BidRequest_AdSlot* BidRequest::mutable_adslot(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.adslot)
  return adslot_.Mutable(index);
}
::protocol::MAX::BidRequest_AdSlot* BidRequest::add_adslot() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.adslot)
  return adslot_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot >*
BidRequest::mutable_adslot() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.adslot)
  return &adslot_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidRequest_AdSlot >&
BidRequest::adslot() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.adslot)
  return adslot_;
}

// repeated int32 excluded_attribute = 16;
int BidRequest::excluded_attribute_size() const {
  return excluded_attribute_.size();
}
void BidRequest::clear_excluded_attribute() {
  excluded_attribute_.Clear();
}
 ::google::protobuf::int32 BidRequest::excluded_attribute(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.excluded_attribute)
  return excluded_attribute_.Get(index);
}
 void BidRequest::set_excluded_attribute(int index, ::google::protobuf::int32 value) {
  excluded_attribute_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.excluded_attribute)
}
 void BidRequest::add_excluded_attribute(::google::protobuf::int32 value) {
  excluded_attribute_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.excluded_attribute)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::excluded_attribute() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.excluded_attribute)
  return excluded_attribute_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_excluded_attribute() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.excluded_attribute)
  return &excluded_attribute_;
}

// repeated int32 excluded_ad_category = 12;
int BidRequest::excluded_ad_category_size() const {
  return excluded_ad_category_.size();
}
void BidRequest::clear_excluded_ad_category() {
  excluded_ad_category_.Clear();
}
 ::google::protobuf::int32 BidRequest::excluded_ad_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.excluded_ad_category)
  return excluded_ad_category_.Get(index);
}
 void BidRequest::set_excluded_ad_category(int index, ::google::protobuf::int32 value) {
  excluded_ad_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.excluded_ad_category)
}
 void BidRequest::add_excluded_ad_category(::google::protobuf::int32 value) {
  excluded_ad_category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidRequest.excluded_ad_category)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::excluded_ad_category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidRequest.excluded_ad_category)
  return excluded_ad_category_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_excluded_ad_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidRequest.excluded_ad_category)
  return &excluded_ad_category_;
}

// optional .protocol.MAX.BidRequest.Mobile mobile = 8;
bool BidRequest::has_mobile() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void BidRequest::set_has_mobile() {
  _has_bits_[0] |= 0x00100000u;
}
void BidRequest::clear_has_mobile() {
  _has_bits_[0] &= ~0x00100000u;
}
void BidRequest::clear_mobile() {
  if (mobile_ != NULL) mobile_->::protocol::MAX::BidRequest_Mobile::Clear();
  clear_has_mobile();
}
const ::protocol::MAX::BidRequest_Mobile& BidRequest::mobile() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.mobile)
  return mobile_ != NULL ? *mobile_ : *default_instance_->mobile_;
}
::protocol::MAX::BidRequest_Mobile* BidRequest::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == NULL) {
    mobile_ = new ::protocol::MAX::BidRequest_Mobile;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.mobile)
  return mobile_;
}
::protocol::MAX::BidRequest_Mobile* BidRequest::release_mobile() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.mobile)
  clear_has_mobile();
  ::protocol::MAX::BidRequest_Mobile* temp = mobile_;
  mobile_ = NULL;
  return temp;
}
void BidRequest::set_allocated_mobile(::protocol::MAX::BidRequest_Mobile* mobile) {
  delete mobile_;
  mobile_ = mobile;
  if (mobile) {
    set_has_mobile();
  } else {
    clear_has_mobile();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.mobile)
}

// optional string extend_data = 100;
bool BidRequest::has_extend_data() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void BidRequest::set_has_extend_data() {
  _has_bits_[0] |= 0x00200000u;
}
void BidRequest::clear_has_extend_data() {
  _has_bits_[0] &= ~0x00200000u;
}
void BidRequest::clear_extend_data() {
  extend_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extend_data();
}
 const ::std::string& BidRequest::extend_data() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidRequest.extend_data)
  return extend_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_extend_data(const ::std::string& value) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidRequest.extend_data)
}
 void BidRequest::set_extend_data(const char* value) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidRequest.extend_data)
}
 void BidRequest::set_extend_data(const char* value, size_t size) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidRequest.extend_data)
}
 ::std::string* BidRequest::mutable_extend_data() {
  set_has_extend_data();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidRequest.extend_data)
  return extend_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidRequest::release_extend_data() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidRequest.extend_data)
  clear_has_extend_data();
  return extend_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidRequest::set_allocated_extend_data(::std::string* extend_data) {
  if (extend_data != NULL) {
    set_has_extend_data();
  } else {
    clear_has_extend_data();
  }
  extend_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend_data);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidRequest.extend_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidResponse_Ads::kAdslotIdFieldNumber;
const int BidResponse_Ads::kMaxCpmPriceFieldNumber;
const int BidResponse_Ads::kHtmlSnippetFieldNumber;
const int BidResponse_Ads::kNativeAdFieldNumber;
const int BidResponse_Ads::kCategoryFieldNumber;
const int BidResponse_Ads::kCreativeTypeFieldNumber;
const int BidResponse_Ads::kCreativeAttributeFieldNumber;
const int BidResponse_Ads::kDestinationUrlFieldNumber;
const int BidResponse_Ads::kAdvertiserIdFieldNumber;
const int BidResponse_Ads::kCreativeIdFieldNumber;
const int BidResponse_Ads::kWidthFieldNumber;
const int BidResponse_Ads::kHeightFieldNumber;
const int BidResponse_Ads::kExtendDataFieldNumber;
const int BidResponse_Ads::kNurlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidResponse_Ads::BidResponse_Ads()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.BidResponse.Ads)
}

void BidResponse_Ads::InitAsDefaultInstance() {
}

BidResponse_Ads::BidResponse_Ads(const BidResponse_Ads& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.BidResponse.Ads)
}

void BidResponse_Ads::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  adslot_id_ = 0u;
  max_cpm_price_ = 0u;
  html_snippet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advertiser_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creative_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  width_ = 0;
  height_ = 0;
  extend_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidResponse_Ads::~BidResponse_Ads() {
  // @@protoc_insertion_point(destructor:protocol.MAX.BidResponse.Ads)
  SharedDtor();
}

void BidResponse_Ads::SharedDtor() {
  html_snippet_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advertiser_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creative_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BidResponse_Ads::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidResponse_Ads::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidResponse_Ads_descriptor_;
}

const BidResponse_Ads& BidResponse_Ads::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

BidResponse_Ads* BidResponse_Ads::default_instance_ = NULL;

BidResponse_Ads* BidResponse_Ads::New(::google::protobuf::Arena* arena) const {
  BidResponse_Ads* n = new BidResponse_Ads;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BidResponse_Ads::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.BidResponse.Ads)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BidResponse_Ads, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BidResponse_Ads*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(adslot_id_, max_cpm_price_);
    if (has_html_snippet()) {
      html_snippet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 16128u) {
    ZR_(width_, height_);
    if (has_advertiser_id()) {
      advertiser_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_creative_id()) {
      creative_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_extend_data()) {
      extend_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_nurl()) {
      nurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  native_ad_.Clear();
  category_.Clear();
  creative_type_.Clear();
  creative_attribute_.Clear();
  destination_url_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BidResponse_Ads::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.BidResponse.Ads)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 adslot_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adslot_id_)));
          set_has_adslot_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_cpm_price;
        break;
      }

      // required uint32 max_cpm_price = 2;
      case 2: {
        if (tag == 16) {
         parse_max_cpm_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_cpm_price_)));
          set_has_max_cpm_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_html_snippet;
        break;
      }

      // optional string html_snippet = 3;
      case 3: {
        if (tag == 26) {
         parse_html_snippet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_html_snippet()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->html_snippet().data(), this->html_snippet().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidResponse.Ads.html_snippet");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_category;
        break;
      }

      // repeated int32 category = 4;
      case 4: {
        if (tag == 32) {
         parse_category:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_category())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_category())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_category;
        if (input->ExpectTag(40)) goto parse_creative_type;
        break;
      }

      // repeated int32 creative_type = 5;
      case 5: {
        if (tag == 40) {
         parse_creative_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_creative_type())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_creative_type())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_creative_type;
        if (input->ExpectTag(50)) goto parse_destination_url;
        break;
      }

      // repeated string destination_url = 6;
      case 6: {
        if (tag == 50) {
         parse_destination_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_destination_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->destination_url(this->destination_url_size() - 1).data(),
            this->destination_url(this->destination_url_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidResponse.Ads.destination_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_destination_url;
        if (input->ExpectTag(58)) goto parse_advertiser_id;
        break;
      }

      // optional string advertiser_id = 7;
      case 7: {
        if (tag == 58) {
         parse_advertiser_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_advertiser_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->advertiser_id().data(), this->advertiser_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidResponse.Ads.advertiser_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_creative_id;
        break;
      }

      // optional string creative_id = 8;
      case 8: {
        if (tag == 66) {
         parse_creative_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creative_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creative_id().data(), this->creative_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidResponse.Ads.creative_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_width;
        break;
      }

      // optional int32 width = 9;
      case 9: {
        if (tag == 72) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_height;
        break;
      }

      // optional int32 height = 10;
      case 10: {
        if (tag == 80) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_extend_data;
        break;
      }

      // optional string extend_data = 11;
      case 11: {
        if (tag == 90) {
         parse_extend_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extend_data().data(), this->extend_data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidResponse.Ads.extend_data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_nurl;
        break;
      }

      // optional string nurl = 12;
      case 12: {
        if (tag == 98) {
         parse_nurl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nurl().data(), this->nurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidResponse.Ads.nurl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_native_ad;
        break;
      }

      // repeated .protocol.MAX.NativeAd native_ad = 13;
      case 13: {
        if (tag == 106) {
         parse_native_ad:
          DO_(input->IncrementRecursionDepth());
         parse_loop_native_ad:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_native_ad()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_loop_native_ad;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(112)) goto parse_creative_attribute;
        break;
      }

      // repeated int32 creative_attribute = 14;
      case 14: {
        if (tag == 112) {
         parse_creative_attribute:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 112, input, this->mutable_creative_attribute())));
        } else if (tag == 114) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_creative_attribute())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_creative_attribute;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.BidResponse.Ads)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.BidResponse.Ads)
  return false;
#undef DO_
}

void BidResponse_Ads::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.BidResponse.Ads)
  // required uint32 adslot_id = 1;
  if (has_adslot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->adslot_id(), output);
  }

  // required uint32 max_cpm_price = 2;
  if (has_max_cpm_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->max_cpm_price(), output);
  }

  // optional string html_snippet = 3;
  if (has_html_snippet()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->html_snippet().data(), this->html_snippet().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.html_snippet");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->html_snippet(), output);
  }

  // repeated int32 category = 4;
  for (int i = 0; i < this->category_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->category(i), output);
  }

  // repeated int32 creative_type = 5;
  for (int i = 0; i < this->creative_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->creative_type(i), output);
  }

  // repeated string destination_url = 6;
  for (int i = 0; i < this->destination_url_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_url(i).data(), this->destination_url(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.destination_url");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->destination_url(i), output);
  }

  // optional string advertiser_id = 7;
  if (has_advertiser_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advertiser_id().data(), this->advertiser_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.advertiser_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->advertiser_id(), output);
  }

  // optional string creative_id = 8;
  if (has_creative_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creative_id().data(), this->creative_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.creative_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->creative_id(), output);
  }

  // optional int32 width = 9;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->width(), output);
  }

  // optional int32 height = 10;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->height(), output);
  }

  // optional string extend_data = 11;
  if (has_extend_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extend_data().data(), this->extend_data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.extend_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->extend_data(), output);
  }

  // optional string nurl = 12;
  if (has_nurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nurl().data(), this->nurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.nurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->nurl(), output);
  }

  // repeated .protocol.MAX.NativeAd native_ad = 13;
  for (unsigned int i = 0, n = this->native_ad_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->native_ad(i), output);
  }

  // repeated int32 creative_attribute = 14;
  for (int i = 0; i < this->creative_attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      14, this->creative_attribute(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.BidResponse.Ads)
}

::google::protobuf::uint8* BidResponse_Ads::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.BidResponse.Ads)
  // required uint32 adslot_id = 1;
  if (has_adslot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->adslot_id(), target);
  }

  // required uint32 max_cpm_price = 2;
  if (has_max_cpm_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->max_cpm_price(), target);
  }

  // optional string html_snippet = 3;
  if (has_html_snippet()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->html_snippet().data(), this->html_snippet().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.html_snippet");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->html_snippet(), target);
  }

  // repeated int32 category = 4;
  for (int i = 0; i < this->category_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->category(i), target);
  }

  // repeated int32 creative_type = 5;
  for (int i = 0; i < this->creative_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->creative_type(i), target);
  }

  // repeated string destination_url = 6;
  for (int i = 0; i < this->destination_url_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_url(i).data(), this->destination_url(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.destination_url");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->destination_url(i), target);
  }

  // optional string advertiser_id = 7;
  if (has_advertiser_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advertiser_id().data(), this->advertiser_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.advertiser_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->advertiser_id(), target);
  }

  // optional string creative_id = 8;
  if (has_creative_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creative_id().data(), this->creative_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.creative_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->creative_id(), target);
  }

  // optional int32 width = 9;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->width(), target);
  }

  // optional int32 height = 10;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->height(), target);
  }

  // optional string extend_data = 11;
  if (has_extend_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extend_data().data(), this->extend_data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.extend_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->extend_data(), target);
  }

  // optional string nurl = 12;
  if (has_nurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nurl().data(), this->nurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.Ads.nurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->nurl(), target);
  }

  // repeated .protocol.MAX.NativeAd native_ad = 13;
  for (unsigned int i = 0, n = this->native_ad_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->native_ad(i), false, target);
  }

  // repeated int32 creative_attribute = 14;
  for (int i = 0; i < this->creative_attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(14, this->creative_attribute(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.BidResponse.Ads)
  return target;
}

int BidResponse_Ads::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protocol.MAX.BidResponse.Ads)
  int total_size = 0;

  if (has_adslot_id()) {
    // required uint32 adslot_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->adslot_id());
  }

  if (has_max_cpm_price()) {
    // required uint32 max_cpm_price = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_cpm_price());
  }

  return total_size;
}
int BidResponse_Ads::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.BidResponse.Ads)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 adslot_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->adslot_id());

    // required uint32 max_cpm_price = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_cpm_price());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string html_snippet = 3;
  if (has_html_snippet()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->html_snippet());
  }

  if (_has_bits_[8 / 32] & 16128u) {
    // optional string advertiser_id = 7;
    if (has_advertiser_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->advertiser_id());
    }

    // optional string creative_id = 8;
    if (has_creative_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creative_id());
    }

    // optional int32 width = 9;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 height = 10;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

    // optional string extend_data = 11;
    if (has_extend_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extend_data());
    }

    // optional string nurl = 12;
    if (has_nurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nurl());
    }

  }
  // repeated .protocol.MAX.NativeAd native_ad = 13;
  total_size += 1 * this->native_ad_size();
  for (int i = 0; i < this->native_ad_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->native_ad(i));
  }

  // repeated int32 category = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->category_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->category(i));
    }
    total_size += 1 * this->category_size() + data_size;
  }

  // repeated int32 creative_type = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->creative_type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->creative_type(i));
    }
    total_size += 1 * this->creative_type_size() + data_size;
  }

  // repeated int32 creative_attribute = 14;
  {
    int data_size = 0;
    for (int i = 0; i < this->creative_attribute_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->creative_attribute(i));
    }
    total_size += 1 * this->creative_attribute_size() + data_size;
  }

  // repeated string destination_url = 6;
  total_size += 1 * this->destination_url_size();
  for (int i = 0; i < this->destination_url_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->destination_url(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidResponse_Ads::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.BidResponse.Ads)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BidResponse_Ads* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BidResponse_Ads>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.BidResponse.Ads)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.BidResponse.Ads)
    MergeFrom(*source);
  }
}

void BidResponse_Ads::MergeFrom(const BidResponse_Ads& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.BidResponse.Ads)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  native_ad_.MergeFrom(from.native_ad_);
  category_.MergeFrom(from.category_);
  creative_type_.MergeFrom(from.creative_type_);
  creative_attribute_.MergeFrom(from.creative_attribute_);
  destination_url_.MergeFrom(from.destination_url_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_adslot_id()) {
      set_adslot_id(from.adslot_id());
    }
    if (from.has_max_cpm_price()) {
      set_max_cpm_price(from.max_cpm_price());
    }
    if (from.has_html_snippet()) {
      set_has_html_snippet();
      html_snippet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.html_snippet_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_advertiser_id()) {
      set_has_advertiser_id();
      advertiser_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.advertiser_id_);
    }
    if (from.has_creative_id()) {
      set_has_creative_id();
      creative_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creative_id_);
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_extend_data()) {
      set_has_extend_data();
      extend_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_data_);
    }
    if (from.has_nurl()) {
      set_has_nurl();
      nurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nurl_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BidResponse_Ads::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.BidResponse.Ads)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidResponse_Ads::CopyFrom(const BidResponse_Ads& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.BidResponse.Ads)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidResponse_Ads::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->native_ad())) return false;
  return true;
}

void BidResponse_Ads::Swap(BidResponse_Ads* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidResponse_Ads::InternalSwap(BidResponse_Ads* other) {
  std::swap(adslot_id_, other->adslot_id_);
  std::swap(max_cpm_price_, other->max_cpm_price_);
  html_snippet_.Swap(&other->html_snippet_);
  native_ad_.UnsafeArenaSwap(&other->native_ad_);
  category_.UnsafeArenaSwap(&other->category_);
  creative_type_.UnsafeArenaSwap(&other->creative_type_);
  creative_attribute_.UnsafeArenaSwap(&other->creative_attribute_);
  destination_url_.UnsafeArenaSwap(&other->destination_url_);
  advertiser_id_.Swap(&other->advertiser_id_);
  creative_id_.Swap(&other->creative_id_);
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  extend_data_.Swap(&other->extend_data_);
  nurl_.Swap(&other->nurl_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BidResponse_Ads::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidResponse_Ads_descriptor_;
  metadata.reflection = BidResponse_Ads_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidResponse::kBidFieldNumber;
const int BidResponse::kAdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidResponse::BidResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.BidResponse)
}

void BidResponse::InitAsDefaultInstance() {
}

BidResponse::BidResponse(const BidResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.BidResponse)
}

void BidResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidResponse::~BidResponse() {
  // @@protoc_insertion_point(destructor:protocol.MAX.BidResponse)
  SharedDtor();
}

void BidResponse::SharedDtor() {
  bid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BidResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidResponse_descriptor_;
}

const BidResponse& BidResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

BidResponse* BidResponse::default_instance_ = NULL;

BidResponse* BidResponse::New(::google::protobuf::Arena* arena) const {
  BidResponse* n = new BidResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BidResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.BidResponse)
  if (has_bid()) {
    bid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ads_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BidResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.BidResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string bid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bid().data(), this->bid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.BidResponse.bid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ads;
        break;
      }

      // repeated .protocol.MAX.BidResponse.Ads ads = 3;
      case 3: {
        if (tag == 26) {
         parse_ads:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ads:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ads()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_ads;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.BidResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.BidResponse)
  return false;
#undef DO_
}

void BidResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.BidResponse)
  // required string bid = 1;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bid().data(), this->bid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.bid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bid(), output);
  }

  // repeated .protocol.MAX.BidResponse.Ads ads = 3;
  for (unsigned int i = 0, n = this->ads_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ads(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.BidResponse)
}

::google::protobuf::uint8* BidResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.BidResponse)
  // required string bid = 1;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bid().data(), this->bid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.BidResponse.bid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bid(), target);
  }

  // repeated .protocol.MAX.BidResponse.Ads ads = 3;
  for (unsigned int i = 0, n = this->ads_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->ads(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.BidResponse)
  return target;
}

int BidResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.BidResponse)
  int total_size = 0;

  // required string bid = 1;
  if (has_bid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bid());
  }
  // repeated .protocol.MAX.BidResponse.Ads ads = 3;
  total_size += 1 * this->ads_size();
  for (int i = 0; i < this->ads_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ads(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.BidResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BidResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BidResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.BidResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.BidResponse)
    MergeFrom(*source);
  }
}

void BidResponse::MergeFrom(const BidResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.BidResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ads_.MergeFrom(from.ads_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bid()) {
      set_has_bid();
      bid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BidResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.BidResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidResponse::CopyFrom(const BidResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.BidResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->ads())) return false;
  return true;
}

void BidResponse::Swap(BidResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidResponse::InternalSwap(BidResponse* other) {
  bid_.Swap(&other->bid_);
  ads_.UnsafeArenaSwap(&other->ads_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BidResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidResponse_descriptor_;
  metadata.reflection = BidResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BidResponse_Ads

// required uint32 adslot_id = 1;
bool BidResponse_Ads::has_adslot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BidResponse_Ads::set_has_adslot_id() {
  _has_bits_[0] |= 0x00000001u;
}
void BidResponse_Ads::clear_has_adslot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void BidResponse_Ads::clear_adslot_id() {
  adslot_id_ = 0u;
  clear_has_adslot_id();
}
 ::google::protobuf::uint32 BidResponse_Ads::adslot_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.adslot_id)
  return adslot_id_;
}
 void BidResponse_Ads::set_adslot_id(::google::protobuf::uint32 value) {
  set_has_adslot_id();
  adslot_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.adslot_id)
}

// required uint32 max_cpm_price = 2;
bool BidResponse_Ads::has_max_cpm_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BidResponse_Ads::set_has_max_cpm_price() {
  _has_bits_[0] |= 0x00000002u;
}
void BidResponse_Ads::clear_has_max_cpm_price() {
  _has_bits_[0] &= ~0x00000002u;
}
void BidResponse_Ads::clear_max_cpm_price() {
  max_cpm_price_ = 0u;
  clear_has_max_cpm_price();
}
 ::google::protobuf::uint32 BidResponse_Ads::max_cpm_price() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.max_cpm_price)
  return max_cpm_price_;
}
 void BidResponse_Ads::set_max_cpm_price(::google::protobuf::uint32 value) {
  set_has_max_cpm_price();
  max_cpm_price_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.max_cpm_price)
}

// optional string html_snippet = 3;
bool BidResponse_Ads::has_html_snippet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BidResponse_Ads::set_has_html_snippet() {
  _has_bits_[0] |= 0x00000004u;
}
void BidResponse_Ads::clear_has_html_snippet() {
  _has_bits_[0] &= ~0x00000004u;
}
void BidResponse_Ads::clear_html_snippet() {
  html_snippet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_html_snippet();
}
 const ::std::string& BidResponse_Ads::html_snippet() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.html_snippet)
  return html_snippet_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse_Ads::set_html_snippet(const ::std::string& value) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.html_snippet)
}
 void BidResponse_Ads::set_html_snippet(const char* value) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.html_snippet)
}
 void BidResponse_Ads::set_html_snippet(const char* value, size_t size) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.html_snippet)
}
 ::std::string* BidResponse_Ads::mutable_html_snippet() {
  set_has_html_snippet();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.html_snippet)
  return html_snippet_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidResponse_Ads::release_html_snippet() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.Ads.html_snippet)
  clear_has_html_snippet();
  return html_snippet_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse_Ads::set_allocated_html_snippet(::std::string* html_snippet) {
  if (html_snippet != NULL) {
    set_has_html_snippet();
  } else {
    clear_has_html_snippet();
  }
  html_snippet_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), html_snippet);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.Ads.html_snippet)
}

// repeated .protocol.MAX.NativeAd native_ad = 13;
int BidResponse_Ads::native_ad_size() const {
  return native_ad_.size();
}
void BidResponse_Ads::clear_native_ad() {
  native_ad_.Clear();
}
const ::protocol::MAX::NativeAd& BidResponse_Ads::native_ad(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.native_ad)
  return native_ad_.Get(index);
}
::protocol::MAX::NativeAd* BidResponse_Ads::mutable_native_ad(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.native_ad)
  return native_ad_.Mutable(index);
}
::protocol::MAX::NativeAd* BidResponse_Ads::add_native_ad() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.Ads.native_ad)
  return native_ad_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd >*
BidResponse_Ads::mutable_native_ad() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.Ads.native_ad)
  return &native_ad_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd >&
BidResponse_Ads::native_ad() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.Ads.native_ad)
  return native_ad_;
}

// repeated int32 category = 4;
int BidResponse_Ads::category_size() const {
  return category_.size();
}
void BidResponse_Ads::clear_category() {
  category_.Clear();
}
 ::google::protobuf::int32 BidResponse_Ads::category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.category)
  return category_.Get(index);
}
 void BidResponse_Ads::set_category(int index, ::google::protobuf::int32 value) {
  category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.category)
}
 void BidResponse_Ads::add_category(::google::protobuf::int32 value) {
  category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.Ads.category)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ads::category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.Ads.category)
  return category_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ads::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.Ads.category)
  return &category_;
}

// repeated int32 creative_type = 5;
int BidResponse_Ads::creative_type_size() const {
  return creative_type_.size();
}
void BidResponse_Ads::clear_creative_type() {
  creative_type_.Clear();
}
 ::google::protobuf::int32 BidResponse_Ads::creative_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.creative_type)
  return creative_type_.Get(index);
}
 void BidResponse_Ads::set_creative_type(int index, ::google::protobuf::int32 value) {
  creative_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.creative_type)
}
 void BidResponse_Ads::add_creative_type(::google::protobuf::int32 value) {
  creative_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.Ads.creative_type)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ads::creative_type() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.Ads.creative_type)
  return creative_type_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ads::mutable_creative_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.Ads.creative_type)
  return &creative_type_;
}

// repeated int32 creative_attribute = 14;
int BidResponse_Ads::creative_attribute_size() const {
  return creative_attribute_.size();
}
void BidResponse_Ads::clear_creative_attribute() {
  creative_attribute_.Clear();
}
 ::google::protobuf::int32 BidResponse_Ads::creative_attribute(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.creative_attribute)
  return creative_attribute_.Get(index);
}
 void BidResponse_Ads::set_creative_attribute(int index, ::google::protobuf::int32 value) {
  creative_attribute_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.creative_attribute)
}
 void BidResponse_Ads::add_creative_attribute(::google::protobuf::int32 value) {
  creative_attribute_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.Ads.creative_attribute)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ads::creative_attribute() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.Ads.creative_attribute)
  return creative_attribute_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ads::mutable_creative_attribute() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.Ads.creative_attribute)
  return &creative_attribute_;
}

// repeated string destination_url = 6;
int BidResponse_Ads::destination_url_size() const {
  return destination_url_.size();
}
void BidResponse_Ads::clear_destination_url() {
  destination_url_.Clear();
}
 const ::std::string& BidResponse_Ads::destination_url(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.destination_url)
  return destination_url_.Get(index);
}
 ::std::string* BidResponse_Ads::mutable_destination_url(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.destination_url)
  return destination_url_.Mutable(index);
}
 void BidResponse_Ads::set_destination_url(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.destination_url)
  destination_url_.Mutable(index)->assign(value);
}
 void BidResponse_Ads::set_destination_url(int index, const char* value) {
  destination_url_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.destination_url)
}
 void BidResponse_Ads::set_destination_url(int index, const char* value, size_t size) {
  destination_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.destination_url)
}
 ::std::string* BidResponse_Ads::add_destination_url() {
  // @@protoc_insertion_point(field_add_mutable:protocol.MAX.BidResponse.Ads.destination_url)
  return destination_url_.Add();
}
 void BidResponse_Ads::add_destination_url(const ::std::string& value) {
  destination_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.Ads.destination_url)
}
 void BidResponse_Ads::add_destination_url(const char* value) {
  destination_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.MAX.BidResponse.Ads.destination_url)
}
 void BidResponse_Ads::add_destination_url(const char* value, size_t size) {
  destination_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.MAX.BidResponse.Ads.destination_url)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidResponse_Ads::destination_url() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.Ads.destination_url)
  return destination_url_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
BidResponse_Ads::mutable_destination_url() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.Ads.destination_url)
  return &destination_url_;
}

// optional string advertiser_id = 7;
bool BidResponse_Ads::has_advertiser_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void BidResponse_Ads::set_has_advertiser_id() {
  _has_bits_[0] |= 0x00000100u;
}
void BidResponse_Ads::clear_has_advertiser_id() {
  _has_bits_[0] &= ~0x00000100u;
}
void BidResponse_Ads::clear_advertiser_id() {
  advertiser_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_advertiser_id();
}
 const ::std::string& BidResponse_Ads::advertiser_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.advertiser_id)
  return advertiser_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse_Ads::set_advertiser_id(const ::std::string& value) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.advertiser_id)
}
 void BidResponse_Ads::set_advertiser_id(const char* value) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.advertiser_id)
}
 void BidResponse_Ads::set_advertiser_id(const char* value, size_t size) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.advertiser_id)
}
 ::std::string* BidResponse_Ads::mutable_advertiser_id() {
  set_has_advertiser_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.advertiser_id)
  return advertiser_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidResponse_Ads::release_advertiser_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.Ads.advertiser_id)
  clear_has_advertiser_id();
  return advertiser_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse_Ads::set_allocated_advertiser_id(::std::string* advertiser_id) {
  if (advertiser_id != NULL) {
    set_has_advertiser_id();
  } else {
    clear_has_advertiser_id();
  }
  advertiser_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advertiser_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.Ads.advertiser_id)
}

// optional string creative_id = 8;
bool BidResponse_Ads::has_creative_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void BidResponse_Ads::set_has_creative_id() {
  _has_bits_[0] |= 0x00000200u;
}
void BidResponse_Ads::clear_has_creative_id() {
  _has_bits_[0] &= ~0x00000200u;
}
void BidResponse_Ads::clear_creative_id() {
  creative_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creative_id();
}
 const ::std::string& BidResponse_Ads::creative_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.creative_id)
  return creative_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse_Ads::set_creative_id(const ::std::string& value) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.creative_id)
}
 void BidResponse_Ads::set_creative_id(const char* value) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.creative_id)
}
 void BidResponse_Ads::set_creative_id(const char* value, size_t size) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.creative_id)
}
 ::std::string* BidResponse_Ads::mutable_creative_id() {
  set_has_creative_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.creative_id)
  return creative_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidResponse_Ads::release_creative_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.Ads.creative_id)
  clear_has_creative_id();
  return creative_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse_Ads::set_allocated_creative_id(::std::string* creative_id) {
  if (creative_id != NULL) {
    set_has_creative_id();
  } else {
    clear_has_creative_id();
  }
  creative_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creative_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.Ads.creative_id)
}

// optional int32 width = 9;
bool BidResponse_Ads::has_width() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void BidResponse_Ads::set_has_width() {
  _has_bits_[0] |= 0x00000400u;
}
void BidResponse_Ads::clear_has_width() {
  _has_bits_[0] &= ~0x00000400u;
}
void BidResponse_Ads::clear_width() {
  width_ = 0;
  clear_has_width();
}
 ::google::protobuf::int32 BidResponse_Ads::width() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.width)
  return width_;
}
 void BidResponse_Ads::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.width)
}

// optional int32 height = 10;
bool BidResponse_Ads::has_height() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void BidResponse_Ads::set_has_height() {
  _has_bits_[0] |= 0x00000800u;
}
void BidResponse_Ads::clear_has_height() {
  _has_bits_[0] &= ~0x00000800u;
}
void BidResponse_Ads::clear_height() {
  height_ = 0;
  clear_has_height();
}
 ::google::protobuf::int32 BidResponse_Ads::height() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.height)
  return height_;
}
 void BidResponse_Ads::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.height)
}

// optional string extend_data = 11;
bool BidResponse_Ads::has_extend_data() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void BidResponse_Ads::set_has_extend_data() {
  _has_bits_[0] |= 0x00001000u;
}
void BidResponse_Ads::clear_has_extend_data() {
  _has_bits_[0] &= ~0x00001000u;
}
void BidResponse_Ads::clear_extend_data() {
  extend_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extend_data();
}
 const ::std::string& BidResponse_Ads::extend_data() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.extend_data)
  return extend_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse_Ads::set_extend_data(const ::std::string& value) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.extend_data)
}
 void BidResponse_Ads::set_extend_data(const char* value) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.extend_data)
}
 void BidResponse_Ads::set_extend_data(const char* value, size_t size) {
  set_has_extend_data();
  extend_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.extend_data)
}
 ::std::string* BidResponse_Ads::mutable_extend_data() {
  set_has_extend_data();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.extend_data)
  return extend_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidResponse_Ads::release_extend_data() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.Ads.extend_data)
  clear_has_extend_data();
  return extend_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse_Ads::set_allocated_extend_data(::std::string* extend_data) {
  if (extend_data != NULL) {
    set_has_extend_data();
  } else {
    clear_has_extend_data();
  }
  extend_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend_data);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.Ads.extend_data)
}

// optional string nurl = 12;
bool BidResponse_Ads::has_nurl() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void BidResponse_Ads::set_has_nurl() {
  _has_bits_[0] |= 0x00002000u;
}
void BidResponse_Ads::clear_has_nurl() {
  _has_bits_[0] &= ~0x00002000u;
}
void BidResponse_Ads::clear_nurl() {
  nurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nurl();
}
 const ::std::string& BidResponse_Ads::nurl() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.Ads.nurl)
  return nurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse_Ads::set_nurl(const ::std::string& value) {
  set_has_nurl();
  nurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.Ads.nurl)
}
 void BidResponse_Ads::set_nurl(const char* value) {
  set_has_nurl();
  nurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.Ads.nurl)
}
 void BidResponse_Ads::set_nurl(const char* value, size_t size) {
  set_has_nurl();
  nurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.Ads.nurl)
}
 ::std::string* BidResponse_Ads::mutable_nurl() {
  set_has_nurl();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.Ads.nurl)
  return nurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidResponse_Ads::release_nurl() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.Ads.nurl)
  clear_has_nurl();
  return nurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse_Ads::set_allocated_nurl(::std::string* nurl) {
  if (nurl != NULL) {
    set_has_nurl();
  } else {
    clear_has_nurl();
  }
  nurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nurl);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.Ads.nurl)
}

// -------------------------------------------------------------------

// BidResponse

// required string bid = 1;
bool BidResponse::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BidResponse::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
void BidResponse::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BidResponse::clear_bid() {
  bid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bid();
}
 const ::std::string& BidResponse::bid() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.bid)
  return bid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse::set_bid(const ::std::string& value) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.BidResponse.bid)
}
 void BidResponse::set_bid(const char* value) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.BidResponse.bid)
}
 void BidResponse::set_bid(const char* value, size_t size) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.BidResponse.bid)
}
 ::std::string* BidResponse::mutable_bid() {
  set_has_bid();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.bid)
  return bid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BidResponse::release_bid() {
  // @@protoc_insertion_point(field_release:protocol.MAX.BidResponse.bid)
  clear_has_bid();
  return bid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BidResponse::set_allocated_bid(::std::string* bid) {
  if (bid != NULL) {
    set_has_bid();
  } else {
    clear_has_bid();
  }
  bid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bid);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.BidResponse.bid)
}

// repeated .protocol.MAX.BidResponse.Ads ads = 3;
int BidResponse::ads_size() const {
  return ads_.size();
}
void BidResponse::clear_ads() {
  ads_.Clear();
}
const ::protocol::MAX::BidResponse_Ads& BidResponse::ads(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.BidResponse.ads)
  return ads_.Get(index);
}
::protocol::MAX::BidResponse_Ads* BidResponse::mutable_ads(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.BidResponse.ads)
  return ads_.Mutable(index);
}
::protocol::MAX::BidResponse_Ads* BidResponse::add_ads() {
  // @@protoc_insertion_point(field_add:protocol.MAX.BidResponse.ads)
  return ads_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidResponse_Ads >*
BidResponse::mutable_ads() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.BidResponse.ads)
  return &ads_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::BidResponse_Ads >&
BidResponse::ads() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.BidResponse.ads)
  return ads_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NativeAd_Creative_Image::kImageUrlFieldNumber;
const int NativeAd_Creative_Image::kImageWidthFieldNumber;
const int NativeAd_Creative_Image::kImageHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NativeAd_Creative_Image::NativeAd_Creative_Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.NativeAd.Creative.Image)
}

void NativeAd_Creative_Image::InitAsDefaultInstance() {
}

NativeAd_Creative_Image::NativeAd_Creative_Image(const NativeAd_Creative_Image& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.NativeAd.Creative.Image)
}

void NativeAd_Creative_Image::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  image_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_width_ = 0;
  image_height_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NativeAd_Creative_Image::~NativeAd_Creative_Image() {
  // @@protoc_insertion_point(destructor:protocol.MAX.NativeAd.Creative.Image)
  SharedDtor();
}

void NativeAd_Creative_Image::SharedDtor() {
  image_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NativeAd_Creative_Image::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NativeAd_Creative_Image::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NativeAd_Creative_Image_descriptor_;
}

const NativeAd_Creative_Image& NativeAd_Creative_Image::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

NativeAd_Creative_Image* NativeAd_Creative_Image::default_instance_ = NULL;

NativeAd_Creative_Image* NativeAd_Creative_Image::New(::google::protobuf::Arena* arena) const {
  NativeAd_Creative_Image* n = new NativeAd_Creative_Image;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NativeAd_Creative_Image::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.NativeAd.Creative.Image)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(NativeAd_Creative_Image, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<NativeAd_Creative_Image*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(image_width_, image_height_);
    if (has_image_url()) {
      image_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NativeAd_Creative_Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.NativeAd.Creative.Image)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string image_url = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->image_url().data(), this->image_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.Creative.Image.image_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_image_width;
        break;
      }

      // optional int32 image_width = 2;
      case 2: {
        if (tag == 16) {
         parse_image_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_width_)));
          set_has_image_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_image_height;
        break;
      }

      // optional int32 image_height = 3;
      case 3: {
        if (tag == 24) {
         parse_image_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_height_)));
          set_has_image_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.NativeAd.Creative.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.NativeAd.Creative.Image)
  return false;
#undef DO_
}

void NativeAd_Creative_Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.NativeAd.Creative.Image)
  // optional string image_url = 1;
  if (has_image_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image_url().data(), this->image_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.Image.image_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image_url(), output);
  }

  // optional int32 image_width = 2;
  if (has_image_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->image_width(), output);
  }

  // optional int32 image_height = 3;
  if (has_image_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->image_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.NativeAd.Creative.Image)
}

::google::protobuf::uint8* NativeAd_Creative_Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.NativeAd.Creative.Image)
  // optional string image_url = 1;
  if (has_image_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image_url().data(), this->image_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.Image.image_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image_url(), target);
  }

  // optional int32 image_width = 2;
  if (has_image_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->image_width(), target);
  }

  // optional int32 image_height = 3;
  if (has_image_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->image_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.NativeAd.Creative.Image)
  return target;
}

int NativeAd_Creative_Image::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.NativeAd.Creative.Image)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string image_url = 1;
    if (has_image_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->image_url());
    }

    // optional int32 image_width = 2;
    if (has_image_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->image_width());
    }

    // optional int32 image_height = 3;
    if (has_image_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->image_height());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NativeAd_Creative_Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.NativeAd.Creative.Image)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NativeAd_Creative_Image* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NativeAd_Creative_Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.NativeAd.Creative.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.NativeAd.Creative.Image)
    MergeFrom(*source);
  }
}

void NativeAd_Creative_Image::MergeFrom(const NativeAd_Creative_Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.NativeAd.Creative.Image)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_image_url()) {
      set_has_image_url();
      image_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_url_);
    }
    if (from.has_image_width()) {
      set_image_width(from.image_width());
    }
    if (from.has_image_height()) {
      set_image_height(from.image_height());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NativeAd_Creative_Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.NativeAd.Creative.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NativeAd_Creative_Image::CopyFrom(const NativeAd_Creative_Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.NativeAd.Creative.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NativeAd_Creative_Image::IsInitialized() const {

  return true;
}

void NativeAd_Creative_Image::Swap(NativeAd_Creative_Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NativeAd_Creative_Image::InternalSwap(NativeAd_Creative_Image* other) {
  image_url_.Swap(&other->image_url_);
  std::swap(image_width_, other->image_width_);
  std::swap(image_height_, other->image_height_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NativeAd_Creative_Image::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NativeAd_Creative_Image_descriptor_;
  metadata.reflection = NativeAd_Creative_Image_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NativeAd_Creative_Link::kClickUrlFieldNumber;
const int NativeAd_Creative_Link::kDeepLinkFieldNumber;
const int NativeAd_Creative_Link::kLandingTypeFieldNumber;
const int NativeAd_Creative_Link::kContentClickTracksFieldNumber;
const int NativeAd_Creative_Link::kClickTracksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NativeAd_Creative_Link::NativeAd_Creative_Link()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.NativeAd.Creative.Link)
}

void NativeAd_Creative_Link::InitAsDefaultInstance() {
}

NativeAd_Creative_Link::NativeAd_Creative_Link(const NativeAd_Creative_Link& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.NativeAd.Creative.Link)
}

void NativeAd_Creative_Link::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  click_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deep_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  landing_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NativeAd_Creative_Link::~NativeAd_Creative_Link() {
  // @@protoc_insertion_point(destructor:protocol.MAX.NativeAd.Creative.Link)
  SharedDtor();
}

void NativeAd_Creative_Link::SharedDtor() {
  click_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deep_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NativeAd_Creative_Link::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NativeAd_Creative_Link::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NativeAd_Creative_Link_descriptor_;
}

const NativeAd_Creative_Link& NativeAd_Creative_Link::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

NativeAd_Creative_Link* NativeAd_Creative_Link::default_instance_ = NULL;

NativeAd_Creative_Link* NativeAd_Creative_Link::New(::google::protobuf::Arena* arena) const {
  NativeAd_Creative_Link* n = new NativeAd_Creative_Link;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NativeAd_Creative_Link::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.NativeAd.Creative.Link)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_click_url()) {
      click_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_deep_link()) {
      deep_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    landing_type_ = 0;
  }
  content_click_tracks_.Clear();
  click_tracks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NativeAd_Creative_Link::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.NativeAd.Creative.Link)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string click_url = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_click_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->click_url().data(), this->click_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.Creative.Link.click_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_landing_type;
        break;
      }

      // optional int32 landing_type = 2;
      case 2: {
        if (tag == 16) {
         parse_landing_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &landing_type_)));
          set_has_landing_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_click_tracks;
        break;
      }

      // repeated string click_tracks = 3;
      case 3: {
        if (tag == 26) {
         parse_click_tracks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_click_tracks()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->click_tracks(this->click_tracks_size() - 1).data(),
            this->click_tracks(this->click_tracks_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.Creative.Link.click_tracks");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_click_tracks;
        if (input->ExpectTag(34)) goto parse_deep_link;
        break;
      }

      // optional string deep_link = 4;
      case 4: {
        if (tag == 34) {
         parse_deep_link:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deep_link()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->deep_link().data(), this->deep_link().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.Creative.Link.deep_link");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_content_click_tracks;
        break;
      }

      // repeated string content_click_tracks = 5;
      case 5: {
        if (tag == 42) {
         parse_content_click_tracks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_content_click_tracks()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content_click_tracks(this->content_click_tracks_size() - 1).data(),
            this->content_click_tracks(this->content_click_tracks_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.Creative.Link.content_click_tracks");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_content_click_tracks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.NativeAd.Creative.Link)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.NativeAd.Creative.Link)
  return false;
#undef DO_
}

void NativeAd_Creative_Link::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.NativeAd.Creative.Link)
  // optional string click_url = 1;
  if (has_click_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->click_url().data(), this->click_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.Link.click_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->click_url(), output);
  }

  // optional int32 landing_type = 2;
  if (has_landing_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->landing_type(), output);
  }

  // repeated string click_tracks = 3;
  for (int i = 0; i < this->click_tracks_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->click_tracks(i).data(), this->click_tracks(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.Link.click_tracks");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->click_tracks(i), output);
  }

  // optional string deep_link = 4;
  if (has_deep_link()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deep_link().data(), this->deep_link().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.Link.deep_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->deep_link(), output);
  }

  // repeated string content_click_tracks = 5;
  for (int i = 0; i < this->content_click_tracks_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_click_tracks(i).data(), this->content_click_tracks(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.Link.content_click_tracks");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->content_click_tracks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.NativeAd.Creative.Link)
}

::google::protobuf::uint8* NativeAd_Creative_Link::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.NativeAd.Creative.Link)
  // optional string click_url = 1;
  if (has_click_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->click_url().data(), this->click_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.Link.click_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->click_url(), target);
  }

  // optional int32 landing_type = 2;
  if (has_landing_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->landing_type(), target);
  }

  // repeated string click_tracks = 3;
  for (int i = 0; i < this->click_tracks_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->click_tracks(i).data(), this->click_tracks(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.Link.click_tracks");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->click_tracks(i), target);
  }

  // optional string deep_link = 4;
  if (has_deep_link()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deep_link().data(), this->deep_link().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.Link.deep_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->deep_link(), target);
  }

  // repeated string content_click_tracks = 5;
  for (int i = 0; i < this->content_click_tracks_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_click_tracks(i).data(), this->content_click_tracks(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.Link.content_click_tracks");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->content_click_tracks(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.NativeAd.Creative.Link)
  return target;
}

int NativeAd_Creative_Link::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.NativeAd.Creative.Link)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string click_url = 1;
    if (has_click_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->click_url());
    }

    // optional string deep_link = 4;
    if (has_deep_link()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deep_link());
    }

    // optional int32 landing_type = 2;
    if (has_landing_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->landing_type());
    }

  }
  // repeated string content_click_tracks = 5;
  total_size += 1 * this->content_click_tracks_size();
  for (int i = 0; i < this->content_click_tracks_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->content_click_tracks(i));
  }

  // repeated string click_tracks = 3;
  total_size += 1 * this->click_tracks_size();
  for (int i = 0; i < this->click_tracks_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->click_tracks(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NativeAd_Creative_Link::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.NativeAd.Creative.Link)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NativeAd_Creative_Link* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NativeAd_Creative_Link>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.NativeAd.Creative.Link)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.NativeAd.Creative.Link)
    MergeFrom(*source);
  }
}

void NativeAd_Creative_Link::MergeFrom(const NativeAd_Creative_Link& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.NativeAd.Creative.Link)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  content_click_tracks_.MergeFrom(from.content_click_tracks_);
  click_tracks_.MergeFrom(from.click_tracks_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_click_url()) {
      set_has_click_url();
      click_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.click_url_);
    }
    if (from.has_deep_link()) {
      set_has_deep_link();
      deep_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deep_link_);
    }
    if (from.has_landing_type()) {
      set_landing_type(from.landing_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NativeAd_Creative_Link::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.NativeAd.Creative.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NativeAd_Creative_Link::CopyFrom(const NativeAd_Creative_Link& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.NativeAd.Creative.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NativeAd_Creative_Link::IsInitialized() const {

  return true;
}

void NativeAd_Creative_Link::Swap(NativeAd_Creative_Link* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NativeAd_Creative_Link::InternalSwap(NativeAd_Creative_Link* other) {
  click_url_.Swap(&other->click_url_);
  deep_link_.Swap(&other->deep_link_);
  std::swap(landing_type_, other->landing_type_);
  content_click_tracks_.UnsafeArenaSwap(&other->content_click_tracks_);
  click_tracks_.UnsafeArenaSwap(&other->click_tracks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NativeAd_Creative_Link::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NativeAd_Creative_Link_descriptor_;
  metadata.reflection = NativeAd_Creative_Link_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NativeAd_Creative::kTemplateIdFieldNumber;
const int NativeAd_Creative::kTitleFieldNumber;
const int NativeAd_Creative::kSubTitleFieldNumber;
const int NativeAd_Creative::kDescriptionFieldNumber;
const int NativeAd_Creative::kButtonNameFieldNumber;
const int NativeAd_Creative::kContentImageFieldNumber;
const int NativeAd_Creative::kMultiImagesFieldNumber;
const int NativeAd_Creative::kLinkedImageFieldNumber;
const int NativeAd_Creative::kLogoFieldNumber;
const int NativeAd_Creative::kLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NativeAd_Creative::NativeAd_Creative()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.NativeAd.Creative)
}

void NativeAd_Creative::InitAsDefaultInstance() {
  content_image_ = const_cast< ::protocol::MAX::NativeAd_Creative_Image*>(&::protocol::MAX::NativeAd_Creative_Image::default_instance());
  linked_image_ = const_cast< ::protocol::MAX::NativeAd_Creative_Image*>(&::protocol::MAX::NativeAd_Creative_Image::default_instance());
  logo_ = const_cast< ::protocol::MAX::NativeAd_Creative_Image*>(&::protocol::MAX::NativeAd_Creative_Image::default_instance());
  link_ = const_cast< ::protocol::MAX::NativeAd_Creative_Link*>(&::protocol::MAX::NativeAd_Creative_Link::default_instance());
}

NativeAd_Creative::NativeAd_Creative(const NativeAd_Creative& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.NativeAd.Creative)
}

void NativeAd_Creative::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  template_id_ = 0;
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  button_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_image_ = NULL;
  linked_image_ = NULL;
  logo_ = NULL;
  link_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NativeAd_Creative::~NativeAd_Creative() {
  // @@protoc_insertion_point(destructor:protocol.MAX.NativeAd.Creative)
  SharedDtor();
}

void NativeAd_Creative::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  button_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete content_image_;
    delete linked_image_;
    delete logo_;
    delete link_;
  }
}

void NativeAd_Creative::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NativeAd_Creative::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NativeAd_Creative_descriptor_;
}

const NativeAd_Creative& NativeAd_Creative::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

NativeAd_Creative* NativeAd_Creative::default_instance_ = NULL;

NativeAd_Creative* NativeAd_Creative::New(::google::protobuf::Arena* arena) const {
  NativeAd_Creative* n = new NativeAd_Creative;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NativeAd_Creative::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.NativeAd.Creative)
  if (_has_bits_[0 / 32] & 191u) {
    template_id_ = 0;
    if (has_title()) {
      title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sub_title()) {
      sub_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_description()) {
      description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_button_name()) {
      button_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_content_image()) {
      if (content_image_ != NULL) content_image_->::protocol::MAX::NativeAd_Creative_Image::Clear();
    }
    if (has_linked_image()) {
      if (linked_image_ != NULL) linked_image_->::protocol::MAX::NativeAd_Creative_Image::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_logo()) {
      if (logo_ != NULL) logo_->::protocol::MAX::NativeAd_Creative_Image::Clear();
    }
    if (has_link()) {
      if (link_ != NULL) link_->::protocol::MAX::NativeAd_Creative_Link::Clear();
    }
  }
  multi_images_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NativeAd_Creative::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.NativeAd.Creative)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string title = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.Creative.title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sub_title;
        break;
      }

      // optional string sub_title = 2;
      case 2: {
        if (tag == 18) {
         parse_sub_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sub_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sub_title().data(), this->sub_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.Creative.sub_title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_description;
        break;
      }

      // optional string description = 3;
      case 3: {
        if (tag == 26) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.Creative.description");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_button_name;
        break;
      }

      // optional string button_name = 4;
      case 4: {
        if (tag == 34) {
         parse_button_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_button_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->button_name().data(), this->button_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.Creative.button_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_content_image;
        break;
      }

      // optional .protocol.MAX.NativeAd.Creative.Image content_image = 5;
      case 5: {
        if (tag == 42) {
         parse_content_image:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_content_image()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_logo;
        break;
      }

      // optional .protocol.MAX.NativeAd.Creative.Image logo = 6;
      case 6: {
        if (tag == 50) {
         parse_logo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_link;
        break;
      }

      // optional .protocol.MAX.NativeAd.Creative.Link link = 7;
      case 7: {
        if (tag == 58) {
         parse_link:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_link()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_linked_image;
        break;
      }

      // optional .protocol.MAX.NativeAd.Creative.Image linked_image = 8;
      case 8: {
        if (tag == 66) {
         parse_linked_image:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_linked_image()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_template_id;
        break;
      }

      // optional int32 template_id = 9;
      case 9: {
        if (tag == 72) {
         parse_template_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_id_)));
          set_has_template_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_multi_images;
        break;
      }

      // repeated .protocol.MAX.NativeAd.Creative.Image multi_images = 12;
      case 12: {
        if (tag == 98) {
         parse_multi_images:
          DO_(input->IncrementRecursionDepth());
         parse_loop_multi_images:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_multi_images()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_loop_multi_images;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.NativeAd.Creative)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.NativeAd.Creative)
  return false;
#undef DO_
}

void NativeAd_Creative::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.NativeAd.Creative)
  // optional string title = 1;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // optional string sub_title = 2;
  if (has_sub_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sub_title().data(), this->sub_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.sub_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sub_title(), output);
  }

  // optional string description = 3;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // optional string button_name = 4;
  if (has_button_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->button_name().data(), this->button_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.button_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->button_name(), output);
  }

  // optional .protocol.MAX.NativeAd.Creative.Image content_image = 5;
  if (has_content_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->content_image_, output);
  }

  // optional .protocol.MAX.NativeAd.Creative.Image logo = 6;
  if (has_logo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->logo_, output);
  }

  // optional .protocol.MAX.NativeAd.Creative.Link link = 7;
  if (has_link()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->link_, output);
  }

  // optional .protocol.MAX.NativeAd.Creative.Image linked_image = 8;
  if (has_linked_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->linked_image_, output);
  }

  // optional int32 template_id = 9;
  if (has_template_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->template_id(), output);
  }

  // repeated .protocol.MAX.NativeAd.Creative.Image multi_images = 12;
  for (unsigned int i = 0, n = this->multi_images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->multi_images(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.NativeAd.Creative)
}

::google::protobuf::uint8* NativeAd_Creative::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.NativeAd.Creative)
  // optional string title = 1;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // optional string sub_title = 2;
  if (has_sub_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sub_title().data(), this->sub_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.sub_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sub_title(), target);
  }

  // optional string description = 3;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // optional string button_name = 4;
  if (has_button_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->button_name().data(), this->button_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.Creative.button_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->button_name(), target);
  }

  // optional .protocol.MAX.NativeAd.Creative.Image content_image = 5;
  if (has_content_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->content_image_, false, target);
  }

  // optional .protocol.MAX.NativeAd.Creative.Image logo = 6;
  if (has_logo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->logo_, false, target);
  }

  // optional .protocol.MAX.NativeAd.Creative.Link link = 7;
  if (has_link()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->link_, false, target);
  }

  // optional .protocol.MAX.NativeAd.Creative.Image linked_image = 8;
  if (has_linked_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->linked_image_, false, target);
  }

  // optional int32 template_id = 9;
  if (has_template_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->template_id(), target);
  }

  // repeated .protocol.MAX.NativeAd.Creative.Image multi_images = 12;
  for (unsigned int i = 0, n = this->multi_images_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->multi_images(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.NativeAd.Creative)
  return target;
}

int NativeAd_Creative::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.NativeAd.Creative)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 191u) {
    // optional int32 template_id = 9;
    if (has_template_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->template_id());
    }

    // optional string title = 1;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string sub_title = 2;
    if (has_sub_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sub_title());
    }

    // optional string description = 3;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string button_name = 4;
    if (has_button_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->button_name());
    }

    // optional .protocol.MAX.NativeAd.Creative.Image content_image = 5;
    if (has_content_image()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->content_image_);
    }

    // optional .protocol.MAX.NativeAd.Creative.Image linked_image = 8;
    if (has_linked_image()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->linked_image_);
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .protocol.MAX.NativeAd.Creative.Image logo = 6;
    if (has_logo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->logo_);
    }

    // optional .protocol.MAX.NativeAd.Creative.Link link = 7;
    if (has_link()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->link_);
    }

  }
  // repeated .protocol.MAX.NativeAd.Creative.Image multi_images = 12;
  total_size += 1 * this->multi_images_size();
  for (int i = 0; i < this->multi_images_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->multi_images(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NativeAd_Creative::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.NativeAd.Creative)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NativeAd_Creative* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NativeAd_Creative>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.NativeAd.Creative)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.NativeAd.Creative)
    MergeFrom(*source);
  }
}

void NativeAd_Creative::MergeFrom(const NativeAd_Creative& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.NativeAd.Creative)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  multi_images_.MergeFrom(from.multi_images_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_template_id()) {
      set_template_id(from.template_id());
    }
    if (from.has_title()) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (from.has_sub_title()) {
      set_has_sub_title();
      sub_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sub_title_);
    }
    if (from.has_description()) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (from.has_button_name()) {
      set_has_button_name();
      button_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.button_name_);
    }
    if (from.has_content_image()) {
      mutable_content_image()->::protocol::MAX::NativeAd_Creative_Image::MergeFrom(from.content_image());
    }
    if (from.has_linked_image()) {
      mutable_linked_image()->::protocol::MAX::NativeAd_Creative_Image::MergeFrom(from.linked_image());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_logo()) {
      mutable_logo()->::protocol::MAX::NativeAd_Creative_Image::MergeFrom(from.logo());
    }
    if (from.has_link()) {
      mutable_link()->::protocol::MAX::NativeAd_Creative_Link::MergeFrom(from.link());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NativeAd_Creative::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.NativeAd.Creative)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NativeAd_Creative::CopyFrom(const NativeAd_Creative& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.NativeAd.Creative)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NativeAd_Creative::IsInitialized() const {

  return true;
}

void NativeAd_Creative::Swap(NativeAd_Creative* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NativeAd_Creative::InternalSwap(NativeAd_Creative* other) {
  std::swap(template_id_, other->template_id_);
  title_.Swap(&other->title_);
  sub_title_.Swap(&other->sub_title_);
  description_.Swap(&other->description_);
  button_name_.Swap(&other->button_name_);
  std::swap(content_image_, other->content_image_);
  multi_images_.UnsafeArenaSwap(&other->multi_images_);
  std::swap(linked_image_, other->linked_image_);
  std::swap(logo_, other->logo_);
  std::swap(link_, other->link_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NativeAd_Creative::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NativeAd_Creative_descriptor_;
  metadata.reflection = NativeAd_Creative_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NativeAd_AppAttr::kAppNameFieldNumber;
const int NativeAd_AppAttr::kAppPkgFieldNumber;
const int NativeAd_AppAttr::kAppMd5FieldNumber;
const int NativeAd_AppAttr::kAppVcFieldNumber;
const int NativeAd_AppAttr::kAppSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NativeAd_AppAttr::NativeAd_AppAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.NativeAd.AppAttr)
}

void NativeAd_AppAttr::InitAsDefaultInstance() {
}

NativeAd_AppAttr::NativeAd_AppAttr(const NativeAd_AppAttr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.NativeAd.AppAttr)
}

void NativeAd_AppAttr::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_pkg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_vc_ = 0;
  app_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NativeAd_AppAttr::~NativeAd_AppAttr() {
  // @@protoc_insertion_point(destructor:protocol.MAX.NativeAd.AppAttr)
  SharedDtor();
}

void NativeAd_AppAttr::SharedDtor() {
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_pkg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NativeAd_AppAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NativeAd_AppAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NativeAd_AppAttr_descriptor_;
}

const NativeAd_AppAttr& NativeAd_AppAttr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

NativeAd_AppAttr* NativeAd_AppAttr::default_instance_ = NULL;

NativeAd_AppAttr* NativeAd_AppAttr::New(::google::protobuf::Arena* arena) const {
  NativeAd_AppAttr* n = new NativeAd_AppAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NativeAd_AppAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.NativeAd.AppAttr)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(NativeAd_AppAttr, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<NativeAd_AppAttr*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(app_vc_, app_size_);
    if (has_app_name()) {
      app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_app_pkg()) {
      app_pkg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_app_md5()) {
      app_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NativeAd_AppAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.NativeAd.AppAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app_name().data(), this->app_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.AppAttr.app_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_app_pkg;
        break;
      }

      // optional string app_pkg = 2;
      case 2: {
        if (tag == 18) {
         parse_app_pkg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_pkg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app_pkg().data(), this->app_pkg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.AppAttr.app_pkg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_app_md5;
        break;
      }

      // optional string app_md5 = 3;
      case 3: {
        if (tag == 26) {
         parse_app_md5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_md5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app_md5().data(), this->app_md5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.AppAttr.app_md5");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_app_vc;
        break;
      }

      // optional int32 app_vc = 4;
      case 4: {
        if (tag == 32) {
         parse_app_vc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &app_vc_)));
          set_has_app_vc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_app_size;
        break;
      }

      // optional int32 app_size = 5;
      case 5: {
        if (tag == 40) {
         parse_app_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &app_size_)));
          set_has_app_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.NativeAd.AppAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.NativeAd.AppAttr)
  return false;
#undef DO_
}

void NativeAd_AppAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.NativeAd.AppAttr)
  // optional string app_name = 1;
  if (has_app_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.AppAttr.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_name(), output);
  }

  // optional string app_pkg = 2;
  if (has_app_pkg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_pkg().data(), this->app_pkg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.AppAttr.app_pkg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->app_pkg(), output);
  }

  // optional string app_md5 = 3;
  if (has_app_md5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_md5().data(), this->app_md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.AppAttr.app_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->app_md5(), output);
  }

  // optional int32 app_vc = 4;
  if (has_app_vc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->app_vc(), output);
  }

  // optional int32 app_size = 5;
  if (has_app_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->app_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.NativeAd.AppAttr)
}

::google::protobuf::uint8* NativeAd_AppAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.NativeAd.AppAttr)
  // optional string app_name = 1;
  if (has_app_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.AppAttr.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_name(), target);
  }

  // optional string app_pkg = 2;
  if (has_app_pkg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_pkg().data(), this->app_pkg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.AppAttr.app_pkg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->app_pkg(), target);
  }

  // optional string app_md5 = 3;
  if (has_app_md5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_md5().data(), this->app_md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.AppAttr.app_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->app_md5(), target);
  }

  // optional int32 app_vc = 4;
  if (has_app_vc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->app_vc(), target);
  }

  // optional int32 app_size = 5;
  if (has_app_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->app_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.NativeAd.AppAttr)
  return target;
}

int NativeAd_AppAttr::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.NativeAd.AppAttr)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional string app_name = 1;
    if (has_app_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app_name());
    }

    // optional string app_pkg = 2;
    if (has_app_pkg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app_pkg());
    }

    // optional string app_md5 = 3;
    if (has_app_md5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app_md5());
    }

    // optional int32 app_vc = 4;
    if (has_app_vc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->app_vc());
    }

    // optional int32 app_size = 5;
    if (has_app_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->app_size());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NativeAd_AppAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.NativeAd.AppAttr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NativeAd_AppAttr* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NativeAd_AppAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.NativeAd.AppAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.NativeAd.AppAttr)
    MergeFrom(*source);
  }
}

void NativeAd_AppAttr::MergeFrom(const NativeAd_AppAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.NativeAd.AppAttr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_app_name()) {
      set_has_app_name();
      app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
    }
    if (from.has_app_pkg()) {
      set_has_app_pkg();
      app_pkg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_pkg_);
    }
    if (from.has_app_md5()) {
      set_has_app_md5();
      app_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_md5_);
    }
    if (from.has_app_vc()) {
      set_app_vc(from.app_vc());
    }
    if (from.has_app_size()) {
      set_app_size(from.app_size());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NativeAd_AppAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.NativeAd.AppAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NativeAd_AppAttr::CopyFrom(const NativeAd_AppAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.NativeAd.AppAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NativeAd_AppAttr::IsInitialized() const {

  return true;
}

void NativeAd_AppAttr::Swap(NativeAd_AppAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NativeAd_AppAttr::InternalSwap(NativeAd_AppAttr* other) {
  app_name_.Swap(&other->app_name_);
  app_pkg_.Swap(&other->app_pkg_);
  app_md5_.Swap(&other->app_md5_);
  std::swap(app_vc_, other->app_vc_);
  std::swap(app_size_, other->app_size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NativeAd_AppAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NativeAd_AppAttr_descriptor_;
  metadata.reflection = NativeAd_AppAttr_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NativeAd::kMaxCpmPriceFieldNumber;
const int NativeAd::kCreativesFieldNumber;
const int NativeAd::kTemplateIdFieldNumber;
const int NativeAd::kAppAttrFieldNumber;
const int NativeAd::kImpressionTracksFieldNumber;
const int NativeAd::kCategoryFieldNumber;
const int NativeAd::kDestinationUrlFieldNumber;
const int NativeAd::kAdvertiserIdFieldNumber;
const int NativeAd::kCreativeIdFieldNumber;
const int NativeAd::kDealIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NativeAd::NativeAd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.MAX.NativeAd)
}

void NativeAd::InitAsDefaultInstance() {
  app_attr_ = const_cast< ::protocol::MAX::NativeAd_AppAttr*>(&::protocol::MAX::NativeAd_AppAttr::default_instance());
}

NativeAd::NativeAd(const NativeAd& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.MAX.NativeAd)
}

void NativeAd::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  max_cpm_price_ = 0u;
  template_id_ = 0;
  app_attr_ = NULL;
  advertiser_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creative_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deal_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NativeAd::~NativeAd() {
  // @@protoc_insertion_point(destructor:protocol.MAX.NativeAd)
  SharedDtor();
}

void NativeAd::SharedDtor() {
  advertiser_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creative_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete app_attr_;
  }
}

void NativeAd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NativeAd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NativeAd_descriptor_;
}

const NativeAd& NativeAd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_max_2dbidding_2eproto();
  return *default_instance_;
}

NativeAd* NativeAd::default_instance_ = NULL;

NativeAd* NativeAd::New(::google::protobuf::Arena* arena) const {
  NativeAd* n = new NativeAd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NativeAd::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.MAX.NativeAd)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(NativeAd, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<NativeAd*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 141u) {
    ZR_(max_cpm_price_, template_id_);
    if (has_app_attr()) {
      if (app_attr_ != NULL) app_attr_->::protocol::MAX::NativeAd_AppAttr::Clear();
    }
    if (has_advertiser_id()) {
      advertiser_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_creative_id()) {
      creative_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    deal_id_ = GOOGLE_LONGLONG(0);
  }

#undef ZR_HELPER_
#undef ZR_

  creatives_.Clear();
  impression_tracks_.Clear();
  category_.Clear();
  destination_url_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NativeAd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.MAX.NativeAd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 max_cpm_price = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_cpm_price_)));
          set_has_max_cpm_price();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_creatives;
        break;
      }

      // repeated .protocol.MAX.NativeAd.Creative creatives = 2;
      case 2: {
        if (tag == 18) {
         parse_creatives:
          DO_(input->IncrementRecursionDepth());
         parse_loop_creatives:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_creatives()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_creatives;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_impression_tracks;
        break;
      }

      // repeated string impression_tracks = 3;
      case 3: {
        if (tag == 26) {
         parse_impression_tracks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_impression_tracks()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->impression_tracks(this->impression_tracks_size() - 1).data(),
            this->impression_tracks(this->impression_tracks_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.impression_tracks");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_impression_tracks;
        if (input->ExpectTag(32)) goto parse_category;
        break;
      }

      // repeated int32 category = 4;
      case 4: {
        if (tag == 32) {
         parse_category:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_category())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_category())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_category;
        if (input->ExpectTag(42)) goto parse_destination_url;
        break;
      }

      // repeated string destination_url = 5;
      case 5: {
        if (tag == 42) {
         parse_destination_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_destination_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->destination_url(this->destination_url_size() - 1).data(),
            this->destination_url(this->destination_url_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.destination_url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_destination_url;
        if (input->ExpectTag(50)) goto parse_advertiser_id;
        break;
      }

      // optional string advertiser_id = 6;
      case 6: {
        if (tag == 50) {
         parse_advertiser_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_advertiser_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->advertiser_id().data(), this->advertiser_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.advertiser_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_creative_id;
        break;
      }

      // optional string creative_id = 7;
      case 7: {
        if (tag == 58) {
         parse_creative_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creative_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creative_id().data(), this->creative_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.MAX.NativeAd.creative_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_deal_id;
        break;
      }

      // optional int64 deal_id = 8;
      case 8: {
        if (tag == 64) {
         parse_deal_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &deal_id_)));
          set_has_deal_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_app_attr;
        break;
      }

      // optional .protocol.MAX.NativeAd.AppAttr app_attr = 9;
      case 9: {
        if (tag == 74) {
         parse_app_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_app_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_template_id;
        break;
      }

      // optional int32 template_id = 10;
      case 10: {
        if (tag == 80) {
         parse_template_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_id_)));
          set_has_template_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.MAX.NativeAd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.MAX.NativeAd)
  return false;
#undef DO_
}

void NativeAd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.MAX.NativeAd)
  // required uint32 max_cpm_price = 1;
  if (has_max_cpm_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->max_cpm_price(), output);
  }

  // repeated .protocol.MAX.NativeAd.Creative creatives = 2;
  for (unsigned int i = 0, n = this->creatives_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->creatives(i), output);
  }

  // repeated string impression_tracks = 3;
  for (int i = 0; i < this->impression_tracks_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->impression_tracks(i).data(), this->impression_tracks(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.impression_tracks");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->impression_tracks(i), output);
  }

  // repeated int32 category = 4;
  for (int i = 0; i < this->category_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->category(i), output);
  }

  // repeated string destination_url = 5;
  for (int i = 0; i < this->destination_url_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_url(i).data(), this->destination_url(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.destination_url");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->destination_url(i), output);
  }

  // optional string advertiser_id = 6;
  if (has_advertiser_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advertiser_id().data(), this->advertiser_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.advertiser_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->advertiser_id(), output);
  }

  // optional string creative_id = 7;
  if (has_creative_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creative_id().data(), this->creative_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.creative_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->creative_id(), output);
  }

  // optional int64 deal_id = 8;
  if (has_deal_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->deal_id(), output);
  }

  // optional .protocol.MAX.NativeAd.AppAttr app_attr = 9;
  if (has_app_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->app_attr_, output);
  }

  // optional int32 template_id = 10;
  if (has_template_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->template_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.MAX.NativeAd)
}

::google::protobuf::uint8* NativeAd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.MAX.NativeAd)
  // required uint32 max_cpm_price = 1;
  if (has_max_cpm_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->max_cpm_price(), target);
  }

  // repeated .protocol.MAX.NativeAd.Creative creatives = 2;
  for (unsigned int i = 0, n = this->creatives_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->creatives(i), false, target);
  }

  // repeated string impression_tracks = 3;
  for (int i = 0; i < this->impression_tracks_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->impression_tracks(i).data(), this->impression_tracks(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.impression_tracks");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->impression_tracks(i), target);
  }

  // repeated int32 category = 4;
  for (int i = 0; i < this->category_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->category(i), target);
  }

  // repeated string destination_url = 5;
  for (int i = 0; i < this->destination_url_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_url(i).data(), this->destination_url(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.destination_url");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->destination_url(i), target);
  }

  // optional string advertiser_id = 6;
  if (has_advertiser_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advertiser_id().data(), this->advertiser_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.advertiser_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->advertiser_id(), target);
  }

  // optional string creative_id = 7;
  if (has_creative_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creative_id().data(), this->creative_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.MAX.NativeAd.creative_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->creative_id(), target);
  }

  // optional int64 deal_id = 8;
  if (has_deal_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->deal_id(), target);
  }

  // optional .protocol.MAX.NativeAd.AppAttr app_attr = 9;
  if (has_app_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->app_attr_, false, target);
  }

  // optional int32 template_id = 10;
  if (has_template_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->template_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.MAX.NativeAd)
  return target;
}

int NativeAd::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.MAX.NativeAd)
  int total_size = 0;

  // required uint32 max_cpm_price = 1;
  if (has_max_cpm_price()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_cpm_price());
  }
  if (_has_bits_[2 / 32] & 140u) {
    // optional int32 template_id = 10;
    if (has_template_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->template_id());
    }

    // optional .protocol.MAX.NativeAd.AppAttr app_attr = 9;
    if (has_app_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->app_attr_);
    }

    // optional string advertiser_id = 6;
    if (has_advertiser_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->advertiser_id());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional string creative_id = 7;
    if (has_creative_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creative_id());
    }

    // optional int64 deal_id = 8;
    if (has_deal_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->deal_id());
    }

  }
  // repeated .protocol.MAX.NativeAd.Creative creatives = 2;
  total_size += 1 * this->creatives_size();
  for (int i = 0; i < this->creatives_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->creatives(i));
  }

  // repeated string impression_tracks = 3;
  total_size += 1 * this->impression_tracks_size();
  for (int i = 0; i < this->impression_tracks_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->impression_tracks(i));
  }

  // repeated int32 category = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->category_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->category(i));
    }
    total_size += 1 * this->category_size() + data_size;
  }

  // repeated string destination_url = 5;
  total_size += 1 * this->destination_url_size();
  for (int i = 0; i < this->destination_url_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->destination_url(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NativeAd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.MAX.NativeAd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NativeAd* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NativeAd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.MAX.NativeAd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.MAX.NativeAd)
    MergeFrom(*source);
  }
}

void NativeAd::MergeFrom(const NativeAd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.MAX.NativeAd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  creatives_.MergeFrom(from.creatives_);
  impression_tracks_.MergeFrom(from.impression_tracks_);
  category_.MergeFrom(from.category_);
  destination_url_.MergeFrom(from.destination_url_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_max_cpm_price()) {
      set_max_cpm_price(from.max_cpm_price());
    }
    if (from.has_template_id()) {
      set_template_id(from.template_id());
    }
    if (from.has_app_attr()) {
      mutable_app_attr()->::protocol::MAX::NativeAd_AppAttr::MergeFrom(from.app_attr());
    }
    if (from.has_advertiser_id()) {
      set_has_advertiser_id();
      advertiser_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.advertiser_id_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_creative_id()) {
      set_has_creative_id();
      creative_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creative_id_);
    }
    if (from.has_deal_id()) {
      set_deal_id(from.deal_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NativeAd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.MAX.NativeAd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NativeAd::CopyFrom(const NativeAd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.MAX.NativeAd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NativeAd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void NativeAd::Swap(NativeAd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NativeAd::InternalSwap(NativeAd* other) {
  std::swap(max_cpm_price_, other->max_cpm_price_);
  creatives_.UnsafeArenaSwap(&other->creatives_);
  std::swap(template_id_, other->template_id_);
  std::swap(app_attr_, other->app_attr_);
  impression_tracks_.UnsafeArenaSwap(&other->impression_tracks_);
  category_.UnsafeArenaSwap(&other->category_);
  destination_url_.UnsafeArenaSwap(&other->destination_url_);
  advertiser_id_.Swap(&other->advertiser_id_);
  creative_id_.Swap(&other->creative_id_);
  std::swap(deal_id_, other->deal_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NativeAd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NativeAd_descriptor_;
  metadata.reflection = NativeAd_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NativeAd_Creative_Image

// optional string image_url = 1;
bool NativeAd_Creative_Image::has_image_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NativeAd_Creative_Image::set_has_image_url() {
  _has_bits_[0] |= 0x00000001u;
}
void NativeAd_Creative_Image::clear_has_image_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void NativeAd_Creative_Image::clear_image_url() {
  image_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_image_url();
}
 const ::std::string& NativeAd_Creative_Image::image_url() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Image.image_url)
  return image_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative_Image::set_image_url(const ::std::string& value) {
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Image.image_url)
}
 void NativeAd_Creative_Image::set_image_url(const char* value) {
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.Image.image_url)
}
 void NativeAd_Creative_Image::set_image_url(const char* value, size_t size) {
  set_has_image_url();
  image_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.Image.image_url)
}
 ::std::string* NativeAd_Creative_Image::mutable_image_url() {
  set_has_image_url();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.Image.image_url)
  return image_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd_Creative_Image::release_image_url() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.Image.image_url)
  clear_has_image_url();
  return image_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative_Image::set_allocated_image_url(::std::string* image_url) {
  if (image_url != NULL) {
    set_has_image_url();
  } else {
    clear_has_image_url();
  }
  image_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image_url);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.Image.image_url)
}

// optional int32 image_width = 2;
bool NativeAd_Creative_Image::has_image_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NativeAd_Creative_Image::set_has_image_width() {
  _has_bits_[0] |= 0x00000002u;
}
void NativeAd_Creative_Image::clear_has_image_width() {
  _has_bits_[0] &= ~0x00000002u;
}
void NativeAd_Creative_Image::clear_image_width() {
  image_width_ = 0;
  clear_has_image_width();
}
 ::google::protobuf::int32 NativeAd_Creative_Image::image_width() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Image.image_width)
  return image_width_;
}
 void NativeAd_Creative_Image::set_image_width(::google::protobuf::int32 value) {
  set_has_image_width();
  image_width_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Image.image_width)
}

// optional int32 image_height = 3;
bool NativeAd_Creative_Image::has_image_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NativeAd_Creative_Image::set_has_image_height() {
  _has_bits_[0] |= 0x00000004u;
}
void NativeAd_Creative_Image::clear_has_image_height() {
  _has_bits_[0] &= ~0x00000004u;
}
void NativeAd_Creative_Image::clear_image_height() {
  image_height_ = 0;
  clear_has_image_height();
}
 ::google::protobuf::int32 NativeAd_Creative_Image::image_height() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Image.image_height)
  return image_height_;
}
 void NativeAd_Creative_Image::set_image_height(::google::protobuf::int32 value) {
  set_has_image_height();
  image_height_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Image.image_height)
}

// -------------------------------------------------------------------

// NativeAd_Creative_Link

// optional string click_url = 1;
bool NativeAd_Creative_Link::has_click_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NativeAd_Creative_Link::set_has_click_url() {
  _has_bits_[0] |= 0x00000001u;
}
void NativeAd_Creative_Link::clear_has_click_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void NativeAd_Creative_Link::clear_click_url() {
  click_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_click_url();
}
 const ::std::string& NativeAd_Creative_Link::click_url() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Link.click_url)
  return click_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative_Link::set_click_url(const ::std::string& value) {
  set_has_click_url();
  click_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Link.click_url)
}
 void NativeAd_Creative_Link::set_click_url(const char* value) {
  set_has_click_url();
  click_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.Link.click_url)
}
 void NativeAd_Creative_Link::set_click_url(const char* value, size_t size) {
  set_has_click_url();
  click_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.Link.click_url)
}
 ::std::string* NativeAd_Creative_Link::mutable_click_url() {
  set_has_click_url();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.Link.click_url)
  return click_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd_Creative_Link::release_click_url() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.Link.click_url)
  clear_has_click_url();
  return click_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative_Link::set_allocated_click_url(::std::string* click_url) {
  if (click_url != NULL) {
    set_has_click_url();
  } else {
    clear_has_click_url();
  }
  click_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), click_url);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.Link.click_url)
}

// optional string deep_link = 4;
bool NativeAd_Creative_Link::has_deep_link() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NativeAd_Creative_Link::set_has_deep_link() {
  _has_bits_[0] |= 0x00000002u;
}
void NativeAd_Creative_Link::clear_has_deep_link() {
  _has_bits_[0] &= ~0x00000002u;
}
void NativeAd_Creative_Link::clear_deep_link() {
  deep_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deep_link();
}
 const ::std::string& NativeAd_Creative_Link::deep_link() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Link.deep_link)
  return deep_link_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative_Link::set_deep_link(const ::std::string& value) {
  set_has_deep_link();
  deep_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Link.deep_link)
}
 void NativeAd_Creative_Link::set_deep_link(const char* value) {
  set_has_deep_link();
  deep_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.Link.deep_link)
}
 void NativeAd_Creative_Link::set_deep_link(const char* value, size_t size) {
  set_has_deep_link();
  deep_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.Link.deep_link)
}
 ::std::string* NativeAd_Creative_Link::mutable_deep_link() {
  set_has_deep_link();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.Link.deep_link)
  return deep_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd_Creative_Link::release_deep_link() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.Link.deep_link)
  clear_has_deep_link();
  return deep_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative_Link::set_allocated_deep_link(::std::string* deep_link) {
  if (deep_link != NULL) {
    set_has_deep_link();
  } else {
    clear_has_deep_link();
  }
  deep_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deep_link);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.Link.deep_link)
}

// optional int32 landing_type = 2;
bool NativeAd_Creative_Link::has_landing_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NativeAd_Creative_Link::set_has_landing_type() {
  _has_bits_[0] |= 0x00000004u;
}
void NativeAd_Creative_Link::clear_has_landing_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void NativeAd_Creative_Link::clear_landing_type() {
  landing_type_ = 0;
  clear_has_landing_type();
}
 ::google::protobuf::int32 NativeAd_Creative_Link::landing_type() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Link.landing_type)
  return landing_type_;
}
 void NativeAd_Creative_Link::set_landing_type(::google::protobuf::int32 value) {
  set_has_landing_type();
  landing_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Link.landing_type)
}

// repeated string content_click_tracks = 5;
int NativeAd_Creative_Link::content_click_tracks_size() const {
  return content_click_tracks_.size();
}
void NativeAd_Creative_Link::clear_content_click_tracks() {
  content_click_tracks_.Clear();
}
 const ::std::string& NativeAd_Creative_Link::content_click_tracks(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  return content_click_tracks_.Get(index);
}
 ::std::string* NativeAd_Creative_Link::mutable_content_click_tracks(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  return content_click_tracks_.Mutable(index);
}
 void NativeAd_Creative_Link::set_content_click_tracks(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  content_click_tracks_.Mutable(index)->assign(value);
}
 void NativeAd_Creative_Link::set_content_click_tracks(int index, const char* value) {
  content_click_tracks_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
}
 void NativeAd_Creative_Link::set_content_click_tracks(int index, const char* value, size_t size) {
  content_click_tracks_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
}
 ::std::string* NativeAd_Creative_Link::add_content_click_tracks() {
  // @@protoc_insertion_point(field_add_mutable:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  return content_click_tracks_.Add();
}
 void NativeAd_Creative_Link::add_content_click_tracks(const ::std::string& value) {
  content_click_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
}
 void NativeAd_Creative_Link::add_content_click_tracks(const char* value) {
  content_click_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
}
 void NativeAd_Creative_Link::add_content_click_tracks(const char* value, size_t size) {
  content_click_tracks_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
NativeAd_Creative_Link::content_click_tracks() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  return content_click_tracks_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
NativeAd_Creative_Link::mutable_content_click_tracks() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.Creative.Link.content_click_tracks)
  return &content_click_tracks_;
}

// repeated string click_tracks = 3;
int NativeAd_Creative_Link::click_tracks_size() const {
  return click_tracks_.size();
}
void NativeAd_Creative_Link::clear_click_tracks() {
  click_tracks_.Clear();
}
 const ::std::string& NativeAd_Creative_Link::click_tracks(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  return click_tracks_.Get(index);
}
 ::std::string* NativeAd_Creative_Link::mutable_click_tracks(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  return click_tracks_.Mutable(index);
}
 void NativeAd_Creative_Link::set_click_tracks(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  click_tracks_.Mutable(index)->assign(value);
}
 void NativeAd_Creative_Link::set_click_tracks(int index, const char* value) {
  click_tracks_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.Link.click_tracks)
}
 void NativeAd_Creative_Link::set_click_tracks(int index, const char* value, size_t size) {
  click_tracks_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.Link.click_tracks)
}
 ::std::string* NativeAd_Creative_Link::add_click_tracks() {
  // @@protoc_insertion_point(field_add_mutable:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  return click_tracks_.Add();
}
 void NativeAd_Creative_Link::add_click_tracks(const ::std::string& value) {
  click_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.Creative.Link.click_tracks)
}
 void NativeAd_Creative_Link::add_click_tracks(const char* value) {
  click_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.MAX.NativeAd.Creative.Link.click_tracks)
}
 void NativeAd_Creative_Link::add_click_tracks(const char* value, size_t size) {
  click_tracks_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.MAX.NativeAd.Creative.Link.click_tracks)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
NativeAd_Creative_Link::click_tracks() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  return click_tracks_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
NativeAd_Creative_Link::mutable_click_tracks() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.Creative.Link.click_tracks)
  return &click_tracks_;
}

// -------------------------------------------------------------------

// NativeAd_Creative

// optional int32 template_id = 9;
bool NativeAd_Creative::has_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NativeAd_Creative::set_has_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
void NativeAd_Creative::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void NativeAd_Creative::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
 ::google::protobuf::int32 NativeAd_Creative::template_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.template_id)
  return template_id_;
}
 void NativeAd_Creative::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.template_id)
}

// optional string title = 1;
bool NativeAd_Creative::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NativeAd_Creative::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
void NativeAd_Creative::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
void NativeAd_Creative::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
 const ::std::string& NativeAd_Creative::title() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.title)
}
 void NativeAd_Creative::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.title)
}
 void NativeAd_Creative::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.title)
}
 ::std::string* NativeAd_Creative::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd_Creative::release_title() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.title)
}

// optional string sub_title = 2;
bool NativeAd_Creative::has_sub_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NativeAd_Creative::set_has_sub_title() {
  _has_bits_[0] |= 0x00000004u;
}
void NativeAd_Creative::clear_has_sub_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void NativeAd_Creative::clear_sub_title() {
  sub_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sub_title();
}
 const ::std::string& NativeAd_Creative::sub_title() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.sub_title)
  return sub_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative::set_sub_title(const ::std::string& value) {
  set_has_sub_title();
  sub_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.sub_title)
}
 void NativeAd_Creative::set_sub_title(const char* value) {
  set_has_sub_title();
  sub_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.sub_title)
}
 void NativeAd_Creative::set_sub_title(const char* value, size_t size) {
  set_has_sub_title();
  sub_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.sub_title)
}
 ::std::string* NativeAd_Creative::mutable_sub_title() {
  set_has_sub_title();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.sub_title)
  return sub_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd_Creative::release_sub_title() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.sub_title)
  clear_has_sub_title();
  return sub_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative::set_allocated_sub_title(::std::string* sub_title) {
  if (sub_title != NULL) {
    set_has_sub_title();
  } else {
    clear_has_sub_title();
  }
  sub_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sub_title);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.sub_title)
}

// optional string description = 3;
bool NativeAd_Creative::has_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NativeAd_Creative::set_has_description() {
  _has_bits_[0] |= 0x00000008u;
}
void NativeAd_Creative::clear_has_description() {
  _has_bits_[0] &= ~0x00000008u;
}
void NativeAd_Creative::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
 const ::std::string& NativeAd_Creative::description() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.description)
}
 void NativeAd_Creative::set_description(const char* value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.description)
}
 void NativeAd_Creative::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.description)
}
 ::std::string* NativeAd_Creative::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd_Creative::release_description() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.description)
}

// optional string button_name = 4;
bool NativeAd_Creative::has_button_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void NativeAd_Creative::set_has_button_name() {
  _has_bits_[0] |= 0x00000010u;
}
void NativeAd_Creative::clear_has_button_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void NativeAd_Creative::clear_button_name() {
  button_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_button_name();
}
 const ::std::string& NativeAd_Creative::button_name() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.button_name)
  return button_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative::set_button_name(const ::std::string& value) {
  set_has_button_name();
  button_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.Creative.button_name)
}
 void NativeAd_Creative::set_button_name(const char* value) {
  set_has_button_name();
  button_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.Creative.button_name)
}
 void NativeAd_Creative::set_button_name(const char* value, size_t size) {
  set_has_button_name();
  button_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.Creative.button_name)
}
 ::std::string* NativeAd_Creative::mutable_button_name() {
  set_has_button_name();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.button_name)
  return button_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd_Creative::release_button_name() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.button_name)
  clear_has_button_name();
  return button_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_Creative::set_allocated_button_name(::std::string* button_name) {
  if (button_name != NULL) {
    set_has_button_name();
  } else {
    clear_has_button_name();
  }
  button_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), button_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.button_name)
}

// optional .protocol.MAX.NativeAd.Creative.Image content_image = 5;
bool NativeAd_Creative::has_content_image() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void NativeAd_Creative::set_has_content_image() {
  _has_bits_[0] |= 0x00000020u;
}
void NativeAd_Creative::clear_has_content_image() {
  _has_bits_[0] &= ~0x00000020u;
}
void NativeAd_Creative::clear_content_image() {
  if (content_image_ != NULL) content_image_->::protocol::MAX::NativeAd_Creative_Image::Clear();
  clear_has_content_image();
}
const ::protocol::MAX::NativeAd_Creative_Image& NativeAd_Creative::content_image() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.content_image)
  return content_image_ != NULL ? *content_image_ : *default_instance_->content_image_;
}
::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::mutable_content_image() {
  set_has_content_image();
  if (content_image_ == NULL) {
    content_image_ = new ::protocol::MAX::NativeAd_Creative_Image;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.content_image)
  return content_image_;
}
::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::release_content_image() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.content_image)
  clear_has_content_image();
  ::protocol::MAX::NativeAd_Creative_Image* temp = content_image_;
  content_image_ = NULL;
  return temp;
}
void NativeAd_Creative::set_allocated_content_image(::protocol::MAX::NativeAd_Creative_Image* content_image) {
  delete content_image_;
  content_image_ = content_image;
  if (content_image) {
    set_has_content_image();
  } else {
    clear_has_content_image();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.content_image)
}

// repeated .protocol.MAX.NativeAd.Creative.Image multi_images = 12;
int NativeAd_Creative::multi_images_size() const {
  return multi_images_.size();
}
void NativeAd_Creative::clear_multi_images() {
  multi_images_.Clear();
}
const ::protocol::MAX::NativeAd_Creative_Image& NativeAd_Creative::multi_images(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.multi_images)
  return multi_images_.Get(index);
}
::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::mutable_multi_images(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.multi_images)
  return multi_images_.Mutable(index);
}
::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::add_multi_images() {
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.Creative.multi_images)
  return multi_images_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative_Image >*
NativeAd_Creative::mutable_multi_images() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.Creative.multi_images)
  return &multi_images_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative_Image >&
NativeAd_Creative::multi_images() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.Creative.multi_images)
  return multi_images_;
}

// optional .protocol.MAX.NativeAd.Creative.Image linked_image = 8;
bool NativeAd_Creative::has_linked_image() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void NativeAd_Creative::set_has_linked_image() {
  _has_bits_[0] |= 0x00000080u;
}
void NativeAd_Creative::clear_has_linked_image() {
  _has_bits_[0] &= ~0x00000080u;
}
void NativeAd_Creative::clear_linked_image() {
  if (linked_image_ != NULL) linked_image_->::protocol::MAX::NativeAd_Creative_Image::Clear();
  clear_has_linked_image();
}
const ::protocol::MAX::NativeAd_Creative_Image& NativeAd_Creative::linked_image() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.linked_image)
  return linked_image_ != NULL ? *linked_image_ : *default_instance_->linked_image_;
}
::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::mutable_linked_image() {
  set_has_linked_image();
  if (linked_image_ == NULL) {
    linked_image_ = new ::protocol::MAX::NativeAd_Creative_Image;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.linked_image)
  return linked_image_;
}
::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::release_linked_image() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.linked_image)
  clear_has_linked_image();
  ::protocol::MAX::NativeAd_Creative_Image* temp = linked_image_;
  linked_image_ = NULL;
  return temp;
}
void NativeAd_Creative::set_allocated_linked_image(::protocol::MAX::NativeAd_Creative_Image* linked_image) {
  delete linked_image_;
  linked_image_ = linked_image;
  if (linked_image) {
    set_has_linked_image();
  } else {
    clear_has_linked_image();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.linked_image)
}

// optional .protocol.MAX.NativeAd.Creative.Image logo = 6;
bool NativeAd_Creative::has_logo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void NativeAd_Creative::set_has_logo() {
  _has_bits_[0] |= 0x00000100u;
}
void NativeAd_Creative::clear_has_logo() {
  _has_bits_[0] &= ~0x00000100u;
}
void NativeAd_Creative::clear_logo() {
  if (logo_ != NULL) logo_->::protocol::MAX::NativeAd_Creative_Image::Clear();
  clear_has_logo();
}
const ::protocol::MAX::NativeAd_Creative_Image& NativeAd_Creative::logo() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.logo)
  return logo_ != NULL ? *logo_ : *default_instance_->logo_;
}
::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::mutable_logo() {
  set_has_logo();
  if (logo_ == NULL) {
    logo_ = new ::protocol::MAX::NativeAd_Creative_Image;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.logo)
  return logo_;
}
::protocol::MAX::NativeAd_Creative_Image* NativeAd_Creative::release_logo() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.logo)
  clear_has_logo();
  ::protocol::MAX::NativeAd_Creative_Image* temp = logo_;
  logo_ = NULL;
  return temp;
}
void NativeAd_Creative::set_allocated_logo(::protocol::MAX::NativeAd_Creative_Image* logo) {
  delete logo_;
  logo_ = logo;
  if (logo) {
    set_has_logo();
  } else {
    clear_has_logo();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.logo)
}

// optional .protocol.MAX.NativeAd.Creative.Link link = 7;
bool NativeAd_Creative::has_link() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void NativeAd_Creative::set_has_link() {
  _has_bits_[0] |= 0x00000200u;
}
void NativeAd_Creative::clear_has_link() {
  _has_bits_[0] &= ~0x00000200u;
}
void NativeAd_Creative::clear_link() {
  if (link_ != NULL) link_->::protocol::MAX::NativeAd_Creative_Link::Clear();
  clear_has_link();
}
const ::protocol::MAX::NativeAd_Creative_Link& NativeAd_Creative::link() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.Creative.link)
  return link_ != NULL ? *link_ : *default_instance_->link_;
}
::protocol::MAX::NativeAd_Creative_Link* NativeAd_Creative::mutable_link() {
  set_has_link();
  if (link_ == NULL) {
    link_ = new ::protocol::MAX::NativeAd_Creative_Link;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.Creative.link)
  return link_;
}
::protocol::MAX::NativeAd_Creative_Link* NativeAd_Creative::release_link() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.Creative.link)
  clear_has_link();
  ::protocol::MAX::NativeAd_Creative_Link* temp = link_;
  link_ = NULL;
  return temp;
}
void NativeAd_Creative::set_allocated_link(::protocol::MAX::NativeAd_Creative_Link* link) {
  delete link_;
  link_ = link;
  if (link) {
    set_has_link();
  } else {
    clear_has_link();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.Creative.link)
}

// -------------------------------------------------------------------

// NativeAd_AppAttr

// optional string app_name = 1;
bool NativeAd_AppAttr::has_app_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NativeAd_AppAttr::set_has_app_name() {
  _has_bits_[0] |= 0x00000001u;
}
void NativeAd_AppAttr::clear_has_app_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void NativeAd_AppAttr::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_name();
}
 const ::std::string& NativeAd_AppAttr::app_name() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.AppAttr.app_name)
  return app_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_AppAttr::set_app_name(const ::std::string& value) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.AppAttr.app_name)
}
 void NativeAd_AppAttr::set_app_name(const char* value) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.AppAttr.app_name)
}
 void NativeAd_AppAttr::set_app_name(const char* value, size_t size) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.AppAttr.app_name)
}
 ::std::string* NativeAd_AppAttr::mutable_app_name() {
  set_has_app_name();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.AppAttr.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd_AppAttr::release_app_name() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.AppAttr.app_name)
  clear_has_app_name();
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_AppAttr::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    set_has_app_name();
  } else {
    clear_has_app_name();
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.AppAttr.app_name)
}

// optional string app_pkg = 2;
bool NativeAd_AppAttr::has_app_pkg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NativeAd_AppAttr::set_has_app_pkg() {
  _has_bits_[0] |= 0x00000002u;
}
void NativeAd_AppAttr::clear_has_app_pkg() {
  _has_bits_[0] &= ~0x00000002u;
}
void NativeAd_AppAttr::clear_app_pkg() {
  app_pkg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_pkg();
}
 const ::std::string& NativeAd_AppAttr::app_pkg() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.AppAttr.app_pkg)
  return app_pkg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_AppAttr::set_app_pkg(const ::std::string& value) {
  set_has_app_pkg();
  app_pkg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.AppAttr.app_pkg)
}
 void NativeAd_AppAttr::set_app_pkg(const char* value) {
  set_has_app_pkg();
  app_pkg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.AppAttr.app_pkg)
}
 void NativeAd_AppAttr::set_app_pkg(const char* value, size_t size) {
  set_has_app_pkg();
  app_pkg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.AppAttr.app_pkg)
}
 ::std::string* NativeAd_AppAttr::mutable_app_pkg() {
  set_has_app_pkg();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.AppAttr.app_pkg)
  return app_pkg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd_AppAttr::release_app_pkg() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.AppAttr.app_pkg)
  clear_has_app_pkg();
  return app_pkg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_AppAttr::set_allocated_app_pkg(::std::string* app_pkg) {
  if (app_pkg != NULL) {
    set_has_app_pkg();
  } else {
    clear_has_app_pkg();
  }
  app_pkg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_pkg);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.AppAttr.app_pkg)
}

// optional string app_md5 = 3;
bool NativeAd_AppAttr::has_app_md5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NativeAd_AppAttr::set_has_app_md5() {
  _has_bits_[0] |= 0x00000004u;
}
void NativeAd_AppAttr::clear_has_app_md5() {
  _has_bits_[0] &= ~0x00000004u;
}
void NativeAd_AppAttr::clear_app_md5() {
  app_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_md5();
}
 const ::std::string& NativeAd_AppAttr::app_md5() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.AppAttr.app_md5)
  return app_md5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_AppAttr::set_app_md5(const ::std::string& value) {
  set_has_app_md5();
  app_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.AppAttr.app_md5)
}
 void NativeAd_AppAttr::set_app_md5(const char* value) {
  set_has_app_md5();
  app_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.AppAttr.app_md5)
}
 void NativeAd_AppAttr::set_app_md5(const char* value, size_t size) {
  set_has_app_md5();
  app_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.AppAttr.app_md5)
}
 ::std::string* NativeAd_AppAttr::mutable_app_md5() {
  set_has_app_md5();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.AppAttr.app_md5)
  return app_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd_AppAttr::release_app_md5() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.AppAttr.app_md5)
  clear_has_app_md5();
  return app_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd_AppAttr::set_allocated_app_md5(::std::string* app_md5) {
  if (app_md5 != NULL) {
    set_has_app_md5();
  } else {
    clear_has_app_md5();
  }
  app_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_md5);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.AppAttr.app_md5)
}

// optional int32 app_vc = 4;
bool NativeAd_AppAttr::has_app_vc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NativeAd_AppAttr::set_has_app_vc() {
  _has_bits_[0] |= 0x00000008u;
}
void NativeAd_AppAttr::clear_has_app_vc() {
  _has_bits_[0] &= ~0x00000008u;
}
void NativeAd_AppAttr::clear_app_vc() {
  app_vc_ = 0;
  clear_has_app_vc();
}
 ::google::protobuf::int32 NativeAd_AppAttr::app_vc() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.AppAttr.app_vc)
  return app_vc_;
}
 void NativeAd_AppAttr::set_app_vc(::google::protobuf::int32 value) {
  set_has_app_vc();
  app_vc_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.AppAttr.app_vc)
}

// optional int32 app_size = 5;
bool NativeAd_AppAttr::has_app_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void NativeAd_AppAttr::set_has_app_size() {
  _has_bits_[0] |= 0x00000010u;
}
void NativeAd_AppAttr::clear_has_app_size() {
  _has_bits_[0] &= ~0x00000010u;
}
void NativeAd_AppAttr::clear_app_size() {
  app_size_ = 0;
  clear_has_app_size();
}
 ::google::protobuf::int32 NativeAd_AppAttr::app_size() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.AppAttr.app_size)
  return app_size_;
}
 void NativeAd_AppAttr::set_app_size(::google::protobuf::int32 value) {
  set_has_app_size();
  app_size_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.AppAttr.app_size)
}

// -------------------------------------------------------------------

// NativeAd

// required uint32 max_cpm_price = 1;
bool NativeAd::has_max_cpm_price() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NativeAd::set_has_max_cpm_price() {
  _has_bits_[0] |= 0x00000001u;
}
void NativeAd::clear_has_max_cpm_price() {
  _has_bits_[0] &= ~0x00000001u;
}
void NativeAd::clear_max_cpm_price() {
  max_cpm_price_ = 0u;
  clear_has_max_cpm_price();
}
 ::google::protobuf::uint32 NativeAd::max_cpm_price() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.max_cpm_price)
  return max_cpm_price_;
}
 void NativeAd::set_max_cpm_price(::google::protobuf::uint32 value) {
  set_has_max_cpm_price();
  max_cpm_price_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.max_cpm_price)
}

// repeated .protocol.MAX.NativeAd.Creative creatives = 2;
int NativeAd::creatives_size() const {
  return creatives_.size();
}
void NativeAd::clear_creatives() {
  creatives_.Clear();
}
const ::protocol::MAX::NativeAd_Creative& NativeAd::creatives(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.creatives)
  return creatives_.Get(index);
}
::protocol::MAX::NativeAd_Creative* NativeAd::mutable_creatives(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.creatives)
  return creatives_.Mutable(index);
}
::protocol::MAX::NativeAd_Creative* NativeAd::add_creatives() {
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.creatives)
  return creatives_.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative >*
NativeAd::mutable_creatives() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.creatives)
  return &creatives_;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::MAX::NativeAd_Creative >&
NativeAd::creatives() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.creatives)
  return creatives_;
}

// optional int32 template_id = 10;
bool NativeAd::has_template_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NativeAd::set_has_template_id() {
  _has_bits_[0] |= 0x00000004u;
}
void NativeAd::clear_has_template_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void NativeAd::clear_template_id() {
  template_id_ = 0;
  clear_has_template_id();
}
 ::google::protobuf::int32 NativeAd::template_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.template_id)
  return template_id_;
}
 void NativeAd::set_template_id(::google::protobuf::int32 value) {
  set_has_template_id();
  template_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.template_id)
}

// optional .protocol.MAX.NativeAd.AppAttr app_attr = 9;
bool NativeAd::has_app_attr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NativeAd::set_has_app_attr() {
  _has_bits_[0] |= 0x00000008u;
}
void NativeAd::clear_has_app_attr() {
  _has_bits_[0] &= ~0x00000008u;
}
void NativeAd::clear_app_attr() {
  if (app_attr_ != NULL) app_attr_->::protocol::MAX::NativeAd_AppAttr::Clear();
  clear_has_app_attr();
}
const ::protocol::MAX::NativeAd_AppAttr& NativeAd::app_attr() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.app_attr)
  return app_attr_ != NULL ? *app_attr_ : *default_instance_->app_attr_;
}
::protocol::MAX::NativeAd_AppAttr* NativeAd::mutable_app_attr() {
  set_has_app_attr();
  if (app_attr_ == NULL) {
    app_attr_ = new ::protocol::MAX::NativeAd_AppAttr;
  }
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.app_attr)
  return app_attr_;
}
::protocol::MAX::NativeAd_AppAttr* NativeAd::release_app_attr() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.app_attr)
  clear_has_app_attr();
  ::protocol::MAX::NativeAd_AppAttr* temp = app_attr_;
  app_attr_ = NULL;
  return temp;
}
void NativeAd::set_allocated_app_attr(::protocol::MAX::NativeAd_AppAttr* app_attr) {
  delete app_attr_;
  app_attr_ = app_attr;
  if (app_attr) {
    set_has_app_attr();
  } else {
    clear_has_app_attr();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.app_attr)
}

// repeated string impression_tracks = 3;
int NativeAd::impression_tracks_size() const {
  return impression_tracks_.size();
}
void NativeAd::clear_impression_tracks() {
  impression_tracks_.Clear();
}
 const ::std::string& NativeAd::impression_tracks(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.impression_tracks)
  return impression_tracks_.Get(index);
}
 ::std::string* NativeAd::mutable_impression_tracks(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.impression_tracks)
  return impression_tracks_.Mutable(index);
}
 void NativeAd::set_impression_tracks(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.impression_tracks)
  impression_tracks_.Mutable(index)->assign(value);
}
 void NativeAd::set_impression_tracks(int index, const char* value) {
  impression_tracks_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.impression_tracks)
}
 void NativeAd::set_impression_tracks(int index, const char* value, size_t size) {
  impression_tracks_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.impression_tracks)
}
 ::std::string* NativeAd::add_impression_tracks() {
  // @@protoc_insertion_point(field_add_mutable:protocol.MAX.NativeAd.impression_tracks)
  return impression_tracks_.Add();
}
 void NativeAd::add_impression_tracks(const ::std::string& value) {
  impression_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.impression_tracks)
}
 void NativeAd::add_impression_tracks(const char* value) {
  impression_tracks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.MAX.NativeAd.impression_tracks)
}
 void NativeAd::add_impression_tracks(const char* value, size_t size) {
  impression_tracks_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.MAX.NativeAd.impression_tracks)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
NativeAd::impression_tracks() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.impression_tracks)
  return impression_tracks_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
NativeAd::mutable_impression_tracks() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.impression_tracks)
  return &impression_tracks_;
}

// repeated int32 category = 4;
int NativeAd::category_size() const {
  return category_.size();
}
void NativeAd::clear_category() {
  category_.Clear();
}
 ::google::protobuf::int32 NativeAd::category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.category)
  return category_.Get(index);
}
 void NativeAd::set_category(int index, ::google::protobuf::int32 value) {
  category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.category)
}
 void NativeAd::add_category(::google::protobuf::int32 value) {
  category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.category)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NativeAd::category() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.category)
  return category_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NativeAd::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.category)
  return &category_;
}

// repeated string destination_url = 5;
int NativeAd::destination_url_size() const {
  return destination_url_.size();
}
void NativeAd::clear_destination_url() {
  destination_url_.Clear();
}
 const ::std::string& NativeAd::destination_url(int index) const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.destination_url)
  return destination_url_.Get(index);
}
 ::std::string* NativeAd::mutable_destination_url(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.destination_url)
  return destination_url_.Mutable(index);
}
 void NativeAd::set_destination_url(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.destination_url)
  destination_url_.Mutable(index)->assign(value);
}
 void NativeAd::set_destination_url(int index, const char* value) {
  destination_url_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.destination_url)
}
 void NativeAd::set_destination_url(int index, const char* value, size_t size) {
  destination_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.destination_url)
}
 ::std::string* NativeAd::add_destination_url() {
  // @@protoc_insertion_point(field_add_mutable:protocol.MAX.NativeAd.destination_url)
  return destination_url_.Add();
}
 void NativeAd::add_destination_url(const ::std::string& value) {
  destination_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.MAX.NativeAd.destination_url)
}
 void NativeAd::add_destination_url(const char* value) {
  destination_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.MAX.NativeAd.destination_url)
}
 void NativeAd::add_destination_url(const char* value, size_t size) {
  destination_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.MAX.NativeAd.destination_url)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
NativeAd::destination_url() const {
  // @@protoc_insertion_point(field_list:protocol.MAX.NativeAd.destination_url)
  return destination_url_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
NativeAd::mutable_destination_url() {
  // @@protoc_insertion_point(field_mutable_list:protocol.MAX.NativeAd.destination_url)
  return &destination_url_;
}

// optional string advertiser_id = 6;
bool NativeAd::has_advertiser_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void NativeAd::set_has_advertiser_id() {
  _has_bits_[0] |= 0x00000080u;
}
void NativeAd::clear_has_advertiser_id() {
  _has_bits_[0] &= ~0x00000080u;
}
void NativeAd::clear_advertiser_id() {
  advertiser_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_advertiser_id();
}
 const ::std::string& NativeAd::advertiser_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.advertiser_id)
  return advertiser_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd::set_advertiser_id(const ::std::string& value) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.advertiser_id)
}
 void NativeAd::set_advertiser_id(const char* value) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.advertiser_id)
}
 void NativeAd::set_advertiser_id(const char* value, size_t size) {
  set_has_advertiser_id();
  advertiser_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.advertiser_id)
}
 ::std::string* NativeAd::mutable_advertiser_id() {
  set_has_advertiser_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.advertiser_id)
  return advertiser_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd::release_advertiser_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.advertiser_id)
  clear_has_advertiser_id();
  return advertiser_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd::set_allocated_advertiser_id(::std::string* advertiser_id) {
  if (advertiser_id != NULL) {
    set_has_advertiser_id();
  } else {
    clear_has_advertiser_id();
  }
  advertiser_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advertiser_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.advertiser_id)
}

// optional string creative_id = 7;
bool NativeAd::has_creative_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void NativeAd::set_has_creative_id() {
  _has_bits_[0] |= 0x00000100u;
}
void NativeAd::clear_has_creative_id() {
  _has_bits_[0] &= ~0x00000100u;
}
void NativeAd::clear_creative_id() {
  creative_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creative_id();
}
 const ::std::string& NativeAd::creative_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.creative_id)
  return creative_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd::set_creative_id(const ::std::string& value) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.creative_id)
}
 void NativeAd::set_creative_id(const char* value) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.MAX.NativeAd.creative_id)
}
 void NativeAd::set_creative_id(const char* value, size_t size) {
  set_has_creative_id();
  creative_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.MAX.NativeAd.creative_id)
}
 ::std::string* NativeAd::mutable_creative_id() {
  set_has_creative_id();
  // @@protoc_insertion_point(field_mutable:protocol.MAX.NativeAd.creative_id)
  return creative_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NativeAd::release_creative_id() {
  // @@protoc_insertion_point(field_release:protocol.MAX.NativeAd.creative_id)
  clear_has_creative_id();
  return creative_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NativeAd::set_allocated_creative_id(::std::string* creative_id) {
  if (creative_id != NULL) {
    set_has_creative_id();
  } else {
    clear_has_creative_id();
  }
  creative_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creative_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.MAX.NativeAd.creative_id)
}

// optional int64 deal_id = 8;
bool NativeAd::has_deal_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void NativeAd::set_has_deal_id() {
  _has_bits_[0] |= 0x00000200u;
}
void NativeAd::clear_has_deal_id() {
  _has_bits_[0] &= ~0x00000200u;
}
void NativeAd::clear_deal_id() {
  deal_id_ = GOOGLE_LONGLONG(0);
  clear_has_deal_id();
}
 ::google::protobuf::int64 NativeAd::deal_id() const {
  // @@protoc_insertion_point(field_get:protocol.MAX.NativeAd.deal_id)
  return deal_id_;
}
 void NativeAd::set_deal_id(::google::protobuf::int64 value) {
  set_has_deal_id();
  deal_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.MAX.NativeAd.deal_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MAX
}  // namespace protocol

// @@protoc_insertion_point(global_scope)
