// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: baidu_bidding.proto

#ifndef PROTOBUF_baidu_5fbidding_2eproto__INCLUDED
#define PROTOBUF_baidu_5fbidding_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {
namespace baidu {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_baidu_5fbidding_2eproto();
void protobuf_InitDefaults_baidu_5fbidding_2eproto();
void protobuf_AssignDesc_baidu_5fbidding_2eproto();
void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

class BidRequest;
class BidRequest_AdSlot;
class BidRequest_AdSlot_ExpandCreativeInfo;
class BidRequest_AdSlot_GuaranteedOrder;
class BidRequest_AdSlot_GuaranteedOrder_Charge;
class BidRequest_AdSlot_LinkUnitInfo;
class BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword;
class BidRequest_AdSlot_NativeAdParam;
class BidRequest_AdSlot_NativeAdParam_ImageEle;
class BidRequest_AdSlot_PreferredOrderInfo;
class BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder;
class BidRequest_AdSlot_VideoInfo;
class BidRequest_BaiduId;
class BidRequest_CustomizedUserTag;
class BidRequest_CustomizedUserTag_AmsTag;
class BidRequest_Geo;
class BidRequest_Geo_Coordinate;
class BidRequest_Geo_UserLocation;
class BidRequest_Mobile;
class BidRequest_Mobile_DeviceOsVersion;
class BidRequest_Mobile_ForAdvertisingID;
class BidRequest_Mobile_MobileApp;
class BidRequest_Mobile_MobileID;
class BidRequest_Video;
class BidResponse;
class BidResponse_Ad;
class BidResponse_Ad_DeeplinkInfo;
class BidResponse_Ad_ExpandCreativeInfo;
class BidResponse_Ad_LinkUnitKeyword;
class BidResponse_Ad_NativeAd;
class BidResponse_Ad_NativeAd_Image;

enum BidRequest_Geo_Coordinate_Standard {
  BidRequest_Geo_Coordinate_Standard_BD_09 = 0,
  BidRequest_Geo_Coordinate_Standard_GCJ_02 = 1,
  BidRequest_Geo_Coordinate_Standard_WGS_84 = 2,
  BidRequest_Geo_Coordinate_Standard_BD_09_LL = 3
};
bool BidRequest_Geo_Coordinate_Standard_IsValid(int value);
const BidRequest_Geo_Coordinate_Standard BidRequest_Geo_Coordinate_Standard_Standard_MIN = BidRequest_Geo_Coordinate_Standard_BD_09;
const BidRequest_Geo_Coordinate_Standard BidRequest_Geo_Coordinate_Standard_Standard_MAX = BidRequest_Geo_Coordinate_Standard_BD_09_LL;
const int BidRequest_Geo_Coordinate_Standard_Standard_ARRAYSIZE = BidRequest_Geo_Coordinate_Standard_Standard_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Geo_Coordinate_Standard_descriptor();
inline const ::std::string& BidRequest_Geo_Coordinate_Standard_Name(BidRequest_Geo_Coordinate_Standard value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Geo_Coordinate_Standard_descriptor(), value);
}
inline bool BidRequest_Geo_Coordinate_Standard_Parse(
    const ::std::string& name, BidRequest_Geo_Coordinate_Standard* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Geo_Coordinate_Standard>(
    BidRequest_Geo_Coordinate_Standard_descriptor(), name, value);
}
enum BidRequest_Mobile_MobileID_IDType {
  BidRequest_Mobile_MobileID_IDType_UNKNOWN = 0,
  BidRequest_Mobile_MobileID_IDType_IMEI = 1,
  BidRequest_Mobile_MobileID_IDType_MAC = 2
};
bool BidRequest_Mobile_MobileID_IDType_IsValid(int value);
const BidRequest_Mobile_MobileID_IDType BidRequest_Mobile_MobileID_IDType_IDType_MIN = BidRequest_Mobile_MobileID_IDType_UNKNOWN;
const BidRequest_Mobile_MobileID_IDType BidRequest_Mobile_MobileID_IDType_IDType_MAX = BidRequest_Mobile_MobileID_IDType_MAC;
const int BidRequest_Mobile_MobileID_IDType_IDType_ARRAYSIZE = BidRequest_Mobile_MobileID_IDType_IDType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_MobileID_IDType_descriptor();
inline const ::std::string& BidRequest_Mobile_MobileID_IDType_Name(BidRequest_Mobile_MobileID_IDType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_MobileID_IDType_descriptor(), value);
}
inline bool BidRequest_Mobile_MobileID_IDType_Parse(
    const ::std::string& name, BidRequest_Mobile_MobileID_IDType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_MobileID_IDType>(
    BidRequest_Mobile_MobileID_IDType_descriptor(), name, value);
}
enum BidRequest_Mobile_ForAdvertisingID_IDType {
  BidRequest_Mobile_ForAdvertisingID_IDType_UNKNOWN = 0,
  BidRequest_Mobile_ForAdvertisingID_IDType_ANDROID_ID = 4,
  BidRequest_Mobile_ForAdvertisingID_IDType_IDFA = 5
};
bool BidRequest_Mobile_ForAdvertisingID_IDType_IsValid(int value);
const BidRequest_Mobile_ForAdvertisingID_IDType BidRequest_Mobile_ForAdvertisingID_IDType_IDType_MIN = BidRequest_Mobile_ForAdvertisingID_IDType_UNKNOWN;
const BidRequest_Mobile_ForAdvertisingID_IDType BidRequest_Mobile_ForAdvertisingID_IDType_IDType_MAX = BidRequest_Mobile_ForAdvertisingID_IDType_IDFA;
const int BidRequest_Mobile_ForAdvertisingID_IDType_IDType_ARRAYSIZE = BidRequest_Mobile_ForAdvertisingID_IDType_IDType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_ForAdvertisingID_IDType_descriptor();
inline const ::std::string& BidRequest_Mobile_ForAdvertisingID_IDType_Name(BidRequest_Mobile_ForAdvertisingID_IDType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_ForAdvertisingID_IDType_descriptor(), value);
}
inline bool BidRequest_Mobile_ForAdvertisingID_IDType_Parse(
    const ::std::string& name, BidRequest_Mobile_ForAdvertisingID_IDType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_ForAdvertisingID_IDType>(
    BidRequest_Mobile_ForAdvertisingID_IDType_descriptor(), name, value);
}
enum BidRequest_Mobile_MobileApp_AppInteractionType {
  BidRequest_Mobile_MobileApp_AppInteractionType_TELEPHONE = 0,
  BidRequest_Mobile_MobileApp_AppInteractionType_DOWNLOAD = 1,
  BidRequest_Mobile_MobileApp_AppInteractionType_DEEPLINK = 2
};
bool BidRequest_Mobile_MobileApp_AppInteractionType_IsValid(int value);
const BidRequest_Mobile_MobileApp_AppInteractionType BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_MIN = BidRequest_Mobile_MobileApp_AppInteractionType_TELEPHONE;
const BidRequest_Mobile_MobileApp_AppInteractionType BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_MAX = BidRequest_Mobile_MobileApp_AppInteractionType_DEEPLINK;
const int BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_ARRAYSIZE = BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_MobileApp_AppInteractionType_descriptor();
inline const ::std::string& BidRequest_Mobile_MobileApp_AppInteractionType_Name(BidRequest_Mobile_MobileApp_AppInteractionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_MobileApp_AppInteractionType_descriptor(), value);
}
inline bool BidRequest_Mobile_MobileApp_AppInteractionType_Parse(
    const ::std::string& name, BidRequest_Mobile_MobileApp_AppInteractionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_MobileApp_AppInteractionType>(
    BidRequest_Mobile_MobileApp_AppInteractionType_descriptor(), name, value);
}
enum BidRequest_Mobile_MobileDeviceType {
  BidRequest_Mobile_MobileDeviceType_UNKNOWN_DEVICE = 0,
  BidRequest_Mobile_MobileDeviceType_HIGHEND_PHONE = 1,
  BidRequest_Mobile_MobileDeviceType_TABLET = 2
};
bool BidRequest_Mobile_MobileDeviceType_IsValid(int value);
const BidRequest_Mobile_MobileDeviceType BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MIN = BidRequest_Mobile_MobileDeviceType_UNKNOWN_DEVICE;
const BidRequest_Mobile_MobileDeviceType BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MAX = BidRequest_Mobile_MobileDeviceType_TABLET;
const int BidRequest_Mobile_MobileDeviceType_MobileDeviceType_ARRAYSIZE = BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_MobileDeviceType_descriptor();
inline const ::std::string& BidRequest_Mobile_MobileDeviceType_Name(BidRequest_Mobile_MobileDeviceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_MobileDeviceType_descriptor(), value);
}
inline bool BidRequest_Mobile_MobileDeviceType_Parse(
    const ::std::string& name, BidRequest_Mobile_MobileDeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_MobileDeviceType>(
    BidRequest_Mobile_MobileDeviceType_descriptor(), name, value);
}
enum BidRequest_Mobile_OS {
  BidRequest_Mobile_OS_UNKNOWN_OS = 0,
  BidRequest_Mobile_OS_IOS = 1,
  BidRequest_Mobile_OS_ANDROID = 2,
  BidRequest_Mobile_OS_WINDOWS_PHONE = 3
};
bool BidRequest_Mobile_OS_IsValid(int value);
const BidRequest_Mobile_OS BidRequest_Mobile_OS_OS_MIN = BidRequest_Mobile_OS_UNKNOWN_OS;
const BidRequest_Mobile_OS BidRequest_Mobile_OS_OS_MAX = BidRequest_Mobile_OS_WINDOWS_PHONE;
const int BidRequest_Mobile_OS_OS_ARRAYSIZE = BidRequest_Mobile_OS_OS_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_OS_descriptor();
inline const ::std::string& BidRequest_Mobile_OS_Name(BidRequest_Mobile_OS value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_OS_descriptor(), value);
}
inline bool BidRequest_Mobile_OS_Parse(
    const ::std::string& name, BidRequest_Mobile_OS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_OS>(
    BidRequest_Mobile_OS_descriptor(), name, value);
}
enum BidRequest_Mobile_WirelessNetworkType {
  BidRequest_Mobile_WirelessNetworkType_UNKNOWN_NETWORK = 0,
  BidRequest_Mobile_WirelessNetworkType_WIFI = 1,
  BidRequest_Mobile_WirelessNetworkType_MOBILE_2G = 2,
  BidRequest_Mobile_WirelessNetworkType_MOBILE_3G = 3,
  BidRequest_Mobile_WirelessNetworkType_MOBILE_4G = 4
};
bool BidRequest_Mobile_WirelessNetworkType_IsValid(int value);
const BidRequest_Mobile_WirelessNetworkType BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_MIN = BidRequest_Mobile_WirelessNetworkType_UNKNOWN_NETWORK;
const BidRequest_Mobile_WirelessNetworkType BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_MAX = BidRequest_Mobile_WirelessNetworkType_MOBILE_4G;
const int BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_ARRAYSIZE = BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Mobile_WirelessNetworkType_descriptor();
inline const ::std::string& BidRequest_Mobile_WirelessNetworkType_Name(BidRequest_Mobile_WirelessNetworkType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Mobile_WirelessNetworkType_descriptor(), value);
}
inline bool BidRequest_Mobile_WirelessNetworkType_Parse(
    const ::std::string& name, BidRequest_Mobile_WirelessNetworkType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Mobile_WirelessNetworkType>(
    BidRequest_Mobile_WirelessNetworkType_descriptor(), name, value);
}
enum BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType {
  BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_CHARGE_GD_CPM = 2
};
bool BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_IsValid(int value);
const BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_ChargeType_MIN = BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_CHARGE_GD_CPM;
const BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_ChargeType_MAX = BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_CHARGE_GD_CPM;
const int BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_ChargeType_ARRAYSIZE = BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_ChargeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_descriptor();
inline const ::std::string& BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_Name(BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_descriptor(), value);
}
inline bool BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_Parse(
    const ::std::string& name, BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType>(
    BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_descriptor(), name, value);
}
enum BidRequest_AdSlot_ExpandCreativeInfo_ActionType {
  BidRequest_AdSlot_ExpandCreativeInfo_ActionType_HOVER = 1,
  BidRequest_AdSlot_ExpandCreativeInfo_ActionType_CLICK = 2,
  BidRequest_AdSlot_ExpandCreativeInfo_ActionType_LOAD = 3
};
bool BidRequest_AdSlot_ExpandCreativeInfo_ActionType_IsValid(int value);
const BidRequest_AdSlot_ExpandCreativeInfo_ActionType BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_MIN = BidRequest_AdSlot_ExpandCreativeInfo_ActionType_HOVER;
const BidRequest_AdSlot_ExpandCreativeInfo_ActionType BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_MAX = BidRequest_AdSlot_ExpandCreativeInfo_ActionType_LOAD;
const int BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_ARRAYSIZE = BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_ExpandCreativeInfo_ActionType_descriptor();
inline const ::std::string& BidRequest_AdSlot_ExpandCreativeInfo_ActionType_Name(BidRequest_AdSlot_ExpandCreativeInfo_ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_descriptor(), value);
}
inline bool BidRequest_AdSlot_ExpandCreativeInfo_ActionType_Parse(
    const ::std::string& name, BidRequest_AdSlot_ExpandCreativeInfo_ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_AdSlot_ExpandCreativeInfo_ActionType>(
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_descriptor(), name, value);
}
enum BidRequest_AdSlot_ExpandCreativeInfo_Direction {
  BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_NONE = 0,
  BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_UP = 1,
  BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_DOWN = 2,
  BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_LEFT = 3,
  BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_RIGHT = 4
};
bool BidRequest_AdSlot_ExpandCreativeInfo_Direction_IsValid(int value);
const BidRequest_AdSlot_ExpandCreativeInfo_Direction BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_MIN = BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_NONE;
const BidRequest_AdSlot_ExpandCreativeInfo_Direction BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_MAX = BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_RIGHT;
const int BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_ARRAYSIZE = BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_ExpandCreativeInfo_Direction_descriptor();
inline const ::std::string& BidRequest_AdSlot_ExpandCreativeInfo_Direction_Name(BidRequest_AdSlot_ExpandCreativeInfo_Direction value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_descriptor(), value);
}
inline bool BidRequest_AdSlot_ExpandCreativeInfo_Direction_Parse(
    const ::std::string& name, BidRequest_AdSlot_ExpandCreativeInfo_Direction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_AdSlot_ExpandCreativeInfo_Direction>(
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_descriptor(), name, value);
}
enum BidRequest_AdSlot_NativeAdParam_Fields {
  BidRequest_AdSlot_NativeAdParam_Fields_TITLE = 1,
  BidRequest_AdSlot_NativeAdParam_Fields_DESC = 2,
  BidRequest_AdSlot_NativeAdParam_Fields_IMAGE = 4,
  BidRequest_AdSlot_NativeAdParam_Fields_LOGOICON = 8,
  BidRequest_AdSlot_NativeAdParam_Fields_APPSIZE = 16
};
bool BidRequest_AdSlot_NativeAdParam_Fields_IsValid(int value);
const BidRequest_AdSlot_NativeAdParam_Fields BidRequest_AdSlot_NativeAdParam_Fields_Fields_MIN = BidRequest_AdSlot_NativeAdParam_Fields_TITLE;
const BidRequest_AdSlot_NativeAdParam_Fields BidRequest_AdSlot_NativeAdParam_Fields_Fields_MAX = BidRequest_AdSlot_NativeAdParam_Fields_APPSIZE;
const int BidRequest_AdSlot_NativeAdParam_Fields_Fields_ARRAYSIZE = BidRequest_AdSlot_NativeAdParam_Fields_Fields_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_NativeAdParam_Fields_descriptor();
inline const ::std::string& BidRequest_AdSlot_NativeAdParam_Fields_Name(BidRequest_AdSlot_NativeAdParam_Fields value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_AdSlot_NativeAdParam_Fields_descriptor(), value);
}
inline bool BidRequest_AdSlot_NativeAdParam_Fields_Parse(
    const ::std::string& name, BidRequest_AdSlot_NativeAdParam_Fields* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_AdSlot_NativeAdParam_Fields>(
    BidRequest_AdSlot_NativeAdParam_Fields_descriptor(), name, value);
}
enum BidRequest_AdSlot_CreativeDescType {
  BidRequest_AdSlot_CreativeDescType_STATIC_CREATIVE = 1,
  BidRequest_AdSlot_CreativeDescType_DYNAMIC_CREATIVE = 2
};
bool BidRequest_AdSlot_CreativeDescType_IsValid(int value);
const BidRequest_AdSlot_CreativeDescType BidRequest_AdSlot_CreativeDescType_CreativeDescType_MIN = BidRequest_AdSlot_CreativeDescType_STATIC_CREATIVE;
const BidRequest_AdSlot_CreativeDescType BidRequest_AdSlot_CreativeDescType_CreativeDescType_MAX = BidRequest_AdSlot_CreativeDescType_DYNAMIC_CREATIVE;
const int BidRequest_AdSlot_CreativeDescType_CreativeDescType_ARRAYSIZE = BidRequest_AdSlot_CreativeDescType_CreativeDescType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_CreativeDescType_descriptor();
inline const ::std::string& BidRequest_AdSlot_CreativeDescType_Name(BidRequest_AdSlot_CreativeDescType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_AdSlot_CreativeDescType_descriptor(), value);
}
inline bool BidRequest_AdSlot_CreativeDescType_Parse(
    const ::std::string& name, BidRequest_AdSlot_CreativeDescType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_AdSlot_CreativeDescType>(
    BidRequest_AdSlot_CreativeDescType_descriptor(), name, value);
}
enum BidRequest_AdSlot_AdSlotLevel {
  BidRequest_AdSlot_AdSlotLevel_UNKNOWN_ADB_LEVEL = 0,
  BidRequest_AdSlot_AdSlotLevel_TOP = 1,
  BidRequest_AdSlot_AdSlotLevel_MED = 2,
  BidRequest_AdSlot_AdSlotLevel_TAIL = 3,
  BidRequest_AdSlot_AdSlotLevel_LOW = 4
};
bool BidRequest_AdSlot_AdSlotLevel_IsValid(int value);
const BidRequest_AdSlot_AdSlotLevel BidRequest_AdSlot_AdSlotLevel_AdSlotLevel_MIN = BidRequest_AdSlot_AdSlotLevel_UNKNOWN_ADB_LEVEL;
const BidRequest_AdSlot_AdSlotLevel BidRequest_AdSlot_AdSlotLevel_AdSlotLevel_MAX = BidRequest_AdSlot_AdSlotLevel_LOW;
const int BidRequest_AdSlot_AdSlotLevel_AdSlotLevel_ARRAYSIZE = BidRequest_AdSlot_AdSlotLevel_AdSlotLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_AdSlot_AdSlotLevel_descriptor();
inline const ::std::string& BidRequest_AdSlot_AdSlotLevel_Name(BidRequest_AdSlot_AdSlotLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_AdSlot_AdSlotLevel_descriptor(), value);
}
inline bool BidRequest_AdSlot_AdSlotLevel_Parse(
    const ::std::string& name, BidRequest_AdSlot_AdSlotLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_AdSlot_AdSlotLevel>(
    BidRequest_AdSlot_AdSlotLevel_descriptor(), name, value);
}
enum BidRequest_Gender {
  BidRequest_Gender_UNKNOWN = 0,
  BidRequest_Gender_MALE = 1,
  BidRequest_Gender_FEMALE = 2
};
bool BidRequest_Gender_IsValid(int value);
const BidRequest_Gender BidRequest_Gender_Gender_MIN = BidRequest_Gender_UNKNOWN;
const BidRequest_Gender BidRequest_Gender_Gender_MAX = BidRequest_Gender_FEMALE;
const int BidRequest_Gender_Gender_ARRAYSIZE = BidRequest_Gender_Gender_MAX + 1;

const ::google::protobuf::EnumDescriptor* BidRequest_Gender_descriptor();
inline const ::std::string& BidRequest_Gender_Name(BidRequest_Gender value) {
  return ::google::protobuf::internal::NameOfEnum(
    BidRequest_Gender_descriptor(), value);
}
inline bool BidRequest_Gender_Parse(
    const ::std::string& name, BidRequest_Gender* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BidRequest_Gender>(
    BidRequest_Gender_descriptor(), name, value);
}
// ===================================================================

class BidRequest_BaiduId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.BaiduId) */ {
 public:
  BidRequest_BaiduId();
  virtual ~BidRequest_BaiduId();

  BidRequest_BaiduId(const BidRequest_BaiduId& from);

  inline BidRequest_BaiduId& operator=(const BidRequest_BaiduId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_BaiduId& default_instance();

  static const BidRequest_BaiduId* internal_default_instance();

  void Swap(BidRequest_BaiduId* other);

  // implements Message ----------------------------------------------

  inline BidRequest_BaiduId* New() const { return New(NULL); }

  BidRequest_BaiduId* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_BaiduId& from);
  void MergeFrom(const BidRequest_BaiduId& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_BaiduId* other);
  void UnsafeMergeFrom(const BidRequest_BaiduId& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string baidu_user_id = 1;
  bool has_baidu_user_id() const;
  void clear_baidu_user_id();
  static const int kBaiduUserIdFieldNumber = 1;
  const ::std::string& baidu_user_id() const;
  void set_baidu_user_id(const ::std::string& value);
  void set_baidu_user_id(const char* value);
  void set_baidu_user_id(const char* value, size_t size);
  ::std::string* mutable_baidu_user_id();
  ::std::string* release_baidu_user_id();
  void set_allocated_baidu_user_id(::std::string* baidu_user_id);

  // optional int32 baidu_user_id_version = 2;
  bool has_baidu_user_id_version() const;
  void clear_baidu_user_id_version();
  static const int kBaiduUserIdVersionFieldNumber = 2;
  ::google::protobuf::int32 baidu_user_id_version() const;
  void set_baidu_user_id_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.BaiduId)
 private:
  inline void set_has_baidu_user_id();
  inline void clear_has_baidu_user_id();
  inline void set_has_baidu_user_id_version();
  inline void clear_has_baidu_user_id_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr baidu_user_id_;
  ::google::protobuf::int32 baidu_user_id_version_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_BaiduId> BidRequest_BaiduId_default_instance_;

// -------------------------------------------------------------------

class BidRequest_CustomizedUserTag_AmsTag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.CustomizedUserTag.AmsTag) */ {
 public:
  BidRequest_CustomizedUserTag_AmsTag();
  virtual ~BidRequest_CustomizedUserTag_AmsTag();

  BidRequest_CustomizedUserTag_AmsTag(const BidRequest_CustomizedUserTag_AmsTag& from);

  inline BidRequest_CustomizedUserTag_AmsTag& operator=(const BidRequest_CustomizedUserTag_AmsTag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_CustomizedUserTag_AmsTag& default_instance();

  static const BidRequest_CustomizedUserTag_AmsTag* internal_default_instance();

  void Swap(BidRequest_CustomizedUserTag_AmsTag* other);

  // implements Message ----------------------------------------------

  inline BidRequest_CustomizedUserTag_AmsTag* New() const { return New(NULL); }

  BidRequest_CustomizedUserTag_AmsTag* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_CustomizedUserTag_AmsTag& from);
  void MergeFrom(const BidRequest_CustomizedUserTag_AmsTag& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_CustomizedUserTag_AmsTag* other);
  void UnsafeMergeFrom(const BidRequest_CustomizedUserTag_AmsTag& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 tag_id = 1;
  bool has_tag_id() const;
  void clear_tag_id();
  static const int kTagIdFieldNumber = 1;
  ::google::protobuf::uint64 tag_id() const;
  void set_tag_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.CustomizedUserTag.AmsTag)
 private:
  inline void set_has_tag_id();
  inline void clear_has_tag_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 tag_id_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_CustomizedUserTag_AmsTag> BidRequest_CustomizedUserTag_AmsTag_default_instance_;

// -------------------------------------------------------------------

class BidRequest_CustomizedUserTag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.CustomizedUserTag) */ {
 public:
  BidRequest_CustomizedUserTag();
  virtual ~BidRequest_CustomizedUserTag();

  BidRequest_CustomizedUserTag(const BidRequest_CustomizedUserTag& from);

  inline BidRequest_CustomizedUserTag& operator=(const BidRequest_CustomizedUserTag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_CustomizedUserTag& default_instance();

  static const BidRequest_CustomizedUserTag* internal_default_instance();

  void Swap(BidRequest_CustomizedUserTag* other);

  // implements Message ----------------------------------------------

  inline BidRequest_CustomizedUserTag* New() const { return New(NULL); }

  BidRequest_CustomizedUserTag* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_CustomizedUserTag& from);
  void MergeFrom(const BidRequest_CustomizedUserTag& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_CustomizedUserTag* other);
  void UnsafeMergeFrom(const BidRequest_CustomizedUserTag& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_CustomizedUserTag_AmsTag AmsTag;

  // accessors -------------------------------------------------------

  // repeated .protocol.baidu.BidRequest.CustomizedUserTag.AmsTag ams_tag_list = 1;
  int ams_tag_list_size() const;
  void clear_ams_tag_list();
  static const int kAmsTagListFieldNumber = 1;
  const ::protocol::baidu::BidRequest_CustomizedUserTag_AmsTag& ams_tag_list(int index) const;
  ::protocol::baidu::BidRequest_CustomizedUserTag_AmsTag* mutable_ams_tag_list(int index);
  ::protocol::baidu::BidRequest_CustomizedUserTag_AmsTag* add_ams_tag_list();
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_CustomizedUserTag_AmsTag >*
      mutable_ams_tag_list();
  const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_CustomizedUserTag_AmsTag >&
      ams_tag_list() const;

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.CustomizedUserTag)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_CustomizedUserTag_AmsTag > ams_tag_list_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_CustomizedUserTag> BidRequest_CustomizedUserTag_default_instance_;

// -------------------------------------------------------------------

class BidRequest_Geo_Coordinate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.Geo.Coordinate) */ {
 public:
  BidRequest_Geo_Coordinate();
  virtual ~BidRequest_Geo_Coordinate();

  BidRequest_Geo_Coordinate(const BidRequest_Geo_Coordinate& from);

  inline BidRequest_Geo_Coordinate& operator=(const BidRequest_Geo_Coordinate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Geo_Coordinate& default_instance();

  static const BidRequest_Geo_Coordinate* internal_default_instance();

  void Swap(BidRequest_Geo_Coordinate* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Geo_Coordinate* New() const { return New(NULL); }

  BidRequest_Geo_Coordinate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Geo_Coordinate& from);
  void MergeFrom(const BidRequest_Geo_Coordinate& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Geo_Coordinate* other);
  void UnsafeMergeFrom(const BidRequest_Geo_Coordinate& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Geo_Coordinate_Standard Standard;
  static const Standard BD_09 =
    BidRequest_Geo_Coordinate_Standard_BD_09;
  static const Standard GCJ_02 =
    BidRequest_Geo_Coordinate_Standard_GCJ_02;
  static const Standard WGS_84 =
    BidRequest_Geo_Coordinate_Standard_WGS_84;
  static const Standard BD_09_LL =
    BidRequest_Geo_Coordinate_Standard_BD_09_LL;
  static inline bool Standard_IsValid(int value) {
    return BidRequest_Geo_Coordinate_Standard_IsValid(value);
  }
  static const Standard Standard_MIN =
    BidRequest_Geo_Coordinate_Standard_Standard_MIN;
  static const Standard Standard_MAX =
    BidRequest_Geo_Coordinate_Standard_Standard_MAX;
  static const int Standard_ARRAYSIZE =
    BidRequest_Geo_Coordinate_Standard_Standard_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Standard_descriptor() {
    return BidRequest_Geo_Coordinate_Standard_descriptor();
  }
  static inline const ::std::string& Standard_Name(Standard value) {
    return BidRequest_Geo_Coordinate_Standard_Name(value);
  }
  static inline bool Standard_Parse(const ::std::string& name,
      Standard* value) {
    return BidRequest_Geo_Coordinate_Standard_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .protocol.baidu.BidRequest.Geo.Coordinate.Standard standard = 1;
  bool has_standard() const;
  void clear_standard();
  static const int kStandardFieldNumber = 1;
  ::protocol::baidu::BidRequest_Geo_Coordinate_Standard standard() const;
  void set_standard(::protocol::baidu::BidRequest_Geo_Coordinate_Standard value);

  // optional float latitude = 2;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  float latitude() const;
  void set_latitude(float value);

  // optional float longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  float longitude() const;
  void set_longitude(float value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.Geo.Coordinate)
 private:
  inline void set_has_standard();
  inline void clear_has_standard();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_longitude();
  inline void clear_has_longitude();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int standard_;
  float latitude_;
  float longitude_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_Geo_Coordinate> BidRequest_Geo_Coordinate_default_instance_;

// -------------------------------------------------------------------

class BidRequest_Geo_UserLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.Geo.UserLocation) */ {
 public:
  BidRequest_Geo_UserLocation();
  virtual ~BidRequest_Geo_UserLocation();

  BidRequest_Geo_UserLocation(const BidRequest_Geo_UserLocation& from);

  inline BidRequest_Geo_UserLocation& operator=(const BidRequest_Geo_UserLocation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Geo_UserLocation& default_instance();

  static const BidRequest_Geo_UserLocation* internal_default_instance();

  void Swap(BidRequest_Geo_UserLocation* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Geo_UserLocation* New() const { return New(NULL); }

  BidRequest_Geo_UserLocation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Geo_UserLocation& from);
  void MergeFrom(const BidRequest_Geo_UserLocation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Geo_UserLocation* other);
  void UnsafeMergeFrom(const BidRequest_Geo_UserLocation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string province = 1;
  bool has_province() const;
  void clear_province();
  static const int kProvinceFieldNumber = 1;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // optional string city = 2;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 2;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // optional string district = 3;
  bool has_district() const;
  void clear_district();
  static const int kDistrictFieldNumber = 3;
  const ::std::string& district() const;
  void set_district(const ::std::string& value);
  void set_district(const char* value);
  void set_district(const char* value, size_t size);
  ::std::string* mutable_district();
  ::std::string* release_district();
  void set_allocated_district(::std::string* district);

  // optional string street = 4;
  bool has_street() const;
  void clear_street();
  static const int kStreetFieldNumber = 4;
  const ::std::string& street() const;
  void set_street(const ::std::string& value);
  void set_street(const char* value);
  void set_street(const char* value, size_t size);
  ::std::string* mutable_street();
  ::std::string* release_street();
  void set_allocated_street(::std::string* street);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.Geo.UserLocation)
 private:
  inline void set_has_province();
  inline void clear_has_province();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_district();
  inline void clear_has_district();
  inline void set_has_street();
  inline void clear_has_street();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr district_;
  ::google::protobuf::internal::ArenaStringPtr street_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_Geo_UserLocation> BidRequest_Geo_UserLocation_default_instance_;

// -------------------------------------------------------------------

class BidRequest_Geo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.Geo) */ {
 public:
  BidRequest_Geo();
  virtual ~BidRequest_Geo();

  BidRequest_Geo(const BidRequest_Geo& from);

  inline BidRequest_Geo& operator=(const BidRequest_Geo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Geo& default_instance();

  static const BidRequest_Geo* internal_default_instance();

  void Swap(BidRequest_Geo* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Geo* New() const { return New(NULL); }

  BidRequest_Geo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Geo& from);
  void MergeFrom(const BidRequest_Geo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Geo* other);
  void UnsafeMergeFrom(const BidRequest_Geo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Geo_Coordinate Coordinate;
  typedef BidRequest_Geo_UserLocation UserLocation;

  // accessors -------------------------------------------------------

  // repeated .protocol.baidu.BidRequest.Geo.Coordinate user_coordinate = 1;
  int user_coordinate_size() const;
  void clear_user_coordinate();
  static const int kUserCoordinateFieldNumber = 1;
  const ::protocol::baidu::BidRequest_Geo_Coordinate& user_coordinate(int index) const;
  ::protocol::baidu::BidRequest_Geo_Coordinate* mutable_user_coordinate(int index);
  ::protocol::baidu::BidRequest_Geo_Coordinate* add_user_coordinate();
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Geo_Coordinate >*
      mutable_user_coordinate();
  const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Geo_Coordinate >&
      user_coordinate() const;

  // optional .protocol.baidu.BidRequest.Geo.UserLocation user_location = 2;
  bool has_user_location() const;
  void clear_user_location();
  static const int kUserLocationFieldNumber = 2;
  const ::protocol::baidu::BidRequest_Geo_UserLocation& user_location() const;
  ::protocol::baidu::BidRequest_Geo_UserLocation* mutable_user_location();
  ::protocol::baidu::BidRequest_Geo_UserLocation* release_user_location();
  void set_allocated_user_location(::protocol::baidu::BidRequest_Geo_UserLocation* user_location);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.Geo)
 private:
  inline void set_has_user_location();
  inline void clear_has_user_location();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Geo_Coordinate > user_coordinate_;
  ::protocol::baidu::BidRequest_Geo_UserLocation* user_location_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_Geo> BidRequest_Geo_default_instance_;

// -------------------------------------------------------------------

class BidRequest_Mobile_MobileID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.Mobile.MobileID) */ {
 public:
  BidRequest_Mobile_MobileID();
  virtual ~BidRequest_Mobile_MobileID();

  BidRequest_Mobile_MobileID(const BidRequest_Mobile_MobileID& from);

  inline BidRequest_Mobile_MobileID& operator=(const BidRequest_Mobile_MobileID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile_MobileID& default_instance();

  static const BidRequest_Mobile_MobileID* internal_default_instance();

  void Swap(BidRequest_Mobile_MobileID* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Mobile_MobileID* New() const { return New(NULL); }

  BidRequest_Mobile_MobileID* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile_MobileID& from);
  void MergeFrom(const BidRequest_Mobile_MobileID& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Mobile_MobileID* other);
  void UnsafeMergeFrom(const BidRequest_Mobile_MobileID& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Mobile_MobileID_IDType IDType;
  static const IDType UNKNOWN =
    BidRequest_Mobile_MobileID_IDType_UNKNOWN;
  static const IDType IMEI =
    BidRequest_Mobile_MobileID_IDType_IMEI;
  static const IDType MAC =
    BidRequest_Mobile_MobileID_IDType_MAC;
  static inline bool IDType_IsValid(int value) {
    return BidRequest_Mobile_MobileID_IDType_IsValid(value);
  }
  static const IDType IDType_MIN =
    BidRequest_Mobile_MobileID_IDType_IDType_MIN;
  static const IDType IDType_MAX =
    BidRequest_Mobile_MobileID_IDType_IDType_MAX;
  static const int IDType_ARRAYSIZE =
    BidRequest_Mobile_MobileID_IDType_IDType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  IDType_descriptor() {
    return BidRequest_Mobile_MobileID_IDType_descriptor();
  }
  static inline const ::std::string& IDType_Name(IDType value) {
    return BidRequest_Mobile_MobileID_IDType_Name(value);
  }
  static inline bool IDType_Parse(const ::std::string& name,
      IDType* value) {
    return BidRequest_Mobile_MobileID_IDType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .protocol.baidu.BidRequest.Mobile.MobileID.IDType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::protocol::baidu::BidRequest_Mobile_MobileID_IDType type() const;
  void set_type(::protocol::baidu::BidRequest_Mobile_MobileID_IDType value);

  // optional string id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.Mobile.MobileID)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int type_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_Mobile_MobileID> BidRequest_Mobile_MobileID_default_instance_;

// -------------------------------------------------------------------

class BidRequest_Mobile_DeviceOsVersion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.Mobile.DeviceOsVersion) */ {
 public:
  BidRequest_Mobile_DeviceOsVersion();
  virtual ~BidRequest_Mobile_DeviceOsVersion();

  BidRequest_Mobile_DeviceOsVersion(const BidRequest_Mobile_DeviceOsVersion& from);

  inline BidRequest_Mobile_DeviceOsVersion& operator=(const BidRequest_Mobile_DeviceOsVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile_DeviceOsVersion& default_instance();

  static const BidRequest_Mobile_DeviceOsVersion* internal_default_instance();

  void Swap(BidRequest_Mobile_DeviceOsVersion* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Mobile_DeviceOsVersion* New() const { return New(NULL); }

  BidRequest_Mobile_DeviceOsVersion* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile_DeviceOsVersion& from);
  void MergeFrom(const BidRequest_Mobile_DeviceOsVersion& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Mobile_DeviceOsVersion* other);
  void UnsafeMergeFrom(const BidRequest_Mobile_DeviceOsVersion& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 os_version_major = 1;
  bool has_os_version_major() const;
  void clear_os_version_major();
  static const int kOsVersionMajorFieldNumber = 1;
  ::google::protobuf::int32 os_version_major() const;
  void set_os_version_major(::google::protobuf::int32 value);

  // optional int32 os_version_minor = 2;
  bool has_os_version_minor() const;
  void clear_os_version_minor();
  static const int kOsVersionMinorFieldNumber = 2;
  ::google::protobuf::int32 os_version_minor() const;
  void set_os_version_minor(::google::protobuf::int32 value);

  // optional int32 os_version_micro = 3;
  bool has_os_version_micro() const;
  void clear_os_version_micro();
  static const int kOsVersionMicroFieldNumber = 3;
  ::google::protobuf::int32 os_version_micro() const;
  void set_os_version_micro(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.Mobile.DeviceOsVersion)
 private:
  inline void set_has_os_version_major();
  inline void clear_has_os_version_major();
  inline void set_has_os_version_minor();
  inline void clear_has_os_version_minor();
  inline void set_has_os_version_micro();
  inline void clear_has_os_version_micro();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 os_version_major_;
  ::google::protobuf::int32 os_version_minor_;
  ::google::protobuf::int32 os_version_micro_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_Mobile_DeviceOsVersion> BidRequest_Mobile_DeviceOsVersion_default_instance_;

// -------------------------------------------------------------------

class BidRequest_Mobile_ForAdvertisingID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.Mobile.ForAdvertisingID) */ {
 public:
  BidRequest_Mobile_ForAdvertisingID();
  virtual ~BidRequest_Mobile_ForAdvertisingID();

  BidRequest_Mobile_ForAdvertisingID(const BidRequest_Mobile_ForAdvertisingID& from);

  inline BidRequest_Mobile_ForAdvertisingID& operator=(const BidRequest_Mobile_ForAdvertisingID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile_ForAdvertisingID& default_instance();

  static const BidRequest_Mobile_ForAdvertisingID* internal_default_instance();

  void Swap(BidRequest_Mobile_ForAdvertisingID* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Mobile_ForAdvertisingID* New() const { return New(NULL); }

  BidRequest_Mobile_ForAdvertisingID* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile_ForAdvertisingID& from);
  void MergeFrom(const BidRequest_Mobile_ForAdvertisingID& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Mobile_ForAdvertisingID* other);
  void UnsafeMergeFrom(const BidRequest_Mobile_ForAdvertisingID& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Mobile_ForAdvertisingID_IDType IDType;
  static const IDType UNKNOWN =
    BidRequest_Mobile_ForAdvertisingID_IDType_UNKNOWN;
  static const IDType ANDROID_ID =
    BidRequest_Mobile_ForAdvertisingID_IDType_ANDROID_ID;
  static const IDType IDFA =
    BidRequest_Mobile_ForAdvertisingID_IDType_IDFA;
  static inline bool IDType_IsValid(int value) {
    return BidRequest_Mobile_ForAdvertisingID_IDType_IsValid(value);
  }
  static const IDType IDType_MIN =
    BidRequest_Mobile_ForAdvertisingID_IDType_IDType_MIN;
  static const IDType IDType_MAX =
    BidRequest_Mobile_ForAdvertisingID_IDType_IDType_MAX;
  static const int IDType_ARRAYSIZE =
    BidRequest_Mobile_ForAdvertisingID_IDType_IDType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  IDType_descriptor() {
    return BidRequest_Mobile_ForAdvertisingID_IDType_descriptor();
  }
  static inline const ::std::string& IDType_Name(IDType value) {
    return BidRequest_Mobile_ForAdvertisingID_IDType_Name(value);
  }
  static inline bool IDType_Parse(const ::std::string& name,
      IDType* value) {
    return BidRequest_Mobile_ForAdvertisingID_IDType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .protocol.baidu.BidRequest.Mobile.ForAdvertisingID.IDType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID_IDType type() const;
  void set_type(::protocol::baidu::BidRequest_Mobile_ForAdvertisingID_IDType value);

  // optional string id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.Mobile.ForAdvertisingID)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int type_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_Mobile_ForAdvertisingID> BidRequest_Mobile_ForAdvertisingID_default_instance_;

// -------------------------------------------------------------------

class BidRequest_Mobile_MobileApp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.Mobile.MobileApp) */ {
 public:
  BidRequest_Mobile_MobileApp();
  virtual ~BidRequest_Mobile_MobileApp();

  BidRequest_Mobile_MobileApp(const BidRequest_Mobile_MobileApp& from);

  inline BidRequest_Mobile_MobileApp& operator=(const BidRequest_Mobile_MobileApp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile_MobileApp& default_instance();

  static const BidRequest_Mobile_MobileApp* internal_default_instance();

  void Swap(BidRequest_Mobile_MobileApp* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Mobile_MobileApp* New() const { return New(NULL); }

  BidRequest_Mobile_MobileApp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile_MobileApp& from);
  void MergeFrom(const BidRequest_Mobile_MobileApp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Mobile_MobileApp* other);
  void UnsafeMergeFrom(const BidRequest_Mobile_MobileApp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Mobile_MobileApp_AppInteractionType AppInteractionType;
  static const AppInteractionType TELEPHONE =
    BidRequest_Mobile_MobileApp_AppInteractionType_TELEPHONE;
  static const AppInteractionType DOWNLOAD =
    BidRequest_Mobile_MobileApp_AppInteractionType_DOWNLOAD;
  static const AppInteractionType DEEPLINK =
    BidRequest_Mobile_MobileApp_AppInteractionType_DEEPLINK;
  static inline bool AppInteractionType_IsValid(int value) {
    return BidRequest_Mobile_MobileApp_AppInteractionType_IsValid(value);
  }
  static const AppInteractionType AppInteractionType_MIN =
    BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_MIN;
  static const AppInteractionType AppInteractionType_MAX =
    BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_MAX;
  static const int AppInteractionType_ARRAYSIZE =
    BidRequest_Mobile_MobileApp_AppInteractionType_AppInteractionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AppInteractionType_descriptor() {
    return BidRequest_Mobile_MobileApp_AppInteractionType_descriptor();
  }
  static inline const ::std::string& AppInteractionType_Name(AppInteractionType value) {
    return BidRequest_Mobile_MobileApp_AppInteractionType_Name(value);
  }
  static inline bool AppInteractionType_Parse(const ::std::string& name,
      AppInteractionType* value) {
    return BidRequest_Mobile_MobileApp_AppInteractionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string app_id = 1;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  const ::std::string& app_id() const;
  void set_app_id(const ::std::string& value);
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  ::std::string* mutable_app_id();
  ::std::string* release_app_id();
  void set_allocated_app_id(::std::string* app_id);

  // optional string app_bundle_id = 2;
  bool has_app_bundle_id() const;
  void clear_app_bundle_id();
  static const int kAppBundleIdFieldNumber = 2;
  const ::std::string& app_bundle_id() const;
  void set_app_bundle_id(const ::std::string& value);
  void set_app_bundle_id(const char* value);
  void set_app_bundle_id(const char* value, size_t size);
  ::std::string* mutable_app_bundle_id();
  ::std::string* release_app_bundle_id();
  void set_allocated_app_bundle_id(::std::string* app_bundle_id);

  // optional int32 app_category = 3;
  bool has_app_category() const;
  void clear_app_category();
  static const int kAppCategoryFieldNumber = 3;
  ::google::protobuf::int32 app_category() const;
  void set_app_category(::google::protobuf::int32 value);

  // optional int32 app_publisher_id = 4;
  bool has_app_publisher_id() const;
  void clear_app_publisher_id();
  static const int kAppPublisherIdFieldNumber = 4;
  ::google::protobuf::int32 app_publisher_id() const;
  void set_app_publisher_id(::google::protobuf::int32 value);

  // repeated .protocol.baidu.BidRequest.Mobile.MobileApp.AppInteractionType app_interaction_type = 5;
  int app_interaction_type_size() const;
  void clear_app_interaction_type();
  static const int kAppInteractionTypeFieldNumber = 5;
  ::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType app_interaction_type(int index) const;
  void set_app_interaction_type(int index, ::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType value);
  void add_app_interaction_type(::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType value);
  const ::google::protobuf::RepeatedField<int>& app_interaction_type() const;
  ::google::protobuf::RepeatedField<int>* mutable_app_interaction_type();

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.Mobile.MobileApp)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_app_bundle_id();
  inline void clear_has_app_bundle_id();
  inline void set_has_app_category();
  inline void clear_has_app_category();
  inline void set_has_app_publisher_id();
  inline void clear_has_app_publisher_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> app_interaction_type_;
  ::google::protobuf::internal::ArenaStringPtr app_id_;
  ::google::protobuf::internal::ArenaStringPtr app_bundle_id_;
  ::google::protobuf::int32 app_category_;
  ::google::protobuf::int32 app_publisher_id_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_Mobile_MobileApp> BidRequest_Mobile_MobileApp_default_instance_;

// -------------------------------------------------------------------

class BidRequest_Mobile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.Mobile) */ {
 public:
  BidRequest_Mobile();
  virtual ~BidRequest_Mobile();

  BidRequest_Mobile(const BidRequest_Mobile& from);

  inline BidRequest_Mobile& operator=(const BidRequest_Mobile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Mobile& default_instance();

  static const BidRequest_Mobile* internal_default_instance();

  void Swap(BidRequest_Mobile* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Mobile* New() const { return New(NULL); }

  BidRequest_Mobile* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Mobile& from);
  void MergeFrom(const BidRequest_Mobile& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Mobile* other);
  void UnsafeMergeFrom(const BidRequest_Mobile& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_Mobile_MobileID MobileID;
  typedef BidRequest_Mobile_DeviceOsVersion DeviceOsVersion;
  typedef BidRequest_Mobile_ForAdvertisingID ForAdvertisingID;
  typedef BidRequest_Mobile_MobileApp MobileApp;

  typedef BidRequest_Mobile_MobileDeviceType MobileDeviceType;
  static const MobileDeviceType UNKNOWN_DEVICE =
    BidRequest_Mobile_MobileDeviceType_UNKNOWN_DEVICE;
  static const MobileDeviceType HIGHEND_PHONE =
    BidRequest_Mobile_MobileDeviceType_HIGHEND_PHONE;
  static const MobileDeviceType TABLET =
    BidRequest_Mobile_MobileDeviceType_TABLET;
  static inline bool MobileDeviceType_IsValid(int value) {
    return BidRequest_Mobile_MobileDeviceType_IsValid(value);
  }
  static const MobileDeviceType MobileDeviceType_MIN =
    BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MIN;
  static const MobileDeviceType MobileDeviceType_MAX =
    BidRequest_Mobile_MobileDeviceType_MobileDeviceType_MAX;
  static const int MobileDeviceType_ARRAYSIZE =
    BidRequest_Mobile_MobileDeviceType_MobileDeviceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MobileDeviceType_descriptor() {
    return BidRequest_Mobile_MobileDeviceType_descriptor();
  }
  static inline const ::std::string& MobileDeviceType_Name(MobileDeviceType value) {
    return BidRequest_Mobile_MobileDeviceType_Name(value);
  }
  static inline bool MobileDeviceType_Parse(const ::std::string& name,
      MobileDeviceType* value) {
    return BidRequest_Mobile_MobileDeviceType_Parse(name, value);
  }

  typedef BidRequest_Mobile_OS OS;
  static const OS UNKNOWN_OS =
    BidRequest_Mobile_OS_UNKNOWN_OS;
  static const OS IOS =
    BidRequest_Mobile_OS_IOS;
  static const OS ANDROID =
    BidRequest_Mobile_OS_ANDROID;
  static const OS WINDOWS_PHONE =
    BidRequest_Mobile_OS_WINDOWS_PHONE;
  static inline bool OS_IsValid(int value) {
    return BidRequest_Mobile_OS_IsValid(value);
  }
  static const OS OS_MIN =
    BidRequest_Mobile_OS_OS_MIN;
  static const OS OS_MAX =
    BidRequest_Mobile_OS_OS_MAX;
  static const int OS_ARRAYSIZE =
    BidRequest_Mobile_OS_OS_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OS_descriptor() {
    return BidRequest_Mobile_OS_descriptor();
  }
  static inline const ::std::string& OS_Name(OS value) {
    return BidRequest_Mobile_OS_Name(value);
  }
  static inline bool OS_Parse(const ::std::string& name,
      OS* value) {
    return BidRequest_Mobile_OS_Parse(name, value);
  }

  typedef BidRequest_Mobile_WirelessNetworkType WirelessNetworkType;
  static const WirelessNetworkType UNKNOWN_NETWORK =
    BidRequest_Mobile_WirelessNetworkType_UNKNOWN_NETWORK;
  static const WirelessNetworkType WIFI =
    BidRequest_Mobile_WirelessNetworkType_WIFI;
  static const WirelessNetworkType MOBILE_2G =
    BidRequest_Mobile_WirelessNetworkType_MOBILE_2G;
  static const WirelessNetworkType MOBILE_3G =
    BidRequest_Mobile_WirelessNetworkType_MOBILE_3G;
  static const WirelessNetworkType MOBILE_4G =
    BidRequest_Mobile_WirelessNetworkType_MOBILE_4G;
  static inline bool WirelessNetworkType_IsValid(int value) {
    return BidRequest_Mobile_WirelessNetworkType_IsValid(value);
  }
  static const WirelessNetworkType WirelessNetworkType_MIN =
    BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_MIN;
  static const WirelessNetworkType WirelessNetworkType_MAX =
    BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_MAX;
  static const int WirelessNetworkType_ARRAYSIZE =
    BidRequest_Mobile_WirelessNetworkType_WirelessNetworkType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  WirelessNetworkType_descriptor() {
    return BidRequest_Mobile_WirelessNetworkType_descriptor();
  }
  static inline const ::std::string& WirelessNetworkType_Name(WirelessNetworkType value) {
    return BidRequest_Mobile_WirelessNetworkType_Name(value);
  }
  static inline bool WirelessNetworkType_Parse(const ::std::string& name,
      WirelessNetworkType* value) {
    return BidRequest_Mobile_WirelessNetworkType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string DEPRECATED_device_id = 1;
  bool has_deprecated_device_id() const;
  void clear_deprecated_device_id();
  static const int kDEPRECATEDDeviceIdFieldNumber = 1;
  const ::std::string& deprecated_device_id() const;
  void set_deprecated_device_id(const ::std::string& value);
  void set_deprecated_device_id(const char* value);
  void set_deprecated_device_id(const char* value, size_t size);
  ::std::string* mutable_deprecated_device_id();
  ::std::string* release_deprecated_device_id();
  void set_allocated_deprecated_device_id(::std::string* deprecated_device_id);

  // repeated .protocol.baidu.BidRequest.Mobile.MobileID id = 13;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 13;
  const ::protocol::baidu::BidRequest_Mobile_MobileID& id(int index) const;
  ::protocol::baidu::BidRequest_Mobile_MobileID* mutable_id(int index);
  ::protocol::baidu::BidRequest_Mobile_MobileID* add_id();
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Mobile_MobileID >*
      mutable_id();
  const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Mobile_MobileID >&
      id() const;

  // optional .protocol.baidu.BidRequest.Mobile.MobileDeviceType device_type = 2;
  bool has_device_type() const;
  void clear_device_type();
  static const int kDeviceTypeFieldNumber = 2;
  ::protocol::baidu::BidRequest_Mobile_MobileDeviceType device_type() const;
  void set_device_type(::protocol::baidu::BidRequest_Mobile_MobileDeviceType value);

  // optional .protocol.baidu.BidRequest.Mobile.OS platform = 3 [default = UNKNOWN_OS];
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 3;
  ::protocol::baidu::BidRequest_Mobile_OS platform() const;
  void set_platform(::protocol::baidu::BidRequest_Mobile_OS value);

  // optional .protocol.baidu.BidRequest.Mobile.DeviceOsVersion os_version = 4;
  bool has_os_version() const;
  void clear_os_version();
  static const int kOsVersionFieldNumber = 4;
  const ::protocol::baidu::BidRequest_Mobile_DeviceOsVersion& os_version() const;
  ::protocol::baidu::BidRequest_Mobile_DeviceOsVersion* mutable_os_version();
  ::protocol::baidu::BidRequest_Mobile_DeviceOsVersion* release_os_version();
  void set_allocated_os_version(::protocol::baidu::BidRequest_Mobile_DeviceOsVersion* os_version);

  // optional string brand = 5;
  bool has_brand() const;
  void clear_brand();
  static const int kBrandFieldNumber = 5;
  const ::std::string& brand() const;
  void set_brand(const ::std::string& value);
  void set_brand(const char* value);
  void set_brand(const char* value, size_t size);
  ::std::string* mutable_brand();
  ::std::string* release_brand();
  void set_allocated_brand(::std::string* brand);

  // optional string model = 6;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 6;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // optional int32 screen_width = 7;
  bool has_screen_width() const;
  void clear_screen_width();
  static const int kScreenWidthFieldNumber = 7;
  ::google::protobuf::int32 screen_width() const;
  void set_screen_width(::google::protobuf::int32 value);

  // optional int32 screen_height = 8;
  bool has_screen_height() const;
  void clear_screen_height();
  static const int kScreenHeightFieldNumber = 8;
  ::google::protobuf::int32 screen_height() const;
  void set_screen_height(::google::protobuf::int32 value);

  // optional float screen_density = 15;
  bool has_screen_density() const;
  void clear_screen_density();
  static const int kScreenDensityFieldNumber = 15;
  float screen_density() const;
  void set_screen_density(float value);

  // optional int64 carrier_id = 9;
  bool has_carrier_id() const;
  void clear_carrier_id();
  static const int kCarrierIdFieldNumber = 9;
  ::google::protobuf::int64 carrier_id() const;
  void set_carrier_id(::google::protobuf::int64 value);

  // optional .protocol.baidu.BidRequest.Mobile.WirelessNetworkType wireless_network_type = 10;
  bool has_wireless_network_type() const;
  void clear_wireless_network_type();
  static const int kWirelessNetworkTypeFieldNumber = 10;
  ::protocol::baidu::BidRequest_Mobile_WirelessNetworkType wireless_network_type() const;
  void set_wireless_network_type(::protocol::baidu::BidRequest_Mobile_WirelessNetworkType value);

  // optional string DEPRECATED_for_advertising_id = 11;
  bool has_deprecated_for_advertising_id() const;
  void clear_deprecated_for_advertising_id();
  static const int kDEPRECATEDForAdvertisingIdFieldNumber = 11;
  const ::std::string& deprecated_for_advertising_id() const;
  void set_deprecated_for_advertising_id(const ::std::string& value);
  void set_deprecated_for_advertising_id(const char* value);
  void set_deprecated_for_advertising_id(const char* value, size_t size);
  ::std::string* mutable_deprecated_for_advertising_id();
  ::std::string* release_deprecated_for_advertising_id();
  void set_allocated_deprecated_for_advertising_id(::std::string* deprecated_for_advertising_id);

  // repeated .protocol.baidu.BidRequest.Mobile.ForAdvertisingID for_advertising_id = 14;
  int for_advertising_id_size() const;
  void clear_for_advertising_id();
  static const int kForAdvertisingIdFieldNumber = 14;
  const ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID& for_advertising_id(int index) const;
  ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID* mutable_for_advertising_id(int index);
  ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID* add_for_advertising_id();
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID >*
      mutable_for_advertising_id();
  const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID >&
      for_advertising_id() const;

  // optional .protocol.baidu.BidRequest.Mobile.MobileApp mobile_app = 12;
  bool has_mobile_app() const;
  void clear_mobile_app();
  static const int kMobileAppFieldNumber = 12;
  const ::protocol::baidu::BidRequest_Mobile_MobileApp& mobile_app() const;
  ::protocol::baidu::BidRequest_Mobile_MobileApp* mutable_mobile_app();
  ::protocol::baidu::BidRequest_Mobile_MobileApp* release_mobile_app();
  void set_allocated_mobile_app(::protocol::baidu::BidRequest_Mobile_MobileApp* mobile_app);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.Mobile)
 private:
  inline void set_has_deprecated_device_id();
  inline void clear_has_deprecated_device_id();
  inline void set_has_device_type();
  inline void clear_has_device_type();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_os_version();
  inline void clear_has_os_version();
  inline void set_has_brand();
  inline void clear_has_brand();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_screen_width();
  inline void clear_has_screen_width();
  inline void set_has_screen_height();
  inline void clear_has_screen_height();
  inline void set_has_screen_density();
  inline void clear_has_screen_density();
  inline void set_has_carrier_id();
  inline void clear_has_carrier_id();
  inline void set_has_wireless_network_type();
  inline void clear_has_wireless_network_type();
  inline void set_has_deprecated_for_advertising_id();
  inline void clear_has_deprecated_for_advertising_id();
  inline void set_has_mobile_app();
  inline void clear_has_mobile_app();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Mobile_MobileID > id_;
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID > for_advertising_id_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_device_id_;
  ::google::protobuf::internal::ArenaStringPtr brand_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_for_advertising_id_;
  ::protocol::baidu::BidRequest_Mobile_DeviceOsVersion* os_version_;
  ::protocol::baidu::BidRequest_Mobile_MobileApp* mobile_app_;
  int device_type_;
  int platform_;
  ::google::protobuf::int32 screen_width_;
  ::google::protobuf::int32 screen_height_;
  ::google::protobuf::int64 carrier_id_;
  float screen_density_;
  int wireless_network_type_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_Mobile> BidRequest_Mobile_default_instance_;

// -------------------------------------------------------------------

class BidRequest_Video : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.Video) */ {
 public:
  BidRequest_Video();
  virtual ~BidRequest_Video();

  BidRequest_Video(const BidRequest_Video& from);

  inline BidRequest_Video& operator=(const BidRequest_Video& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_Video& default_instance();

  static const BidRequest_Video* internal_default_instance();

  void Swap(BidRequest_Video* other);

  // implements Message ----------------------------------------------

  inline BidRequest_Video* New() const { return New(NULL); }

  BidRequest_Video* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_Video& from);
  void MergeFrom(const BidRequest_Video& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_Video* other);
  void UnsafeMergeFrom(const BidRequest_Video& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string title = 1;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // repeated string tags = 2;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 2;
  const ::std::string& tags(int index) const;
  ::std::string* mutable_tags(int index);
  void set_tags(int index, const ::std::string& value);
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  ::std::string* add_tags();
  void add_tags(const ::std::string& value);
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tags();

  // optional int32 content_length = 3;
  bool has_content_length() const;
  void clear_content_length();
  static const int kContentLengthFieldNumber = 3;
  ::google::protobuf::int32 content_length() const;
  void set_content_length(::google::protobuf::int32 value);

  // repeated int64 channel_id = 4;
  int channel_id_size() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 4;
  ::google::protobuf::int64 channel_id(int index) const;
  void set_channel_id(int index, ::google::protobuf::int64 value);
  void add_channel_id(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      channel_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_channel_id();

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.Video)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_content_length();
  inline void clear_has_content_length();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tags_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > channel_id_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::int32 content_length_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_Video> BidRequest_Video_default_instance_;

// -------------------------------------------------------------------

class BidRequest_AdSlot_VideoInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.AdSlot.VideoInfo) */ {
 public:
  BidRequest_AdSlot_VideoInfo();
  virtual ~BidRequest_AdSlot_VideoInfo();

  BidRequest_AdSlot_VideoInfo(const BidRequest_AdSlot_VideoInfo& from);

  inline BidRequest_AdSlot_VideoInfo& operator=(const BidRequest_AdSlot_VideoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_VideoInfo& default_instance();

  static const BidRequest_AdSlot_VideoInfo* internal_default_instance();

  void Swap(BidRequest_AdSlot_VideoInfo* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_VideoInfo* New() const { return New(NULL); }

  BidRequest_AdSlot_VideoInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_VideoInfo& from);
  void MergeFrom(const BidRequest_AdSlot_VideoInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_VideoInfo* other);
  void UnsafeMergeFrom(const BidRequest_AdSlot_VideoInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 max_video_duration = 1;
  bool has_max_video_duration() const;
  void clear_max_video_duration();
  static const int kMaxVideoDurationFieldNumber = 1;
  ::google::protobuf::int32 max_video_duration() const;
  void set_max_video_duration(::google::protobuf::int32 value);

  // optional int32 min_video_duration = 2;
  bool has_min_video_duration() const;
  void clear_min_video_duration();
  static const int kMinVideoDurationFieldNumber = 2;
  ::google::protobuf::int32 min_video_duration() const;
  void set_min_video_duration(::google::protobuf::int32 value);

  // optional int32 video_start_delay = 3;
  bool has_video_start_delay() const;
  void clear_video_start_delay();
  static const int kVideoStartDelayFieldNumber = 3;
  ::google::protobuf::int32 video_start_delay() const;
  void set_video_start_delay(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.AdSlot.VideoInfo)
 private:
  inline void set_has_max_video_duration();
  inline void clear_has_max_video_duration();
  inline void set_has_min_video_duration();
  inline void clear_has_min_video_duration();
  inline void set_has_video_start_delay();
  inline void clear_has_video_start_delay();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 max_video_duration_;
  ::google::protobuf::int32 min_video_duration_;
  ::google::protobuf::int32 video_start_delay_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_AdSlot_VideoInfo> BidRequest_AdSlot_VideoInfo_default_instance_;

// -------------------------------------------------------------------

class BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword) */ {
 public:
  BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword();
  virtual ~BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword();

  BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword(const BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword& from);

  inline BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword& operator=(const BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword& default_instance();

  static const BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword* internal_default_instance();

  void Swap(BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword* New() const { return New(NULL); }

  BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword& from);
  void MergeFrom(const BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword* other);
  void UnsafeMergeFrom(const BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional float pctr1 = 2;
  bool has_pctr1() const;
  void clear_pctr1();
  static const int kPctr1FieldNumber = 2;
  float pctr1() const;
  void set_pctr1(float value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword)
 private:
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_pctr1();
  inline void clear_has_pctr1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  float pctr1_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword> BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword_default_instance_;

// -------------------------------------------------------------------

class BidRequest_AdSlot_LinkUnitInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo) */ {
 public:
  BidRequest_AdSlot_LinkUnitInfo();
  virtual ~BidRequest_AdSlot_LinkUnitInfo();

  BidRequest_AdSlot_LinkUnitInfo(const BidRequest_AdSlot_LinkUnitInfo& from);

  inline BidRequest_AdSlot_LinkUnitInfo& operator=(const BidRequest_AdSlot_LinkUnitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_LinkUnitInfo& default_instance();

  static const BidRequest_AdSlot_LinkUnitInfo* internal_default_instance();

  void Swap(BidRequest_AdSlot_LinkUnitInfo* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_LinkUnitInfo* New() const { return New(NULL); }

  BidRequest_AdSlot_LinkUnitInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_LinkUnitInfo& from);
  void MergeFrom(const BidRequest_AdSlot_LinkUnitInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_LinkUnitInfo* other);
  void UnsafeMergeFrom(const BidRequest_AdSlot_LinkUnitInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword ProposedKeyword;

  // accessors -------------------------------------------------------

  // repeated int32 style_type = 1;
  int style_type_size() const;
  void clear_style_type();
  static const int kStyleTypeFieldNumber = 1;
  ::google::protobuf::int32 style_type(int index) const;
  void set_style_type(int index, ::google::protobuf::int32 value);
  void add_style_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      style_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_style_type();

  // optional int32 req_keyword_num = 2;
  bool has_req_keyword_num() const;
  void clear_req_keyword_num();
  static const int kReqKeywordNumFieldNumber = 2;
  ::google::protobuf::int32 req_keyword_num() const;
  void set_req_keyword_num(::google::protobuf::int32 value);

  // repeated string proposed_keyword = 3;
  int proposed_keyword_size() const;
  void clear_proposed_keyword();
  static const int kProposedKeywordFieldNumber = 3;
  const ::std::string& proposed_keyword(int index) const;
  ::std::string* mutable_proposed_keyword(int index);
  void set_proposed_keyword(int index, const ::std::string& value);
  void set_proposed_keyword(int index, const char* value);
  void set_proposed_keyword(int index, const char* value, size_t size);
  ::std::string* add_proposed_keyword();
  void add_proposed_keyword(const ::std::string& value);
  void add_proposed_keyword(const char* value);
  void add_proposed_keyword(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& proposed_keyword() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_proposed_keyword();

  // repeated .protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword keywords = 4;
  int keywords_size() const;
  void clear_keywords();
  static const int kKeywordsFieldNumber = 4;
  const ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword& keywords(int index) const;
  ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword* mutable_keywords(int index);
  ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword* add_keywords();
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword >*
      mutable_keywords();
  const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword >&
      keywords() const;

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo)
 private:
  inline void set_has_req_keyword_num();
  inline void clear_has_req_keyword_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > style_type_;
  ::google::protobuf::RepeatedPtrField< ::std::string> proposed_keyword_;
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword > keywords_;
  ::google::protobuf::int32 req_keyword_num_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_AdSlot_LinkUnitInfo> BidRequest_AdSlot_LinkUnitInfo_default_instance_;

// -------------------------------------------------------------------

class BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder) */ {
 public:
  BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder();
  virtual ~BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder();

  BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder(const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& from);

  inline BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& operator=(const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& default_instance();

  static const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* internal_default_instance();

  void Swap(BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* New() const { return New(NULL); }

  BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& from);
  void MergeFrom(const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* other);
  void UnsafeMergeFrom(const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string order_id = 1;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  const ::std::string& order_id() const;
  void set_order_id(const ::std::string& value);
  void set_order_id(const char* value);
  void set_order_id(const char* value, size_t size);
  ::std::string* mutable_order_id();
  ::std::string* release_order_id();
  void set_allocated_order_id(::std::string* order_id);

  // optional int64 fixed_cpm = 2;
  bool has_fixed_cpm() const;
  void clear_fixed_cpm();
  static const int kFixedCpmFieldNumber = 2;
  ::google::protobuf::int64 fixed_cpm() const;
  void set_fixed_cpm(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder)
 private:
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_fixed_cpm();
  inline void clear_has_fixed_cpm();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr order_id_;
  ::google::protobuf::int64 fixed_cpm_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder> BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder_default_instance_;

// -------------------------------------------------------------------

class BidRequest_AdSlot_PreferredOrderInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo) */ {
 public:
  BidRequest_AdSlot_PreferredOrderInfo();
  virtual ~BidRequest_AdSlot_PreferredOrderInfo();

  BidRequest_AdSlot_PreferredOrderInfo(const BidRequest_AdSlot_PreferredOrderInfo& from);

  inline BidRequest_AdSlot_PreferredOrderInfo& operator=(const BidRequest_AdSlot_PreferredOrderInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_PreferredOrderInfo& default_instance();

  static const BidRequest_AdSlot_PreferredOrderInfo* internal_default_instance();

  void Swap(BidRequest_AdSlot_PreferredOrderInfo* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_PreferredOrderInfo* New() const { return New(NULL); }

  BidRequest_AdSlot_PreferredOrderInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_PreferredOrderInfo& from);
  void MergeFrom(const BidRequest_AdSlot_PreferredOrderInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_PreferredOrderInfo* other);
  void UnsafeMergeFrom(const BidRequest_AdSlot_PreferredOrderInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder PreferredOrder;

  // accessors -------------------------------------------------------

  // repeated .protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder preferred_orders = 1;
  int preferred_orders_size() const;
  void clear_preferred_orders();
  static const int kPreferredOrdersFieldNumber = 1;
  const ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& preferred_orders(int index) const;
  ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* mutable_preferred_orders(int index);
  ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* add_preferred_orders();
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder >*
      mutable_preferred_orders();
  const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder >&
      preferred_orders() const;

  // optional bool allow_auction = 2 [default = true];
  bool has_allow_auction() const;
  void clear_allow_auction();
  static const int kAllowAuctionFieldNumber = 2;
  bool allow_auction() const;
  void set_allow_auction(bool value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo)
 private:
  inline void set_has_allow_auction();
  inline void clear_has_allow_auction();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder > preferred_orders_;
  bool allow_auction_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_AdSlot_PreferredOrderInfo> BidRequest_AdSlot_PreferredOrderInfo_default_instance_;

// -------------------------------------------------------------------

class BidRequest_AdSlot_GuaranteedOrder_Charge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.Charge) */ {
 public:
  BidRequest_AdSlot_GuaranteedOrder_Charge();
  virtual ~BidRequest_AdSlot_GuaranteedOrder_Charge();

  BidRequest_AdSlot_GuaranteedOrder_Charge(const BidRequest_AdSlot_GuaranteedOrder_Charge& from);

  inline BidRequest_AdSlot_GuaranteedOrder_Charge& operator=(const BidRequest_AdSlot_GuaranteedOrder_Charge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_GuaranteedOrder_Charge& default_instance();

  static const BidRequest_AdSlot_GuaranteedOrder_Charge* internal_default_instance();

  void Swap(BidRequest_AdSlot_GuaranteedOrder_Charge* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_GuaranteedOrder_Charge* New() const { return New(NULL); }

  BidRequest_AdSlot_GuaranteedOrder_Charge* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_GuaranteedOrder_Charge& from);
  void MergeFrom(const BidRequest_AdSlot_GuaranteedOrder_Charge& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_GuaranteedOrder_Charge* other);
  void UnsafeMergeFrom(const BidRequest_AdSlot_GuaranteedOrder_Charge& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType ChargeType;
  static const ChargeType CHARGE_GD_CPM =
    BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_CHARGE_GD_CPM;
  static inline bool ChargeType_IsValid(int value) {
    return BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_IsValid(value);
  }
  static const ChargeType ChargeType_MIN =
    BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_ChargeType_MIN;
  static const ChargeType ChargeType_MAX =
    BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_ChargeType_MAX;
  static const int ChargeType_ARRAYSIZE =
    BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_ChargeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ChargeType_descriptor() {
    return BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_descriptor();
  }
  static inline const ::std::string& ChargeType_Name(ChargeType value) {
    return BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_Name(value);
  }
  static inline bool ChargeType_Parse(const ::std::string& name,
      ChargeType* value) {
    return BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 price = 1;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 1;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // optional .protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.Charge.ChargeType charge_mode = 2 [default = CHARGE_GD_CPM];
  bool has_charge_mode() const;
  void clear_charge_mode();
  static const int kChargeModeFieldNumber = 2;
  ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType charge_mode() const;
  void set_charge_mode(::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.Charge)
 private:
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_charge_mode();
  inline void clear_has_charge_mode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 price_;
  int charge_mode_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_AdSlot_GuaranteedOrder_Charge> BidRequest_AdSlot_GuaranteedOrder_Charge_default_instance_;

// -------------------------------------------------------------------

class BidRequest_AdSlot_GuaranteedOrder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder) */ {
 public:
  BidRequest_AdSlot_GuaranteedOrder();
  virtual ~BidRequest_AdSlot_GuaranteedOrder();

  BidRequest_AdSlot_GuaranteedOrder(const BidRequest_AdSlot_GuaranteedOrder& from);

  inline BidRequest_AdSlot_GuaranteedOrder& operator=(const BidRequest_AdSlot_GuaranteedOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_GuaranteedOrder& default_instance();

  static const BidRequest_AdSlot_GuaranteedOrder* internal_default_instance();

  void Swap(BidRequest_AdSlot_GuaranteedOrder* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_GuaranteedOrder* New() const { return New(NULL); }

  BidRequest_AdSlot_GuaranteedOrder* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_GuaranteedOrder& from);
  void MergeFrom(const BidRequest_AdSlot_GuaranteedOrder& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_GuaranteedOrder* other);
  void UnsafeMergeFrom(const BidRequest_AdSlot_GuaranteedOrder& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_GuaranteedOrder_Charge Charge;

  // accessors -------------------------------------------------------

  // optional uint32 order_id = 1;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  ::google::protobuf::uint32 order_id() const;
  void set_order_id(::google::protobuf::uint32 value);

  // optional .protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.Charge charge = 2;
  bool has_charge() const;
  void clear_charge();
  static const int kChargeFieldNumber = 2;
  const ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge& charge() const;
  ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge* mutable_charge();
  ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge* release_charge();
  void set_allocated_charge(::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge* charge);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder)
 private:
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_charge();
  inline void clear_has_charge();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge* charge_;
  ::google::protobuf::uint32 order_id_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_AdSlot_GuaranteedOrder> BidRequest_AdSlot_GuaranteedOrder_default_instance_;

// -------------------------------------------------------------------

class BidRequest_AdSlot_ExpandCreativeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo) */ {
 public:
  BidRequest_AdSlot_ExpandCreativeInfo();
  virtual ~BidRequest_AdSlot_ExpandCreativeInfo();

  BidRequest_AdSlot_ExpandCreativeInfo(const BidRequest_AdSlot_ExpandCreativeInfo& from);

  inline BidRequest_AdSlot_ExpandCreativeInfo& operator=(const BidRequest_AdSlot_ExpandCreativeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_ExpandCreativeInfo& default_instance();

  static const BidRequest_AdSlot_ExpandCreativeInfo* internal_default_instance();

  void Swap(BidRequest_AdSlot_ExpandCreativeInfo* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_ExpandCreativeInfo* New() const { return New(NULL); }

  BidRequest_AdSlot_ExpandCreativeInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_ExpandCreativeInfo& from);
  void MergeFrom(const BidRequest_AdSlot_ExpandCreativeInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_ExpandCreativeInfo* other);
  void UnsafeMergeFrom(const BidRequest_AdSlot_ExpandCreativeInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_ExpandCreativeInfo_ActionType ActionType;
  static const ActionType HOVER =
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_HOVER;
  static const ActionType CLICK =
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_CLICK;
  static const ActionType LOAD =
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_LOAD;
  static inline bool ActionType_IsValid(int value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_ActionType_IsValid(value);
  }
  static const ActionType ActionType_MIN =
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_MIN;
  static const ActionType ActionType_MAX =
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_MAX;
  static const int ActionType_ARRAYSIZE =
    BidRequest_AdSlot_ExpandCreativeInfo_ActionType_ActionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActionType_descriptor() {
    return BidRequest_AdSlot_ExpandCreativeInfo_ActionType_descriptor();
  }
  static inline const ::std::string& ActionType_Name(ActionType value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_ActionType_Name(value);
  }
  static inline bool ActionType_Parse(const ::std::string& name,
      ActionType* value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_ActionType_Parse(name, value);
  }

  typedef BidRequest_AdSlot_ExpandCreativeInfo_Direction Direction;
  static const Direction EXPAND_NONE =
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_NONE;
  static const Direction EXPAND_UP =
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_UP;
  static const Direction EXPAND_DOWN =
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_DOWN;
  static const Direction EXPAND_LEFT =
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_LEFT;
  static const Direction EXPAND_RIGHT =
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_EXPAND_RIGHT;
  static inline bool Direction_IsValid(int value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_Direction_IsValid(value);
  }
  static const Direction Direction_MIN =
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_MIN;
  static const Direction Direction_MAX =
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_MAX;
  static const int Direction_ARRAYSIZE =
    BidRequest_AdSlot_ExpandCreativeInfo_Direction_Direction_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Direction_descriptor() {
    return BidRequest_AdSlot_ExpandCreativeInfo_Direction_descriptor();
  }
  static inline const ::std::string& Direction_Name(Direction value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_Direction_Name(value);
  }
  static inline bool Direction_Parse(const ::std::string& name,
      Direction* value) {
    return BidRequest_AdSlot_ExpandCreativeInfo_Direction_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.ActionType expand_action_type = 1;
  int expand_action_type_size() const;
  void clear_expand_action_type();
  static const int kExpandActionTypeFieldNumber = 1;
  ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType expand_action_type(int index) const;
  void set_expand_action_type(int index, ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType value);
  void add_expand_action_type(::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType value);
  const ::google::protobuf::RepeatedField<int>& expand_action_type() const;
  ::google::protobuf::RepeatedField<int>* mutable_expand_action_type();

  // optional .protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.Direction expand_direction = 2;
  bool has_expand_direction() const;
  void clear_expand_direction();
  static const int kExpandDirectionFieldNumber = 2;
  ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_Direction expand_direction() const;
  void set_expand_direction(::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_Direction value);

  // repeated int32 expand_creative_type = 3 [packed = true];
  int expand_creative_type_size() const;
  void clear_expand_creative_type();
  static const int kExpandCreativeTypeFieldNumber = 3;
  ::google::protobuf::int32 expand_creative_type(int index) const;
  void set_expand_creative_type(int index, ::google::protobuf::int32 value);
  void add_expand_creative_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      expand_creative_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_expand_creative_type();

  // optional int32 expand_width = 4;
  bool has_expand_width() const;
  void clear_expand_width();
  static const int kExpandWidthFieldNumber = 4;
  ::google::protobuf::int32 expand_width() const;
  void set_expand_width(::google::protobuf::int32 value);

  // optional int32 expand_height = 5;
  bool has_expand_height() const;
  void clear_expand_height();
  static const int kExpandHeightFieldNumber = 5;
  ::google::protobuf::int32 expand_height() const;
  void set_expand_height(::google::protobuf::int32 value);

  // optional int32 expand_duration = 6;
  bool has_expand_duration() const;
  void clear_expand_duration();
  static const int kExpandDurationFieldNumber = 6;
  ::google::protobuf::int32 expand_duration() const;
  void set_expand_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo)
 private:
  inline void set_has_expand_direction();
  inline void clear_has_expand_direction();
  inline void set_has_expand_width();
  inline void clear_has_expand_width();
  inline void set_has_expand_height();
  inline void clear_has_expand_height();
  inline void set_has_expand_duration();
  inline void clear_has_expand_duration();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> expand_action_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > expand_creative_type_;
  mutable int _expand_creative_type_cached_byte_size_;
  int expand_direction_;
  ::google::protobuf::int32 expand_width_;
  ::google::protobuf::int32 expand_height_;
  ::google::protobuf::int32 expand_duration_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_AdSlot_ExpandCreativeInfo> BidRequest_AdSlot_ExpandCreativeInfo_default_instance_;

// -------------------------------------------------------------------

class BidRequest_AdSlot_NativeAdParam_ImageEle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle) */ {
 public:
  BidRequest_AdSlot_NativeAdParam_ImageEle();
  virtual ~BidRequest_AdSlot_NativeAdParam_ImageEle();

  BidRequest_AdSlot_NativeAdParam_ImageEle(const BidRequest_AdSlot_NativeAdParam_ImageEle& from);

  inline BidRequest_AdSlot_NativeAdParam_ImageEle& operator=(const BidRequest_AdSlot_NativeAdParam_ImageEle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_NativeAdParam_ImageEle& default_instance();

  static const BidRequest_AdSlot_NativeAdParam_ImageEle* internal_default_instance();

  void Swap(BidRequest_AdSlot_NativeAdParam_ImageEle* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_NativeAdParam_ImageEle* New() const { return New(NULL); }

  BidRequest_AdSlot_NativeAdParam_ImageEle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_NativeAdParam_ImageEle& from);
  void MergeFrom(const BidRequest_AdSlot_NativeAdParam_ImageEle& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_NativeAdParam_ImageEle* other);
  void UnsafeMergeFrom(const BidRequest_AdSlot_NativeAdParam_ImageEle& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 width = 1;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional int32 shape = 3 [default = 0];
  bool has_shape() const;
  void clear_shape();
  static const int kShapeFieldNumber = 3;
  ::google::protobuf::int32 shape() const;
  void set_shape(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_shape();
  inline void clear_has_shape();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 shape_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_AdSlot_NativeAdParam_ImageEle> BidRequest_AdSlot_NativeAdParam_ImageEle_default_instance_;

// -------------------------------------------------------------------

class BidRequest_AdSlot_NativeAdParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.AdSlot.NativeAdParam) */ {
 public:
  BidRequest_AdSlot_NativeAdParam();
  virtual ~BidRequest_AdSlot_NativeAdParam();

  BidRequest_AdSlot_NativeAdParam(const BidRequest_AdSlot_NativeAdParam& from);

  inline BidRequest_AdSlot_NativeAdParam& operator=(const BidRequest_AdSlot_NativeAdParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot_NativeAdParam& default_instance();

  static const BidRequest_AdSlot_NativeAdParam* internal_default_instance();

  void Swap(BidRequest_AdSlot_NativeAdParam* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot_NativeAdParam* New() const { return New(NULL); }

  BidRequest_AdSlot_NativeAdParam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot_NativeAdParam& from);
  void MergeFrom(const BidRequest_AdSlot_NativeAdParam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot_NativeAdParam* other);
  void UnsafeMergeFrom(const BidRequest_AdSlot_NativeAdParam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_NativeAdParam_ImageEle ImageEle;

  typedef BidRequest_AdSlot_NativeAdParam_Fields Fields;
  static const Fields TITLE =
    BidRequest_AdSlot_NativeAdParam_Fields_TITLE;
  static const Fields DESC =
    BidRequest_AdSlot_NativeAdParam_Fields_DESC;
  static const Fields IMAGE =
    BidRequest_AdSlot_NativeAdParam_Fields_IMAGE;
  static const Fields LOGOICON =
    BidRequest_AdSlot_NativeAdParam_Fields_LOGOICON;
  static const Fields APPSIZE =
    BidRequest_AdSlot_NativeAdParam_Fields_APPSIZE;
  static inline bool Fields_IsValid(int value) {
    return BidRequest_AdSlot_NativeAdParam_Fields_IsValid(value);
  }
  static const Fields Fields_MIN =
    BidRequest_AdSlot_NativeAdParam_Fields_Fields_MIN;
  static const Fields Fields_MAX =
    BidRequest_AdSlot_NativeAdParam_Fields_Fields_MAX;
  static const int Fields_ARRAYSIZE =
    BidRequest_AdSlot_NativeAdParam_Fields_Fields_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Fields_descriptor() {
    return BidRequest_AdSlot_NativeAdParam_Fields_descriptor();
  }
  static inline const ::std::string& Fields_Name(Fields value) {
    return BidRequest_AdSlot_NativeAdParam_Fields_Name(value);
  }
  static inline bool Fields_Parse(const ::std::string& name,
      Fields* value) {
    return BidRequest_AdSlot_NativeAdParam_Fields_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int64 required_fields = 1;
  int required_fields_size() const;
  void clear_required_fields();
  static const int kRequiredFieldsFieldNumber = 1;
  ::google::protobuf::int64 required_fields(int index) const;
  void set_required_fields(int index, ::google::protobuf::int64 value);
  void add_required_fields(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      required_fields() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_required_fields();

  // optional int32 title_max_length = 2;
  bool has_title_max_length() const;
  void clear_title_max_length();
  static const int kTitleMaxLengthFieldNumber = 2;
  ::google::protobuf::int32 title_max_length() const;
  void set_title_max_length(::google::protobuf::int32 value);

  // optional int32 desc_max_length = 3;
  bool has_desc_max_length() const;
  void clear_desc_max_length();
  static const int kDescMaxLengthFieldNumber = 3;
  ::google::protobuf::int32 desc_max_length() const;
  void set_desc_max_length(::google::protobuf::int32 value);

  // optional .protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle logo_icon = 4;
  bool has_logo_icon() const;
  void clear_logo_icon();
  static const int kLogoIconFieldNumber = 4;
  const ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle& logo_icon() const;
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* mutable_logo_icon();
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* release_logo_icon();
  void set_allocated_logo_icon(::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* logo_icon);

  // optional .protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle image = 5;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 5;
  const ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle& image() const;
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* mutable_image();
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* release_image();
  void set_allocated_image(::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* image);

  // optional int32 image_num = 6;
  bool has_image_num() const;
  void clear_image_num();
  static const int kImageNumFieldNumber = 6;
  ::google::protobuf::int32 image_num() const;
  void set_image_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.AdSlot.NativeAdParam)
 private:
  inline void set_has_title_max_length();
  inline void clear_has_title_max_length();
  inline void set_has_desc_max_length();
  inline void clear_has_desc_max_length();
  inline void set_has_logo_icon();
  inline void clear_has_logo_icon();
  inline void set_has_image();
  inline void clear_has_image();
  inline void set_has_image_num();
  inline void clear_has_image_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > required_fields_;
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* logo_icon_;
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* image_;
  ::google::protobuf::int32 title_max_length_;
  ::google::protobuf::int32 desc_max_length_;
  ::google::protobuf::int32 image_num_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_AdSlot_NativeAdParam> BidRequest_AdSlot_NativeAdParam_default_instance_;

// -------------------------------------------------------------------

class BidRequest_AdSlot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest.AdSlot) */ {
 public:
  BidRequest_AdSlot();
  virtual ~BidRequest_AdSlot();

  BidRequest_AdSlot(const BidRequest_AdSlot& from);

  inline BidRequest_AdSlot& operator=(const BidRequest_AdSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest_AdSlot& default_instance();

  static const BidRequest_AdSlot* internal_default_instance();

  void Swap(BidRequest_AdSlot* other);

  // implements Message ----------------------------------------------

  inline BidRequest_AdSlot* New() const { return New(NULL); }

  BidRequest_AdSlot* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest_AdSlot& from);
  void MergeFrom(const BidRequest_AdSlot& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest_AdSlot* other);
  void UnsafeMergeFrom(const BidRequest_AdSlot& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_AdSlot_VideoInfo VideoInfo;
  typedef BidRequest_AdSlot_LinkUnitInfo LinkUnitInfo;
  typedef BidRequest_AdSlot_PreferredOrderInfo PreferredOrderInfo;
  typedef BidRequest_AdSlot_GuaranteedOrder GuaranteedOrder;
  typedef BidRequest_AdSlot_ExpandCreativeInfo ExpandCreativeInfo;
  typedef BidRequest_AdSlot_NativeAdParam NativeAdParam;

  typedef BidRequest_AdSlot_CreativeDescType CreativeDescType;
  static const CreativeDescType STATIC_CREATIVE =
    BidRequest_AdSlot_CreativeDescType_STATIC_CREATIVE;
  static const CreativeDescType DYNAMIC_CREATIVE =
    BidRequest_AdSlot_CreativeDescType_DYNAMIC_CREATIVE;
  static inline bool CreativeDescType_IsValid(int value) {
    return BidRequest_AdSlot_CreativeDescType_IsValid(value);
  }
  static const CreativeDescType CreativeDescType_MIN =
    BidRequest_AdSlot_CreativeDescType_CreativeDescType_MIN;
  static const CreativeDescType CreativeDescType_MAX =
    BidRequest_AdSlot_CreativeDescType_CreativeDescType_MAX;
  static const int CreativeDescType_ARRAYSIZE =
    BidRequest_AdSlot_CreativeDescType_CreativeDescType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CreativeDescType_descriptor() {
    return BidRequest_AdSlot_CreativeDescType_descriptor();
  }
  static inline const ::std::string& CreativeDescType_Name(CreativeDescType value) {
    return BidRequest_AdSlot_CreativeDescType_Name(value);
  }
  static inline bool CreativeDescType_Parse(const ::std::string& name,
      CreativeDescType* value) {
    return BidRequest_AdSlot_CreativeDescType_Parse(name, value);
  }

  typedef BidRequest_AdSlot_AdSlotLevel AdSlotLevel;
  static const AdSlotLevel UNKNOWN_ADB_LEVEL =
    BidRequest_AdSlot_AdSlotLevel_UNKNOWN_ADB_LEVEL;
  static const AdSlotLevel TOP =
    BidRequest_AdSlot_AdSlotLevel_TOP;
  static const AdSlotLevel MED =
    BidRequest_AdSlot_AdSlotLevel_MED;
  static const AdSlotLevel TAIL =
    BidRequest_AdSlot_AdSlotLevel_TAIL;
  static const AdSlotLevel LOW =
    BidRequest_AdSlot_AdSlotLevel_LOW;
  static inline bool AdSlotLevel_IsValid(int value) {
    return BidRequest_AdSlot_AdSlotLevel_IsValid(value);
  }
  static const AdSlotLevel AdSlotLevel_MIN =
    BidRequest_AdSlot_AdSlotLevel_AdSlotLevel_MIN;
  static const AdSlotLevel AdSlotLevel_MAX =
    BidRequest_AdSlot_AdSlotLevel_AdSlotLevel_MAX;
  static const int AdSlotLevel_ARRAYSIZE =
    BidRequest_AdSlot_AdSlotLevel_AdSlotLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AdSlotLevel_descriptor() {
    return BidRequest_AdSlot_AdSlotLevel_descriptor();
  }
  static inline const ::std::string& AdSlotLevel_Name(AdSlotLevel value) {
    return BidRequest_AdSlot_AdSlotLevel_Name(value);
  }
  static inline bool AdSlotLevel_Parse(const ::std::string& name,
      AdSlotLevel* value) {
    return BidRequest_AdSlot_AdSlotLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 ad_block_key = 1;
  bool has_ad_block_key() const;
  void clear_ad_block_key();
  static const int kAdBlockKeyFieldNumber = 1;
  ::google::protobuf::uint64 ad_block_key() const;
  void set_ad_block_key(::google::protobuf::uint64 value);

  // optional int32 sequence_id = 2;
  bool has_sequence_id() const;
  void clear_sequence_id();
  static const int kSequenceIdFieldNumber = 2;
  ::google::protobuf::int32 sequence_id() const;
  void set_sequence_id(::google::protobuf::int32 value);

  // optional int32 adslot_type = 3;
  bool has_adslot_type() const;
  void clear_adslot_type();
  static const int kAdslotTypeFieldNumber = 3;
  ::google::protobuf::int32 adslot_type() const;
  void set_adslot_type(::google::protobuf::int32 value);

  // optional int32 width = 4;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 4;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 height = 5;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 5;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional int32 actual_width = 18;
  bool has_actual_width() const;
  void clear_actual_width();
  static const int kActualWidthFieldNumber = 18;
  ::google::protobuf::int32 actual_width() const;
  void set_actual_width(::google::protobuf::int32 value);

  // optional int32 actual_height = 19;
  bool has_actual_height() const;
  void clear_actual_height();
  static const int kActualHeightFieldNumber = 19;
  ::google::protobuf::int32 actual_height() const;
  void set_actual_height(::google::protobuf::int32 value);

  // optional int32 slot_visibility = 6;
  bool has_slot_visibility() const;
  void clear_slot_visibility();
  static const int kSlotVisibilityFieldNumber = 6;
  ::google::protobuf::int32 slot_visibility() const;
  void set_slot_visibility(::google::protobuf::int32 value);

  // repeated int32 creative_type = 7 [packed = true];
  int creative_type_size() const;
  void clear_creative_type();
  static const int kCreativeTypeFieldNumber = 7;
  ::google::protobuf::int32 creative_type(int index) const;
  void set_creative_type(int index, ::google::protobuf::int32 value);
  void add_creative_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      creative_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_creative_type();

  // repeated .protocol.baidu.BidRequest.AdSlot.CreativeDescType creative_desc_type = 22;
  int creative_desc_type_size() const;
  void clear_creative_desc_type();
  static const int kCreativeDescTypeFieldNumber = 22;
  ::protocol::baidu::BidRequest_AdSlot_CreativeDescType creative_desc_type(int index) const;
  void set_creative_desc_type(int index, ::protocol::baidu::BidRequest_AdSlot_CreativeDescType value);
  void add_creative_desc_type(::protocol::baidu::BidRequest_AdSlot_CreativeDescType value);
  const ::google::protobuf::RepeatedField<int>& creative_desc_type() const;
  ::google::protobuf::RepeatedField<int>* mutable_creative_desc_type();

  // repeated string excluded_landing_page_url = 8;
  int excluded_landing_page_url_size() const;
  void clear_excluded_landing_page_url();
  static const int kExcludedLandingPageUrlFieldNumber = 8;
  const ::std::string& excluded_landing_page_url(int index) const;
  ::std::string* mutable_excluded_landing_page_url(int index);
  void set_excluded_landing_page_url(int index, const ::std::string& value);
  void set_excluded_landing_page_url(int index, const char* value);
  void set_excluded_landing_page_url(int index, const char* value, size_t size);
  ::std::string* add_excluded_landing_page_url();
  void add_excluded_landing_page_url(const ::std::string& value);
  void add_excluded_landing_page_url(const char* value);
  void add_excluded_landing_page_url(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& excluded_landing_page_url() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_excluded_landing_page_url();

  // repeated fixed64 publisher_settings_list_id = 14;
  int publisher_settings_list_id_size() const;
  void clear_publisher_settings_list_id();
  static const int kPublisherSettingsListIdFieldNumber = 14;
  ::google::protobuf::uint64 publisher_settings_list_id(int index) const;
  void set_publisher_settings_list_id(int index, ::google::protobuf::uint64 value);
  void add_publisher_settings_list_id(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      publisher_settings_list_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_publisher_settings_list_id();

  // optional int32 minimum_cpm = 9;
  bool has_minimum_cpm() const;
  void clear_minimum_cpm();
  static const int kMinimumCpmFieldNumber = 9;
  ::google::protobuf::int32 minimum_cpm() const;
  void set_minimum_cpm(::google::protobuf::int32 value);

  // optional int32 max_video_duration = 10;
  bool has_max_video_duration() const;
  void clear_max_video_duration();
  static const int kMaxVideoDurationFieldNumber = 10;
  ::google::protobuf::int32 max_video_duration() const;
  void set_max_video_duration(::google::protobuf::int32 value);

  // optional int32 min_video_duration = 11;
  bool has_min_video_duration() const;
  void clear_min_video_duration();
  static const int kMinVideoDurationFieldNumber = 11;
  ::google::protobuf::int32 min_video_duration() const;
  void set_min_video_duration(::google::protobuf::int32 value);

  // optional int32 video_start_delay = 12;
  bool has_video_start_delay() const;
  void clear_video_start_delay();
  static const int kVideoStartDelayFieldNumber = 12;
  ::google::protobuf::int32 video_start_delay() const;
  void set_video_start_delay(::google::protobuf::int32 value);

  // optional .protocol.baidu.BidRequest.AdSlot.VideoInfo video_info = 15;
  bool has_video_info() const;
  void clear_video_info();
  static const int kVideoInfoFieldNumber = 15;
  const ::protocol::baidu::BidRequest_AdSlot_VideoInfo& video_info() const;
  ::protocol::baidu::BidRequest_AdSlot_VideoInfo* mutable_video_info();
  ::protocol::baidu::BidRequest_AdSlot_VideoInfo* release_video_info();
  void set_allocated_video_info(::protocol::baidu::BidRequest_AdSlot_VideoInfo* video_info);

  // optional .protocol.baidu.BidRequest.AdSlot.LinkUnitInfo link_unit_info = 16;
  bool has_link_unit_info() const;
  void clear_link_unit_info();
  static const int kLinkUnitInfoFieldNumber = 16;
  const ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo& link_unit_info() const;
  ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo* mutable_link_unit_info();
  ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo* release_link_unit_info();
  void set_allocated_link_unit_info(::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo* link_unit_info);

  // optional .protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo preferred_order_info = 13;
  bool has_preferred_order_info() const;
  void clear_preferred_order_info();
  static const int kPreferredOrderInfoFieldNumber = 13;
  const ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo& preferred_order_info() const;
  ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo* mutable_preferred_order_info();
  ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo* release_preferred_order_info();
  void set_allocated_preferred_order_info(::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo* preferred_order_info);

  // repeated .protocol.baidu.BidRequest.AdSlot.GuaranteedOrder guaranteed_orders = 20;
  int guaranteed_orders_size() const;
  void clear_guaranteed_orders();
  static const int kGuaranteedOrdersFieldNumber = 20;
  const ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder& guaranteed_orders(int index) const;
  ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder* mutable_guaranteed_orders(int index);
  ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder* add_guaranteed_orders();
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder >*
      mutable_guaranteed_orders();
  const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder >&
      guaranteed_orders() const;

  // optional .protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo expand_creative_info = 17;
  bool has_expand_creative_info() const;
  void clear_expand_creative_info();
  static const int kExpandCreativeInfoFieldNumber = 17;
  const ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo& expand_creative_info() const;
  ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo* mutable_expand_creative_info();
  ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo* release_expand_creative_info();
  void set_allocated_expand_creative_info(::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo* expand_creative_info);

  // optional .protocol.baidu.BidRequest.AdSlot.AdSlotLevel adslot_level = 21 [default = UNKNOWN_ADB_LEVEL];
  bool has_adslot_level() const;
  void clear_adslot_level();
  static const int kAdslotLevelFieldNumber = 21;
  ::protocol::baidu::BidRequest_AdSlot_AdSlotLevel adslot_level() const;
  void set_adslot_level(::protocol::baidu::BidRequest_AdSlot_AdSlotLevel value);

  // optional bool allowed_non_nativead = 23 [default = true];
  bool has_allowed_non_nativead() const;
  void clear_allowed_non_nativead();
  static const int kAllowedNonNativeadFieldNumber = 23;
  bool allowed_non_nativead() const;
  void set_allowed_non_nativead(bool value);

  // optional .protocol.baidu.BidRequest.AdSlot.NativeAdParam nativead_param = 24;
  bool has_nativead_param() const;
  void clear_nativead_param();
  static const int kNativeadParamFieldNumber = 24;
  const ::protocol::baidu::BidRequest_AdSlot_NativeAdParam& nativead_param() const;
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam* mutable_nativead_param();
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam* release_nativead_param();
  void set_allocated_nativead_param(::protocol::baidu::BidRequest_AdSlot_NativeAdParam* nativead_param);

  // optional bool secure = 25 [default = false];
  bool has_secure() const;
  void clear_secure();
  static const int kSecureFieldNumber = 25;
  bool secure() const;
  void set_secure(bool value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest.AdSlot)
 private:
  inline void set_has_ad_block_key();
  inline void clear_has_ad_block_key();
  inline void set_has_sequence_id();
  inline void clear_has_sequence_id();
  inline void set_has_adslot_type();
  inline void clear_has_adslot_type();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_actual_width();
  inline void clear_has_actual_width();
  inline void set_has_actual_height();
  inline void clear_has_actual_height();
  inline void set_has_slot_visibility();
  inline void clear_has_slot_visibility();
  inline void set_has_minimum_cpm();
  inline void clear_has_minimum_cpm();
  inline void set_has_max_video_duration();
  inline void clear_has_max_video_duration();
  inline void set_has_min_video_duration();
  inline void clear_has_min_video_duration();
  inline void set_has_video_start_delay();
  inline void clear_has_video_start_delay();
  inline void set_has_video_info();
  inline void clear_has_video_info();
  inline void set_has_link_unit_info();
  inline void clear_has_link_unit_info();
  inline void set_has_preferred_order_info();
  inline void clear_has_preferred_order_info();
  inline void set_has_expand_creative_info();
  inline void clear_has_expand_creative_info();
  inline void set_has_adslot_level();
  inline void clear_has_adslot_level();
  inline void set_has_allowed_non_nativead();
  inline void clear_has_allowed_non_nativead();
  inline void set_has_nativead_param();
  inline void clear_has_nativead_param();
  inline void set_has_secure();
  inline void clear_has_secure();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > creative_type_;
  mutable int _creative_type_cached_byte_size_;
  ::google::protobuf::RepeatedField<int> creative_desc_type_;
  ::google::protobuf::RepeatedPtrField< ::std::string> excluded_landing_page_url_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > publisher_settings_list_id_;
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder > guaranteed_orders_;
  ::protocol::baidu::BidRequest_AdSlot_VideoInfo* video_info_;
  ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo* link_unit_info_;
  ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo* preferred_order_info_;
  ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo* expand_creative_info_;
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam* nativead_param_;
  ::google::protobuf::uint64 ad_block_key_;
  ::google::protobuf::int32 sequence_id_;
  ::google::protobuf::int32 adslot_type_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 actual_width_;
  ::google::protobuf::int32 actual_height_;
  ::google::protobuf::int32 slot_visibility_;
  ::google::protobuf::int32 minimum_cpm_;
  ::google::protobuf::int32 max_video_duration_;
  ::google::protobuf::int32 min_video_duration_;
  ::google::protobuf::int32 video_start_delay_;
  int adslot_level_;
  bool secure_;
  bool allowed_non_nativead_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest_AdSlot> BidRequest_AdSlot_default_instance_;

// -------------------------------------------------------------------

class BidRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidRequest) */ {
 public:
  BidRequest();
  virtual ~BidRequest();

  BidRequest(const BidRequest& from);

  inline BidRequest& operator=(const BidRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidRequest& default_instance();

  static const BidRequest* internal_default_instance();

  void Swap(BidRequest* other);

  // implements Message ----------------------------------------------

  inline BidRequest* New() const { return New(NULL); }

  BidRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidRequest& from);
  void MergeFrom(const BidRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidRequest* other);
  void UnsafeMergeFrom(const BidRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidRequest_BaiduId BaiduId;
  typedef BidRequest_CustomizedUserTag CustomizedUserTag;
  typedef BidRequest_Geo Geo;
  typedef BidRequest_Mobile Mobile;
  typedef BidRequest_Video Video;
  typedef BidRequest_AdSlot AdSlot;

  typedef BidRequest_Gender Gender;
  static const Gender UNKNOWN =
    BidRequest_Gender_UNKNOWN;
  static const Gender MALE =
    BidRequest_Gender_MALE;
  static const Gender FEMALE =
    BidRequest_Gender_FEMALE;
  static inline bool Gender_IsValid(int value) {
    return BidRequest_Gender_IsValid(value);
  }
  static const Gender Gender_MIN =
    BidRequest_Gender_Gender_MIN;
  static const Gender Gender_MAX =
    BidRequest_Gender_Gender_MAX;
  static const int Gender_ARRAYSIZE =
    BidRequest_Gender_Gender_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Gender_descriptor() {
    return BidRequest_Gender_descriptor();
  }
  static inline const ::std::string& Gender_Name(Gender value) {
    return BidRequest_Gender_Name(value);
  }
  static inline bool Gender_Parse(const ::std::string& name,
      Gender* value) {
    return BidRequest_Gender_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string ip = 2;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string user_agent = 3;
  bool has_user_agent() const;
  void clear_user_agent();
  static const int kUserAgentFieldNumber = 3;
  const ::std::string& user_agent() const;
  void set_user_agent(const ::std::string& value);
  void set_user_agent(const char* value);
  void set_user_agent(const char* value, size_t size);
  ::std::string* mutable_user_agent();
  ::std::string* release_user_agent();
  void set_allocated_user_agent(::std::string* user_agent);

  // optional string baidu_user_id = 4;
  bool has_baidu_user_id() const;
  void clear_baidu_user_id();
  static const int kBaiduUserIdFieldNumber = 4;
  const ::std::string& baidu_user_id() const;
  void set_baidu_user_id(const ::std::string& value);
  void set_baidu_user_id(const char* value);
  void set_baidu_user_id(const char* value, size_t size);
  ::std::string* mutable_baidu_user_id();
  ::std::string* release_baidu_user_id();
  void set_allocated_baidu_user_id(::std::string* baidu_user_id);

  // optional int32 baidu_user_id_version = 5;
  bool has_baidu_user_id_version() const;
  void clear_baidu_user_id_version();
  static const int kBaiduUserIdVersionFieldNumber = 5;
  ::google::protobuf::int32 baidu_user_id_version() const;
  void set_baidu_user_id_version(::google::protobuf::int32 value);

  // repeated .protocol.baidu.BidRequest.BaiduId baidu_id_list = 8;
  int baidu_id_list_size() const;
  void clear_baidu_id_list();
  static const int kBaiduIdListFieldNumber = 8;
  const ::protocol::baidu::BidRequest_BaiduId& baidu_id_list(int index) const;
  ::protocol::baidu::BidRequest_BaiduId* mutable_baidu_id_list(int index);
  ::protocol::baidu::BidRequest_BaiduId* add_baidu_id_list();
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_BaiduId >*
      mutable_baidu_id_list();
  const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_BaiduId >&
      baidu_id_list() const;

  // optional string buyer_user_id = 32;
  bool has_buyer_user_id() const;
  void clear_buyer_user_id();
  static const int kBuyerUserIdFieldNumber = 32;
  const ::std::string& buyer_user_id() const;
  void set_buyer_user_id(const ::std::string& value);
  void set_buyer_user_id(const char* value);
  void set_buyer_user_id(const char* value, size_t size);
  ::std::string* mutable_buyer_user_id();
  ::std::string* release_buyer_user_id();
  void set_allocated_buyer_user_id(::std::string* buyer_user_id);

  // repeated int64 user_category = 6;
  int user_category_size() const;
  void clear_user_category();
  static const int kUserCategoryFieldNumber = 6;
  ::google::protobuf::int64 user_category(int index) const;
  void set_user_category(int index, ::google::protobuf::int64 value);
  void add_user_category(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      user_category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_user_category();

  // optional .protocol.baidu.BidRequest.CustomizedUserTag customized_user_tag = 31;
  bool has_customized_user_tag() const;
  void clear_customized_user_tag();
  static const int kCustomizedUserTagFieldNumber = 31;
  const ::protocol::baidu::BidRequest_CustomizedUserTag& customized_user_tag() const;
  ::protocol::baidu::BidRequest_CustomizedUserTag* mutable_customized_user_tag();
  ::protocol::baidu::BidRequest_CustomizedUserTag* release_customized_user_tag();
  void set_allocated_customized_user_tag(::protocol::baidu::BidRequest_CustomizedUserTag* customized_user_tag);

  // optional .protocol.baidu.BidRequest.Gender gender = 7;
  bool has_gender() const;
  void clear_gender();
  static const int kGenderFieldNumber = 7;
  ::protocol::baidu::BidRequest_Gender gender() const;
  void set_gender(::protocol::baidu::BidRequest_Gender value);

  // optional string detected_language = 9;
  bool has_detected_language() const;
  void clear_detected_language();
  static const int kDetectedLanguageFieldNumber = 9;
  const ::std::string& detected_language() const;
  void set_detected_language(const ::std::string& value);
  void set_detected_language(const char* value);
  void set_detected_language(const char* value, size_t size);
  ::std::string* mutable_detected_language();
  ::std::string* release_detected_language();
  void set_allocated_detected_language(::std::string* detected_language);

  // optional string flash_version = 10;
  bool has_flash_version() const;
  void clear_flash_version();
  static const int kFlashVersionFieldNumber = 10;
  const ::std::string& flash_version() const;
  void set_flash_version(const ::std::string& value);
  void set_flash_version(const char* value);
  void set_flash_version(const char* value, size_t size);
  ::std::string* mutable_flash_version();
  ::std::string* release_flash_version();
  void set_allocated_flash_version(::std::string* flash_version);

  // optional .protocol.baidu.BidRequest.Geo user_geo_info = 28;
  bool has_user_geo_info() const;
  void clear_user_geo_info();
  static const int kUserGeoInfoFieldNumber = 28;
  const ::protocol::baidu::BidRequest_Geo& user_geo_info() const;
  ::protocol::baidu::BidRequest_Geo* mutable_user_geo_info();
  ::protocol::baidu::BidRequest_Geo* release_user_geo_info();
  void set_allocated_user_geo_info(::protocol::baidu::BidRequest_Geo* user_geo_info);

  // optional string url = 11;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 11;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string referer = 12;
  bool has_referer() const;
  void clear_referer();
  static const int kRefererFieldNumber = 12;
  const ::std::string& referer() const;
  void set_referer(const ::std::string& value);
  void set_referer(const char* value);
  void set_referer(const char* value, size_t size);
  ::std::string* mutable_referer();
  ::std::string* release_referer();
  void set_allocated_referer(::std::string* referer);

  // optional int32 site_category = 13;
  bool has_site_category() const;
  void clear_site_category();
  static const int kSiteCategoryFieldNumber = 13;
  ::google::protobuf::int32 site_category() const;
  void set_site_category(::google::protobuf::int32 value);

  // optional int32 site_quality = 14;
  bool has_site_quality() const;
  void clear_site_quality();
  static const int kSiteQualityFieldNumber = 14;
  ::google::protobuf::int32 site_quality() const;
  void set_site_quality(::google::protobuf::int32 value);

  // optional int32 page_type = 15;
  bool has_page_type() const;
  void clear_page_type();
  static const int kPageTypeFieldNumber = 15;
  ::google::protobuf::int32 page_type() const;
  void set_page_type(::google::protobuf::int32 value);

  // repeated string page_keyword = 17;
  int page_keyword_size() const;
  void clear_page_keyword();
  static const int kPageKeywordFieldNumber = 17;
  const ::std::string& page_keyword(int index) const;
  ::std::string* mutable_page_keyword(int index);
  void set_page_keyword(int index, const ::std::string& value);
  void set_page_keyword(int index, const char* value);
  void set_page_keyword(int index, const char* value, size_t size);
  ::std::string* add_page_keyword();
  void add_page_keyword(const ::std::string& value);
  void add_page_keyword(const char* value);
  void add_page_keyword(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& page_keyword() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_page_keyword();

  // optional int32 page_quality = 18;
  bool has_page_quality() const;
  void clear_page_quality();
  static const int kPageQualityFieldNumber = 18;
  ::google::protobuf::int32 page_quality() const;
  void set_page_quality(::google::protobuf::int32 value);

  // optional int32 page_vertical = 21;
  bool has_page_vertical() const;
  void clear_page_vertical();
  static const int kPageVerticalFieldNumber = 21;
  ::google::protobuf::int32 page_vertical() const;
  void set_page_vertical(::google::protobuf::int32 value);

  // repeated int32 excluded_product_category = 19 [packed = true];
  int excluded_product_category_size() const;
  void clear_excluded_product_category();
  static const int kExcludedProductCategoryFieldNumber = 19;
  ::google::protobuf::int32 excluded_product_category(int index) const;
  void set_excluded_product_category(int index, ::google::protobuf::int32 value);
  void add_excluded_product_category(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      excluded_product_category() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_excluded_product_category();

  // optional .protocol.baidu.BidRequest.Mobile mobile = 29;
  bool has_mobile() const;
  void clear_mobile();
  static const int kMobileFieldNumber = 29;
  const ::protocol::baidu::BidRequest_Mobile& mobile() const;
  ::protocol::baidu::BidRequest_Mobile* mutable_mobile();
  ::protocol::baidu::BidRequest_Mobile* release_mobile();
  void set_allocated_mobile(::protocol::baidu::BidRequest_Mobile* mobile);

  // optional .protocol.baidu.BidRequest.Video video = 30;
  bool has_video() const;
  void clear_video();
  static const int kVideoFieldNumber = 30;
  const ::protocol::baidu::BidRequest_Video& video() const;
  ::protocol::baidu::BidRequest_Video* mutable_video();
  ::protocol::baidu::BidRequest_Video* release_video();
  void set_allocated_video(::protocol::baidu::BidRequest_Video* video);

  // repeated .protocol.baidu.BidRequest.AdSlot adslot = 20;
  int adslot_size() const;
  void clear_adslot();
  static const int kAdslotFieldNumber = 20;
  const ::protocol::baidu::BidRequest_AdSlot& adslot(int index) const;
  ::protocol::baidu::BidRequest_AdSlot* mutable_adslot(int index);
  ::protocol::baidu::BidRequest_AdSlot* add_adslot();
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot >*
      mutable_adslot();
  const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot >&
      adslot() const;

  // optional bool is_test = 26 [default = false];
  bool has_is_test() const;
  void clear_is_test();
  static const int kIsTestFieldNumber = 26;
  bool is_test() const;
  void set_is_test(bool value);

  // optional bool is_ping = 27 [default = false];
  bool has_is_ping() const;
  void clear_is_ping();
  static const int kIsPingFieldNumber = 27;
  bool is_ping() const;
  void set_is_ping(bool value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_user_agent();
  inline void clear_has_user_agent();
  inline void set_has_baidu_user_id();
  inline void clear_has_baidu_user_id();
  inline void set_has_baidu_user_id_version();
  inline void clear_has_baidu_user_id_version();
  inline void set_has_buyer_user_id();
  inline void clear_has_buyer_user_id();
  inline void set_has_customized_user_tag();
  inline void clear_has_customized_user_tag();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_detected_language();
  inline void clear_has_detected_language();
  inline void set_has_flash_version();
  inline void clear_has_flash_version();
  inline void set_has_user_geo_info();
  inline void clear_has_user_geo_info();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_referer();
  inline void clear_has_referer();
  inline void set_has_site_category();
  inline void clear_has_site_category();
  inline void set_has_site_quality();
  inline void clear_has_site_quality();
  inline void set_has_page_type();
  inline void clear_has_page_type();
  inline void set_has_page_quality();
  inline void clear_has_page_quality();
  inline void set_has_page_vertical();
  inline void clear_has_page_vertical();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_video();
  inline void clear_has_video();
  inline void set_has_is_test();
  inline void clear_has_is_test();
  inline void set_has_is_ping();
  inline void clear_has_is_ping();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_BaiduId > baidu_id_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > user_category_;
  ::google::protobuf::RepeatedPtrField< ::std::string> page_keyword_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > excluded_product_category_;
  mutable int _excluded_product_category_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot > adslot_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr user_agent_;
  ::google::protobuf::internal::ArenaStringPtr baidu_user_id_;
  ::google::protobuf::internal::ArenaStringPtr buyer_user_id_;
  ::google::protobuf::internal::ArenaStringPtr detected_language_;
  ::google::protobuf::internal::ArenaStringPtr flash_version_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr referer_;
  ::protocol::baidu::BidRequest_CustomizedUserTag* customized_user_tag_;
  ::protocol::baidu::BidRequest_Geo* user_geo_info_;
  ::protocol::baidu::BidRequest_Mobile* mobile_;
  ::protocol::baidu::BidRequest_Video* video_;
  ::google::protobuf::int32 baidu_user_id_version_;
  int gender_;
  ::google::protobuf::int32 site_category_;
  ::google::protobuf::int32 site_quality_;
  ::google::protobuf::int32 page_type_;
  ::google::protobuf::int32 page_quality_;
  ::google::protobuf::int32 page_vertical_;
  bool is_test_;
  bool is_ping_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidRequest> BidRequest_default_instance_;

// -------------------------------------------------------------------

class BidResponse_Ad_LinkUnitKeyword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidResponse.Ad.LinkUnitKeyword) */ {
 public:
  BidResponse_Ad_LinkUnitKeyword();
  virtual ~BidResponse_Ad_LinkUnitKeyword();

  BidResponse_Ad_LinkUnitKeyword(const BidResponse_Ad_LinkUnitKeyword& from);

  inline BidResponse_Ad_LinkUnitKeyword& operator=(const BidResponse_Ad_LinkUnitKeyword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad_LinkUnitKeyword& default_instance();

  static const BidResponse_Ad_LinkUnitKeyword* internal_default_instance();

  void Swap(BidResponse_Ad_LinkUnitKeyword* other);

  // implements Message ----------------------------------------------

  inline BidResponse_Ad_LinkUnitKeyword* New() const { return New(NULL); }

  BidResponse_Ad_LinkUnitKeyword* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad_LinkUnitKeyword& from);
  void MergeFrom(const BidResponse_Ad_LinkUnitKeyword& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse_Ad_LinkUnitKeyword* other);
  void UnsafeMergeFrom(const BidResponse_Ad_LinkUnitKeyword& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string keyword = 1;
  bool has_keyword() const;
  void clear_keyword();
  static const int kKeywordFieldNumber = 1;
  const ::std::string& keyword() const;
  void set_keyword(const ::std::string& value);
  void set_keyword(const char* value);
  void set_keyword(const char* value, size_t size);
  ::std::string* mutable_keyword();
  ::std::string* release_keyword();
  void set_allocated_keyword(::std::string* keyword);

  // repeated int32 selected_style_type = 2;
  int selected_style_type_size() const;
  void clear_selected_style_type();
  static const int kSelectedStyleTypeFieldNumber = 2;
  ::google::protobuf::int32 selected_style_type(int index) const;
  void set_selected_style_type(int index, ::google::protobuf::int32 value);
  void add_selected_style_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      selected_style_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_selected_style_type();

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidResponse.Ad.LinkUnitKeyword)
 private:
  inline void set_has_keyword();
  inline void clear_has_keyword();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > selected_style_type_;
  ::google::protobuf::internal::ArenaStringPtr keyword_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidResponse_Ad_LinkUnitKeyword> BidResponse_Ad_LinkUnitKeyword_default_instance_;

// -------------------------------------------------------------------

class BidResponse_Ad_ExpandCreativeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo) */ {
 public:
  BidResponse_Ad_ExpandCreativeInfo();
  virtual ~BidResponse_Ad_ExpandCreativeInfo();

  BidResponse_Ad_ExpandCreativeInfo(const BidResponse_Ad_ExpandCreativeInfo& from);

  inline BidResponse_Ad_ExpandCreativeInfo& operator=(const BidResponse_Ad_ExpandCreativeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad_ExpandCreativeInfo& default_instance();

  static const BidResponse_Ad_ExpandCreativeInfo* internal_default_instance();

  void Swap(BidResponse_Ad_ExpandCreativeInfo* other);

  // implements Message ----------------------------------------------

  inline BidResponse_Ad_ExpandCreativeInfo* New() const { return New(NULL); }

  BidResponse_Ad_ExpandCreativeInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad_ExpandCreativeInfo& from);
  void MergeFrom(const BidResponse_Ad_ExpandCreativeInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse_Ad_ExpandCreativeInfo* other);
  void UnsafeMergeFrom(const BidResponse_Ad_ExpandCreativeInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 creative_width = 1;
  bool has_creative_width() const;
  void clear_creative_width();
  static const int kCreativeWidthFieldNumber = 1;
  ::google::protobuf::int32 creative_width() const;
  void set_creative_width(::google::protobuf::int32 value);

  // optional int32 creative_height = 2;
  bool has_creative_height() const;
  void clear_creative_height();
  static const int kCreativeHeightFieldNumber = 2;
  ::google::protobuf::int32 creative_height() const;
  void set_creative_height(::google::protobuf::int32 value);

  // optional string creative_landing_page = 3;
  bool has_creative_landing_page() const;
  void clear_creative_landing_page();
  static const int kCreativeLandingPageFieldNumber = 3;
  const ::std::string& creative_landing_page() const;
  void set_creative_landing_page(const ::std::string& value);
  void set_creative_landing_page(const char* value);
  void set_creative_landing_page(const char* value, size_t size);
  ::std::string* mutable_creative_landing_page();
  ::std::string* release_creative_landing_page();
  void set_allocated_creative_landing_page(::std::string* creative_landing_page);

  // optional int32 creative_type = 4;
  bool has_creative_type() const;
  void clear_creative_type();
  static const int kCreativeTypeFieldNumber = 4;
  ::google::protobuf::int32 creative_type() const;
  void set_creative_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo)
 private:
  inline void set_has_creative_width();
  inline void clear_has_creative_width();
  inline void set_has_creative_height();
  inline void clear_has_creative_height();
  inline void set_has_creative_landing_page();
  inline void clear_has_creative_landing_page();
  inline void set_has_creative_type();
  inline void clear_has_creative_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr creative_landing_page_;
  ::google::protobuf::int32 creative_width_;
  ::google::protobuf::int32 creative_height_;
  ::google::protobuf::int32 creative_type_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidResponse_Ad_ExpandCreativeInfo> BidResponse_Ad_ExpandCreativeInfo_default_instance_;

// -------------------------------------------------------------------

class BidResponse_Ad_DeeplinkInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidResponse.Ad.DeeplinkInfo) */ {
 public:
  BidResponse_Ad_DeeplinkInfo();
  virtual ~BidResponse_Ad_DeeplinkInfo();

  BidResponse_Ad_DeeplinkInfo(const BidResponse_Ad_DeeplinkInfo& from);

  inline BidResponse_Ad_DeeplinkInfo& operator=(const BidResponse_Ad_DeeplinkInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad_DeeplinkInfo& default_instance();

  static const BidResponse_Ad_DeeplinkInfo* internal_default_instance();

  void Swap(BidResponse_Ad_DeeplinkInfo* other);

  // implements Message ----------------------------------------------

  inline BidResponse_Ad_DeeplinkInfo* New() const { return New(NULL); }

  BidResponse_Ad_DeeplinkInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad_DeeplinkInfo& from);
  void MergeFrom(const BidResponse_Ad_DeeplinkInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse_Ad_DeeplinkInfo* other);
  void UnsafeMergeFrom(const BidResponse_Ad_DeeplinkInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string deeplink_url = 1;
  bool has_deeplink_url() const;
  void clear_deeplink_url();
  static const int kDeeplinkUrlFieldNumber = 1;
  const ::std::string& deeplink_url() const;
  void set_deeplink_url(const ::std::string& value);
  void set_deeplink_url(const char* value);
  void set_deeplink_url(const char* value, size_t size);
  ::std::string* mutable_deeplink_url();
  ::std::string* release_deeplink_url();
  void set_allocated_deeplink_url(::std::string* deeplink_url);

  // optional uint32 app_version = 2;
  bool has_app_version() const;
  void clear_app_version();
  static const int kAppVersionFieldNumber = 2;
  ::google::protobuf::uint32 app_version() const;
  void set_app_version(::google::protobuf::uint32 value);

  // optional string fallback_url = 3;
  bool has_fallback_url() const;
  void clear_fallback_url();
  static const int kFallbackUrlFieldNumber = 3;
  const ::std::string& fallback_url() const;
  void set_fallback_url(const ::std::string& value);
  void set_fallback_url(const char* value);
  void set_fallback_url(const char* value, size_t size);
  ::std::string* mutable_fallback_url();
  ::std::string* release_fallback_url();
  void set_allocated_fallback_url(::std::string* fallback_url);

  // optional uint32 fallback_type = 4;
  bool has_fallback_type() const;
  void clear_fallback_type();
  static const int kFallbackTypeFieldNumber = 4;
  ::google::protobuf::uint32 fallback_type() const;
  void set_fallback_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidResponse.Ad.DeeplinkInfo)
 private:
  inline void set_has_deeplink_url();
  inline void clear_has_deeplink_url();
  inline void set_has_app_version();
  inline void clear_has_app_version();
  inline void set_has_fallback_url();
  inline void clear_has_fallback_url();
  inline void set_has_fallback_type();
  inline void clear_has_fallback_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr deeplink_url_;
  ::google::protobuf::internal::ArenaStringPtr fallback_url_;
  ::google::protobuf::uint32 app_version_;
  ::google::protobuf::uint32 fallback_type_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidResponse_Ad_DeeplinkInfo> BidResponse_Ad_DeeplinkInfo_default_instance_;

// -------------------------------------------------------------------

class BidResponse_Ad_NativeAd_Image : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidResponse.Ad.NativeAd.Image) */ {
 public:
  BidResponse_Ad_NativeAd_Image();
  virtual ~BidResponse_Ad_NativeAd_Image();

  BidResponse_Ad_NativeAd_Image(const BidResponse_Ad_NativeAd_Image& from);

  inline BidResponse_Ad_NativeAd_Image& operator=(const BidResponse_Ad_NativeAd_Image& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad_NativeAd_Image& default_instance();

  static const BidResponse_Ad_NativeAd_Image* internal_default_instance();

  void Swap(BidResponse_Ad_NativeAd_Image* other);

  // implements Message ----------------------------------------------

  inline BidResponse_Ad_NativeAd_Image* New() const { return New(NULL); }

  BidResponse_Ad_NativeAd_Image* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad_NativeAd_Image& from);
  void MergeFrom(const BidResponse_Ad_NativeAd_Image& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse_Ad_NativeAd_Image* other);
  void UnsafeMergeFrom(const BidResponse_Ad_NativeAd_Image& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional int32 width = 2;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 height = 3;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidResponse.Ad.NativeAd.Image)
 private:
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidResponse_Ad_NativeAd_Image> BidResponse_Ad_NativeAd_Image_default_instance_;

// -------------------------------------------------------------------

class BidResponse_Ad_NativeAd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidResponse.Ad.NativeAd) */ {
 public:
  BidResponse_Ad_NativeAd();
  virtual ~BidResponse_Ad_NativeAd();

  BidResponse_Ad_NativeAd(const BidResponse_Ad_NativeAd& from);

  inline BidResponse_Ad_NativeAd& operator=(const BidResponse_Ad_NativeAd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad_NativeAd& default_instance();

  static const BidResponse_Ad_NativeAd* internal_default_instance();

  void Swap(BidResponse_Ad_NativeAd* other);

  // implements Message ----------------------------------------------

  inline BidResponse_Ad_NativeAd* New() const { return New(NULL); }

  BidResponse_Ad_NativeAd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad_NativeAd& from);
  void MergeFrom(const BidResponse_Ad_NativeAd& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse_Ad_NativeAd* other);
  void UnsafeMergeFrom(const BidResponse_Ad_NativeAd& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidResponse_Ad_NativeAd_Image Image;

  // accessors -------------------------------------------------------

  // optional bytes title = 1;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const void* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional bytes desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // repeated .protocol.baidu.BidResponse.Ad.NativeAd.Image image = 3;
  int image_size() const;
  void clear_image();
  static const int kImageFieldNumber = 3;
  const ::protocol::baidu::BidResponse_Ad_NativeAd_Image& image(int index) const;
  ::protocol::baidu::BidResponse_Ad_NativeAd_Image* mutable_image(int index);
  ::protocol::baidu::BidResponse_Ad_NativeAd_Image* add_image();
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidResponse_Ad_NativeAd_Image >*
      mutable_image();
  const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidResponse_Ad_NativeAd_Image >&
      image() const;

  // optional .protocol.baidu.BidResponse.Ad.NativeAd.Image logo_icon = 4;
  bool has_logo_icon() const;
  void clear_logo_icon();
  static const int kLogoIconFieldNumber = 4;
  const ::protocol::baidu::BidResponse_Ad_NativeAd_Image& logo_icon() const;
  ::protocol::baidu::BidResponse_Ad_NativeAd_Image* mutable_logo_icon();
  ::protocol::baidu::BidResponse_Ad_NativeAd_Image* release_logo_icon();
  void set_allocated_logo_icon(::protocol::baidu::BidResponse_Ad_NativeAd_Image* logo_icon);

  // optional int32 app_size = 5;
  bool has_app_size() const;
  void clear_app_size();
  static const int kAppSizeFieldNumber = 5;
  ::google::protobuf::int32 app_size() const;
  void set_app_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidResponse.Ad.NativeAd)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_logo_icon();
  inline void clear_has_logo_icon();
  inline void set_has_app_size();
  inline void clear_has_app_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidResponse_Ad_NativeAd_Image > image_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::protocol::baidu::BidResponse_Ad_NativeAd_Image* logo_icon_;
  ::google::protobuf::int32 app_size_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidResponse_Ad_NativeAd> BidResponse_Ad_NativeAd_default_instance_;

// -------------------------------------------------------------------

class BidResponse_Ad : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidResponse.Ad) */ {
 public:
  BidResponse_Ad();
  virtual ~BidResponse_Ad();

  BidResponse_Ad(const BidResponse_Ad& from);

  inline BidResponse_Ad& operator=(const BidResponse_Ad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse_Ad& default_instance();

  static const BidResponse_Ad* internal_default_instance();

  void Swap(BidResponse_Ad* other);

  // implements Message ----------------------------------------------

  inline BidResponse_Ad* New() const { return New(NULL); }

  BidResponse_Ad* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse_Ad& from);
  void MergeFrom(const BidResponse_Ad& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse_Ad* other);
  void UnsafeMergeFrom(const BidResponse_Ad& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidResponse_Ad_LinkUnitKeyword LinkUnitKeyword;
  typedef BidResponse_Ad_ExpandCreativeInfo ExpandCreativeInfo;
  typedef BidResponse_Ad_DeeplinkInfo DeeplinkInfo;
  typedef BidResponse_Ad_NativeAd NativeAd;

  // accessors -------------------------------------------------------

  // optional int32 sequence_id = 1;
  bool has_sequence_id() const;
  void clear_sequence_id();
  static const int kSequenceIdFieldNumber = 1;
  ::google::protobuf::int32 sequence_id() const;
  void set_sequence_id(::google::protobuf::int32 value);

  // optional int64 creative_id = 2;
  bool has_creative_id() const;
  void clear_creative_id();
  static const int kCreativeIdFieldNumber = 2;
  ::google::protobuf::int64 creative_id() const;
  void set_creative_id(::google::protobuf::int64 value);

  // optional string html_snippet = 7;
  bool has_html_snippet() const;
  void clear_html_snippet();
  static const int kHtmlSnippetFieldNumber = 7;
  const ::std::string& html_snippet() const;
  void set_html_snippet(const ::std::string& value);
  void set_html_snippet(const char* value);
  void set_html_snippet(const char* value, size_t size);
  ::std::string* mutable_html_snippet();
  ::std::string* release_html_snippet();
  void set_allocated_html_snippet(::std::string* html_snippet);

  // optional .protocol.baidu.BidResponse.Ad.LinkUnitKeyword link_unit_keyword = 18;
  bool has_link_unit_keyword() const;
  void clear_link_unit_keyword();
  static const int kLinkUnitKeywordFieldNumber = 18;
  const ::protocol::baidu::BidResponse_Ad_LinkUnitKeyword& link_unit_keyword() const;
  ::protocol::baidu::BidResponse_Ad_LinkUnitKeyword* mutable_link_unit_keyword();
  ::protocol::baidu::BidResponse_Ad_LinkUnitKeyword* release_link_unit_keyword();
  void set_allocated_link_unit_keyword(::protocol::baidu::BidResponse_Ad_LinkUnitKeyword* link_unit_keyword);

  // optional .protocol.baidu.BidResponse.Ad.ExpandCreativeInfo expand_creative_info = 19;
  bool has_expand_creative_info() const;
  void clear_expand_creative_info();
  static const int kExpandCreativeInfoFieldNumber = 19;
  const ::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo& expand_creative_info() const;
  ::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo* mutable_expand_creative_info();
  ::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo* release_expand_creative_info();
  void set_allocated_expand_creative_info(::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo* expand_creative_info);

  // optional uint64 advertiser_id = 8;
  bool has_advertiser_id() const;
  void clear_advertiser_id();
  static const int kAdvertiserIdFieldNumber = 8;
  ::google::protobuf::uint64 advertiser_id() const;
  void set_advertiser_id(::google::protobuf::uint64 value);

  // optional int32 width = 9;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 9;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 height = 10;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 10;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional int32 category = 11;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 11;
  ::google::protobuf::int32 category() const;
  void set_category(::google::protobuf::int32 value);

  // optional int32 type = 12;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 12;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional string landing_page = 13;
  bool has_landing_page() const;
  void clear_landing_page();
  static const int kLandingPageFieldNumber = 13;
  const ::std::string& landing_page() const;
  void set_landing_page(const ::std::string& value);
  void set_landing_page(const char* value);
  void set_landing_page(const char* value, size_t size);
  ::std::string* mutable_landing_page();
  ::std::string* release_landing_page();
  void set_allocated_landing_page(::std::string* landing_page);

  // repeated string target_url = 14;
  int target_url_size() const;
  void clear_target_url();
  static const int kTargetUrlFieldNumber = 14;
  const ::std::string& target_url(int index) const;
  ::std::string* mutable_target_url(int index);
  void set_target_url(int index, const ::std::string& value);
  void set_target_url(int index, const char* value);
  void set_target_url(int index, const char* value, size_t size);
  ::std::string* add_target_url();
  void add_target_url(const ::std::string& value);
  void add_target_url(const char* value);
  void add_target_url(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& target_url() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_target_url();

  // repeated string monitor_urls = 17;
  int monitor_urls_size() const;
  void clear_monitor_urls();
  static const int kMonitorUrlsFieldNumber = 17;
  const ::std::string& monitor_urls(int index) const;
  ::std::string* mutable_monitor_urls(int index);
  void set_monitor_urls(int index, const ::std::string& value);
  void set_monitor_urls(int index, const char* value);
  void set_monitor_urls(int index, const char* value, size_t size);
  ::std::string* add_monitor_urls();
  void add_monitor_urls(const ::std::string& value);
  void add_monitor_urls(const char* value);
  void add_monitor_urls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& monitor_urls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_monitor_urls();

  // optional int32 max_cpm = 3;
  bool has_max_cpm() const;
  void clear_max_cpm();
  static const int kMaxCpmFieldNumber = 3;
  ::google::protobuf::int32 max_cpm() const;
  void set_max_cpm(::google::protobuf::int32 value);

  // optional string extdata = 5;
  bool has_extdata() const;
  void clear_extdata();
  static const int kExtdataFieldNumber = 5;
  const ::std::string& extdata() const;
  void set_extdata(const ::std::string& value);
  void set_extdata(const char* value);
  void set_extdata(const char* value, size_t size);
  ::std::string* mutable_extdata();
  ::std::string* release_extdata();
  void set_allocated_extdata(::std::string* extdata);

  // optional bool is_cookie_matching = 6;
  bool has_is_cookie_matching() const;
  void clear_is_cookie_matching();
  static const int kIsCookieMatchingFieldNumber = 6;
  bool is_cookie_matching() const;
  void set_is_cookie_matching(bool value);

  // optional string preferred_order_id = 15;
  bool has_preferred_order_id() const;
  void clear_preferred_order_id();
  static const int kPreferredOrderIdFieldNumber = 15;
  const ::std::string& preferred_order_id() const;
  void set_preferred_order_id(const ::std::string& value);
  void set_preferred_order_id(const char* value);
  void set_preferred_order_id(const char* value, size_t size);
  ::std::string* mutable_preferred_order_id();
  ::std::string* release_preferred_order_id();
  void set_allocated_preferred_order_id(::std::string* preferred_order_id);

  // optional uint32 guaranteed_order_id = 20;
  bool has_guaranteed_order_id() const;
  void clear_guaranteed_order_id();
  static const int kGuaranteedOrderIdFieldNumber = 20;
  ::google::protobuf::uint32 guaranteed_order_id() const;
  void set_guaranteed_order_id(::google::protobuf::uint32 value);

  // optional .protocol.baidu.BidResponse.Ad.DeeplinkInfo deeplink_info = 21;
  bool has_deeplink_info() const;
  void clear_deeplink_info();
  static const int kDeeplinkInfoFieldNumber = 21;
  const ::protocol::baidu::BidResponse_Ad_DeeplinkInfo& deeplink_info() const;
  ::protocol::baidu::BidResponse_Ad_DeeplinkInfo* mutable_deeplink_info();
  ::protocol::baidu::BidResponse_Ad_DeeplinkInfo* release_deeplink_info();
  void set_allocated_deeplink_info(::protocol::baidu::BidResponse_Ad_DeeplinkInfo* deeplink_info);

  // optional .protocol.baidu.BidResponse.Ad.NativeAd native_ad = 22;
  bool has_native_ad() const;
  void clear_native_ad();
  static const int kNativeAdFieldNumber = 22;
  const ::protocol::baidu::BidResponse_Ad_NativeAd& native_ad() const;
  ::protocol::baidu::BidResponse_Ad_NativeAd* mutable_native_ad();
  ::protocol::baidu::BidResponse_Ad_NativeAd* release_native_ad();
  void set_allocated_native_ad(::protocol::baidu::BidResponse_Ad_NativeAd* native_ad);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(BidResponse_Ad)
  // @@protoc_insertion_point(class_scope:protocol.baidu.BidResponse.Ad)
 private:
  inline void set_has_sequence_id();
  inline void clear_has_sequence_id();
  inline void set_has_creative_id();
  inline void clear_has_creative_id();
  inline void set_has_html_snippet();
  inline void clear_has_html_snippet();
  inline void set_has_link_unit_keyword();
  inline void clear_has_link_unit_keyword();
  inline void set_has_expand_creative_info();
  inline void clear_has_expand_creative_info();
  inline void set_has_advertiser_id();
  inline void clear_has_advertiser_id();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_category();
  inline void clear_has_category();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_landing_page();
  inline void clear_has_landing_page();
  inline void set_has_max_cpm();
  inline void clear_has_max_cpm();
  inline void set_has_extdata();
  inline void clear_has_extdata();
  inline void set_has_is_cookie_matching();
  inline void clear_has_is_cookie_matching();
  inline void set_has_preferred_order_id();
  inline void clear_has_preferred_order_id();
  inline void set_has_guaranteed_order_id();
  inline void clear_has_guaranteed_order_id();
  inline void set_has_deeplink_info();
  inline void clear_has_deeplink_info();
  inline void set_has_native_ad();
  inline void clear_has_native_ad();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> target_url_;
  ::google::protobuf::RepeatedPtrField< ::std::string> monitor_urls_;
  ::google::protobuf::internal::ArenaStringPtr html_snippet_;
  ::google::protobuf::internal::ArenaStringPtr landing_page_;
  ::google::protobuf::internal::ArenaStringPtr extdata_;
  ::google::protobuf::internal::ArenaStringPtr preferred_order_id_;
  ::protocol::baidu::BidResponse_Ad_LinkUnitKeyword* link_unit_keyword_;
  ::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo* expand_creative_info_;
  ::protocol::baidu::BidResponse_Ad_DeeplinkInfo* deeplink_info_;
  ::protocol::baidu::BidResponse_Ad_NativeAd* native_ad_;
  ::google::protobuf::int64 creative_id_;
  ::google::protobuf::int32 sequence_id_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::uint64 advertiser_id_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 category_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 max_cpm_;
  bool is_cookie_matching_;
  ::google::protobuf::uint32 guaranteed_order_id_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidResponse_Ad> BidResponse_Ad_default_instance_;

// -------------------------------------------------------------------

class BidResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.baidu.BidResponse) */ {
 public:
  BidResponse();
  virtual ~BidResponse();

  BidResponse(const BidResponse& from);

  inline BidResponse& operator=(const BidResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidResponse& default_instance();

  static const BidResponse* internal_default_instance();

  void Swap(BidResponse* other);

  // implements Message ----------------------------------------------

  inline BidResponse* New() const { return New(NULL); }

  BidResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidResponse& from);
  void MergeFrom(const BidResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidResponse* other);
  void UnsafeMergeFrom(const BidResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BidResponse_Ad Ad;

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // repeated .protocol.baidu.BidResponse.Ad ad = 2;
  int ad_size() const;
  void clear_ad();
  static const int kAdFieldNumber = 2;
  const ::protocol::baidu::BidResponse_Ad& ad(int index) const;
  ::protocol::baidu::BidResponse_Ad* mutable_ad(int index);
  ::protocol::baidu::BidResponse_Ad* add_ad();
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidResponse_Ad >*
      mutable_ad();
  const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidResponse_Ad >&
      ad() const;

  // optional string debug_string = 3;
  bool has_debug_string() const;
  void clear_debug_string();
  static const int kDebugStringFieldNumber = 3;
  const ::std::string& debug_string() const;
  void set_debug_string(const ::std::string& value);
  void set_debug_string(const char* value);
  void set_debug_string(const char* value, size_t size);
  ::std::string* mutable_debug_string();
  ::std::string* release_debug_string();
  void set_allocated_debug_string(::std::string* debug_string);

  // optional int32 processing_time_ms = 4;
  bool has_processing_time_ms() const;
  void clear_processing_time_ms();
  static const int kProcessingTimeMsFieldNumber = 4;
  ::google::protobuf::int32 processing_time_ms() const;
  void set_processing_time_ms(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.baidu.BidResponse)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_debug_string();
  inline void clear_has_debug_string();
  inline void set_has_processing_time_ms();
  inline void clear_has_processing_time_ms();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidResponse_Ad > ad_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr debug_string_;
  ::google::protobuf::int32 processing_time_ms_;
  friend void  protobuf_InitDefaults_baidu_5fbidding_2eproto_impl();
  friend void  protobuf_AddDesc_baidu_5fbidding_2eproto_impl();
  friend void protobuf_AssignDesc_baidu_5fbidding_2eproto();
  friend void protobuf_ShutdownFile_baidu_5fbidding_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BidResponse> BidResponse_default_instance_;

// ===================================================================

static const int kAdStatusFieldNumber = 101;
extern ::google::protobuf::internal::ExtensionIdentifier< ::protocol::baidu::BidResponse_Ad,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  ad_status;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BidRequest_BaiduId

// optional string baidu_user_id = 1;
inline bool BidRequest_BaiduId::has_baidu_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_BaiduId::set_has_baidu_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_BaiduId::clear_has_baidu_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_BaiduId::clear_baidu_user_id() {
  baidu_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_baidu_user_id();
}
inline const ::std::string& BidRequest_BaiduId::baidu_user_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.BaiduId.baidu_user_id)
  return baidu_user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_BaiduId::set_baidu_user_id(const ::std::string& value) {
  set_has_baidu_user_id();
  baidu_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.BaiduId.baidu_user_id)
}
inline void BidRequest_BaiduId::set_baidu_user_id(const char* value) {
  set_has_baidu_user_id();
  baidu_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.BaiduId.baidu_user_id)
}
inline void BidRequest_BaiduId::set_baidu_user_id(const char* value, size_t size) {
  set_has_baidu_user_id();
  baidu_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.BaiduId.baidu_user_id)
}
inline ::std::string* BidRequest_BaiduId::mutable_baidu_user_id() {
  set_has_baidu_user_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.BaiduId.baidu_user_id)
  return baidu_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_BaiduId::release_baidu_user_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.BaiduId.baidu_user_id)
  clear_has_baidu_user_id();
  return baidu_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_BaiduId::set_allocated_baidu_user_id(::std::string* baidu_user_id) {
  if (baidu_user_id != NULL) {
    set_has_baidu_user_id();
  } else {
    clear_has_baidu_user_id();
  }
  baidu_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), baidu_user_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.BaiduId.baidu_user_id)
}

// optional int32 baidu_user_id_version = 2;
inline bool BidRequest_BaiduId::has_baidu_user_id_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_BaiduId::set_has_baidu_user_id_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_BaiduId::clear_has_baidu_user_id_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_BaiduId::clear_baidu_user_id_version() {
  baidu_user_id_version_ = 0;
  clear_has_baidu_user_id_version();
}
inline ::google::protobuf::int32 BidRequest_BaiduId::baidu_user_id_version() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.BaiduId.baidu_user_id_version)
  return baidu_user_id_version_;
}
inline void BidRequest_BaiduId::set_baidu_user_id_version(::google::protobuf::int32 value) {
  set_has_baidu_user_id_version();
  baidu_user_id_version_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.BaiduId.baidu_user_id_version)
}

inline const BidRequest_BaiduId* BidRequest_BaiduId::internal_default_instance() {
  return &BidRequest_BaiduId_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_CustomizedUserTag_AmsTag

// optional uint64 tag_id = 1;
inline bool BidRequest_CustomizedUserTag_AmsTag::has_tag_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_CustomizedUserTag_AmsTag::set_has_tag_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_CustomizedUserTag_AmsTag::clear_has_tag_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_CustomizedUserTag_AmsTag::clear_tag_id() {
  tag_id_ = GOOGLE_ULONGLONG(0);
  clear_has_tag_id();
}
inline ::google::protobuf::uint64 BidRequest_CustomizedUserTag_AmsTag::tag_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.CustomizedUserTag.AmsTag.tag_id)
  return tag_id_;
}
inline void BidRequest_CustomizedUserTag_AmsTag::set_tag_id(::google::protobuf::uint64 value) {
  set_has_tag_id();
  tag_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.CustomizedUserTag.AmsTag.tag_id)
}

inline const BidRequest_CustomizedUserTag_AmsTag* BidRequest_CustomizedUserTag_AmsTag::internal_default_instance() {
  return &BidRequest_CustomizedUserTag_AmsTag_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_CustomizedUserTag

// repeated .protocol.baidu.BidRequest.CustomizedUserTag.AmsTag ams_tag_list = 1;
inline int BidRequest_CustomizedUserTag::ams_tag_list_size() const {
  return ams_tag_list_.size();
}
inline void BidRequest_CustomizedUserTag::clear_ams_tag_list() {
  ams_tag_list_.Clear();
}
inline const ::protocol::baidu::BidRequest_CustomizedUserTag_AmsTag& BidRequest_CustomizedUserTag::ams_tag_list(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.CustomizedUserTag.ams_tag_list)
  return ams_tag_list_.Get(index);
}
inline ::protocol::baidu::BidRequest_CustomizedUserTag_AmsTag* BidRequest_CustomizedUserTag::mutable_ams_tag_list(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.CustomizedUserTag.ams_tag_list)
  return ams_tag_list_.Mutable(index);
}
inline ::protocol::baidu::BidRequest_CustomizedUserTag_AmsTag* BidRequest_CustomizedUserTag::add_ams_tag_list() {
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.CustomizedUserTag.ams_tag_list)
  return ams_tag_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_CustomizedUserTag_AmsTag >*
BidRequest_CustomizedUserTag::mutable_ams_tag_list() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.CustomizedUserTag.ams_tag_list)
  return &ams_tag_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_CustomizedUserTag_AmsTag >&
BidRequest_CustomizedUserTag::ams_tag_list() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.CustomizedUserTag.ams_tag_list)
  return ams_tag_list_;
}

inline const BidRequest_CustomizedUserTag* BidRequest_CustomizedUserTag::internal_default_instance() {
  return &BidRequest_CustomizedUserTag_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_Geo_Coordinate

// optional .protocol.baidu.BidRequest.Geo.Coordinate.Standard standard = 1;
inline bool BidRequest_Geo_Coordinate::has_standard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Geo_Coordinate::set_has_standard() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Geo_Coordinate::clear_has_standard() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Geo_Coordinate::clear_standard() {
  standard_ = 0;
  clear_has_standard();
}
inline ::protocol::baidu::BidRequest_Geo_Coordinate_Standard BidRequest_Geo_Coordinate::standard() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Geo.Coordinate.standard)
  return static_cast< ::protocol::baidu::BidRequest_Geo_Coordinate_Standard >(standard_);
}
inline void BidRequest_Geo_Coordinate::set_standard(::protocol::baidu::BidRequest_Geo_Coordinate_Standard value) {
  assert(::protocol::baidu::BidRequest_Geo_Coordinate_Standard_IsValid(value));
  set_has_standard();
  standard_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Geo.Coordinate.standard)
}

// optional float latitude = 2;
inline bool BidRequest_Geo_Coordinate::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Geo_Coordinate::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Geo_Coordinate::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Geo_Coordinate::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float BidRequest_Geo_Coordinate::latitude() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Geo.Coordinate.latitude)
  return latitude_;
}
inline void BidRequest_Geo_Coordinate::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Geo.Coordinate.latitude)
}

// optional float longitude = 3;
inline bool BidRequest_Geo_Coordinate::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Geo_Coordinate::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Geo_Coordinate::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Geo_Coordinate::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float BidRequest_Geo_Coordinate::longitude() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Geo.Coordinate.longitude)
  return longitude_;
}
inline void BidRequest_Geo_Coordinate::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Geo.Coordinate.longitude)
}

inline const BidRequest_Geo_Coordinate* BidRequest_Geo_Coordinate::internal_default_instance() {
  return &BidRequest_Geo_Coordinate_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_Geo_UserLocation

// optional string province = 1;
inline bool BidRequest_Geo_UserLocation::has_province() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Geo_UserLocation::set_has_province() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Geo_UserLocation::clear_has_province() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Geo_UserLocation::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
inline const ::std::string& BidRequest_Geo_UserLocation::province() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Geo.UserLocation.province)
  return province_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Geo_UserLocation::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Geo.UserLocation.province)
}
inline void BidRequest_Geo_UserLocation::set_province(const char* value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Geo.UserLocation.province)
}
inline void BidRequest_Geo_UserLocation::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Geo.UserLocation.province)
}
inline ::std::string* BidRequest_Geo_UserLocation::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Geo.UserLocation.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Geo_UserLocation::release_province() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Geo.UserLocation.province)
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Geo_UserLocation::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Geo.UserLocation.province)
}

// optional string city = 2;
inline bool BidRequest_Geo_UserLocation::has_city() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Geo_UserLocation::set_has_city() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Geo_UserLocation::clear_has_city() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Geo_UserLocation::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
inline const ::std::string& BidRequest_Geo_UserLocation::city() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Geo.UserLocation.city)
  return city_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Geo_UserLocation::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Geo.UserLocation.city)
}
inline void BidRequest_Geo_UserLocation::set_city(const char* value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Geo.UserLocation.city)
}
inline void BidRequest_Geo_UserLocation::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Geo.UserLocation.city)
}
inline ::std::string* BidRequest_Geo_UserLocation::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Geo.UserLocation.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Geo_UserLocation::release_city() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Geo.UserLocation.city)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Geo_UserLocation::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Geo.UserLocation.city)
}

// optional string district = 3;
inline bool BidRequest_Geo_UserLocation::has_district() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Geo_UserLocation::set_has_district() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Geo_UserLocation::clear_has_district() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Geo_UserLocation::clear_district() {
  district_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_district();
}
inline const ::std::string& BidRequest_Geo_UserLocation::district() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Geo.UserLocation.district)
  return district_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Geo_UserLocation::set_district(const ::std::string& value) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Geo.UserLocation.district)
}
inline void BidRequest_Geo_UserLocation::set_district(const char* value) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Geo.UserLocation.district)
}
inline void BidRequest_Geo_UserLocation::set_district(const char* value, size_t size) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Geo.UserLocation.district)
}
inline ::std::string* BidRequest_Geo_UserLocation::mutable_district() {
  set_has_district();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Geo.UserLocation.district)
  return district_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Geo_UserLocation::release_district() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Geo.UserLocation.district)
  clear_has_district();
  return district_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Geo_UserLocation::set_allocated_district(::std::string* district) {
  if (district != NULL) {
    set_has_district();
  } else {
    clear_has_district();
  }
  district_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), district);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Geo.UserLocation.district)
}

// optional string street = 4;
inline bool BidRequest_Geo_UserLocation::has_street() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_Geo_UserLocation::set_has_street() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_Geo_UserLocation::clear_has_street() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_Geo_UserLocation::clear_street() {
  street_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_street();
}
inline const ::std::string& BidRequest_Geo_UserLocation::street() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Geo.UserLocation.street)
  return street_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Geo_UserLocation::set_street(const ::std::string& value) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Geo.UserLocation.street)
}
inline void BidRequest_Geo_UserLocation::set_street(const char* value) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Geo.UserLocation.street)
}
inline void BidRequest_Geo_UserLocation::set_street(const char* value, size_t size) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Geo.UserLocation.street)
}
inline ::std::string* BidRequest_Geo_UserLocation::mutable_street() {
  set_has_street();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Geo.UserLocation.street)
  return street_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Geo_UserLocation::release_street() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Geo.UserLocation.street)
  clear_has_street();
  return street_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Geo_UserLocation::set_allocated_street(::std::string* street) {
  if (street != NULL) {
    set_has_street();
  } else {
    clear_has_street();
  }
  street_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), street);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Geo.UserLocation.street)
}

inline const BidRequest_Geo_UserLocation* BidRequest_Geo_UserLocation::internal_default_instance() {
  return &BidRequest_Geo_UserLocation_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_Geo

// repeated .protocol.baidu.BidRequest.Geo.Coordinate user_coordinate = 1;
inline int BidRequest_Geo::user_coordinate_size() const {
  return user_coordinate_.size();
}
inline void BidRequest_Geo::clear_user_coordinate() {
  user_coordinate_.Clear();
}
inline const ::protocol::baidu::BidRequest_Geo_Coordinate& BidRequest_Geo::user_coordinate(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Geo.user_coordinate)
  return user_coordinate_.Get(index);
}
inline ::protocol::baidu::BidRequest_Geo_Coordinate* BidRequest_Geo::mutable_user_coordinate(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Geo.user_coordinate)
  return user_coordinate_.Mutable(index);
}
inline ::protocol::baidu::BidRequest_Geo_Coordinate* BidRequest_Geo::add_user_coordinate() {
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.Geo.user_coordinate)
  return user_coordinate_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Geo_Coordinate >*
BidRequest_Geo::mutable_user_coordinate() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.Geo.user_coordinate)
  return &user_coordinate_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Geo_Coordinate >&
BidRequest_Geo::user_coordinate() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.Geo.user_coordinate)
  return user_coordinate_;
}

// optional .protocol.baidu.BidRequest.Geo.UserLocation user_location = 2;
inline bool BidRequest_Geo::has_user_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Geo::set_has_user_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Geo::clear_has_user_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Geo::clear_user_location() {
  if (user_location_ != NULL) user_location_->::protocol::baidu::BidRequest_Geo_UserLocation::Clear();
  clear_has_user_location();
}
inline const ::protocol::baidu::BidRequest_Geo_UserLocation& BidRequest_Geo::user_location() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Geo.user_location)
  return user_location_ != NULL ? *user_location_
                         : *::protocol::baidu::BidRequest_Geo_UserLocation::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_Geo_UserLocation* BidRequest_Geo::mutable_user_location() {
  set_has_user_location();
  if (user_location_ == NULL) {
    user_location_ = new ::protocol::baidu::BidRequest_Geo_UserLocation;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Geo.user_location)
  return user_location_;
}
inline ::protocol::baidu::BidRequest_Geo_UserLocation* BidRequest_Geo::release_user_location() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Geo.user_location)
  clear_has_user_location();
  ::protocol::baidu::BidRequest_Geo_UserLocation* temp = user_location_;
  user_location_ = NULL;
  return temp;
}
inline void BidRequest_Geo::set_allocated_user_location(::protocol::baidu::BidRequest_Geo_UserLocation* user_location) {
  delete user_location_;
  user_location_ = user_location;
  if (user_location) {
    set_has_user_location();
  } else {
    clear_has_user_location();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Geo.user_location)
}

inline const BidRequest_Geo* BidRequest_Geo::internal_default_instance() {
  return &BidRequest_Geo_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_Mobile_MobileID

// optional .protocol.baidu.BidRequest.Mobile.MobileID.IDType type = 1;
inline bool BidRequest_Mobile_MobileID::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile_MobileID::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile_MobileID::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile_MobileID::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::protocol::baidu::BidRequest_Mobile_MobileID_IDType BidRequest_Mobile_MobileID::type() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.MobileID.type)
  return static_cast< ::protocol::baidu::BidRequest_Mobile_MobileID_IDType >(type_);
}
inline void BidRequest_Mobile_MobileID::set_type(::protocol::baidu::BidRequest_Mobile_MobileID_IDType value) {
  assert(::protocol::baidu::BidRequest_Mobile_MobileID_IDType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.MobileID.type)
}

// optional string id = 2;
inline bool BidRequest_Mobile_MobileID::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile_MobileID::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile_MobileID::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile_MobileID::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& BidRequest_Mobile_MobileID::id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.MobileID.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_MobileID::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.MobileID.id)
}
inline void BidRequest_Mobile_MobileID::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Mobile.MobileID.id)
}
inline void BidRequest_Mobile_MobileID::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Mobile.MobileID.id)
}
inline ::std::string* BidRequest_Mobile_MobileID::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.MobileID.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_MobileID::release_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Mobile.MobileID.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_MobileID::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Mobile.MobileID.id)
}

inline const BidRequest_Mobile_MobileID* BidRequest_Mobile_MobileID::internal_default_instance() {
  return &BidRequest_Mobile_MobileID_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_Mobile_DeviceOsVersion

// optional int32 os_version_major = 1;
inline bool BidRequest_Mobile_DeviceOsVersion::has_os_version_major() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_has_os_version_major() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_has_os_version_major() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_os_version_major() {
  os_version_major_ = 0;
  clear_has_os_version_major();
}
inline ::google::protobuf::int32 BidRequest_Mobile_DeviceOsVersion::os_version_major() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.DeviceOsVersion.os_version_major)
  return os_version_major_;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_os_version_major(::google::protobuf::int32 value) {
  set_has_os_version_major();
  os_version_major_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.DeviceOsVersion.os_version_major)
}

// optional int32 os_version_minor = 2;
inline bool BidRequest_Mobile_DeviceOsVersion::has_os_version_minor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_has_os_version_minor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_has_os_version_minor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_os_version_minor() {
  os_version_minor_ = 0;
  clear_has_os_version_minor();
}
inline ::google::protobuf::int32 BidRequest_Mobile_DeviceOsVersion::os_version_minor() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.DeviceOsVersion.os_version_minor)
  return os_version_minor_;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_os_version_minor(::google::protobuf::int32 value) {
  set_has_os_version_minor();
  os_version_minor_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.DeviceOsVersion.os_version_minor)
}

// optional int32 os_version_micro = 3;
inline bool BidRequest_Mobile_DeviceOsVersion::has_os_version_micro() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_has_os_version_micro() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_has_os_version_micro() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Mobile_DeviceOsVersion::clear_os_version_micro() {
  os_version_micro_ = 0;
  clear_has_os_version_micro();
}
inline ::google::protobuf::int32 BidRequest_Mobile_DeviceOsVersion::os_version_micro() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.DeviceOsVersion.os_version_micro)
  return os_version_micro_;
}
inline void BidRequest_Mobile_DeviceOsVersion::set_os_version_micro(::google::protobuf::int32 value) {
  set_has_os_version_micro();
  os_version_micro_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.DeviceOsVersion.os_version_micro)
}

inline const BidRequest_Mobile_DeviceOsVersion* BidRequest_Mobile_DeviceOsVersion::internal_default_instance() {
  return &BidRequest_Mobile_DeviceOsVersion_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_Mobile_ForAdvertisingID

// optional .protocol.baidu.BidRequest.Mobile.ForAdvertisingID.IDType type = 1;
inline bool BidRequest_Mobile_ForAdvertisingID::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile_ForAdvertisingID::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile_ForAdvertisingID::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile_ForAdvertisingID::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID_IDType BidRequest_Mobile_ForAdvertisingID::type() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.ForAdvertisingID.type)
  return static_cast< ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID_IDType >(type_);
}
inline void BidRequest_Mobile_ForAdvertisingID::set_type(::protocol::baidu::BidRequest_Mobile_ForAdvertisingID_IDType value) {
  assert(::protocol::baidu::BidRequest_Mobile_ForAdvertisingID_IDType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.ForAdvertisingID.type)
}

// optional string id = 2;
inline bool BidRequest_Mobile_ForAdvertisingID::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile_ForAdvertisingID::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile_ForAdvertisingID::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile_ForAdvertisingID::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& BidRequest_Mobile_ForAdvertisingID::id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.ForAdvertisingID.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_ForAdvertisingID::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.ForAdvertisingID.id)
}
inline void BidRequest_Mobile_ForAdvertisingID::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Mobile.ForAdvertisingID.id)
}
inline void BidRequest_Mobile_ForAdvertisingID::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Mobile.ForAdvertisingID.id)
}
inline ::std::string* BidRequest_Mobile_ForAdvertisingID::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.ForAdvertisingID.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_ForAdvertisingID::release_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Mobile.ForAdvertisingID.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_ForAdvertisingID::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Mobile.ForAdvertisingID.id)
}

inline const BidRequest_Mobile_ForAdvertisingID* BidRequest_Mobile_ForAdvertisingID::internal_default_instance() {
  return &BidRequest_Mobile_ForAdvertisingID_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_Mobile_MobileApp

// optional string app_id = 1;
inline bool BidRequest_Mobile_MobileApp::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile_MobileApp::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile_MobileApp::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile_MobileApp::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_id();
}
inline const ::std::string& BidRequest_Mobile_MobileApp::app_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.MobileApp.app_id)
  return app_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_MobileApp::set_app_id(const ::std::string& value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.MobileApp.app_id)
}
inline void BidRequest_Mobile_MobileApp::set_app_id(const char* value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Mobile.MobileApp.app_id)
}
inline void BidRequest_Mobile_MobileApp::set_app_id(const char* value, size_t size) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Mobile.MobileApp.app_id)
}
inline ::std::string* BidRequest_Mobile_MobileApp::mutable_app_id() {
  set_has_app_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.MobileApp.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_MobileApp::release_app_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Mobile.MobileApp.app_id)
  clear_has_app_id();
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_MobileApp::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    set_has_app_id();
  } else {
    clear_has_app_id();
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Mobile.MobileApp.app_id)
}

// optional string app_bundle_id = 2;
inline bool BidRequest_Mobile_MobileApp::has_app_bundle_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_Mobile_MobileApp::set_has_app_bundle_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_Mobile_MobileApp::clear_has_app_bundle_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_Mobile_MobileApp::clear_app_bundle_id() {
  app_bundle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_bundle_id();
}
inline const ::std::string& BidRequest_Mobile_MobileApp::app_bundle_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.MobileApp.app_bundle_id)
  return app_bundle_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_MobileApp::set_app_bundle_id(const ::std::string& value) {
  set_has_app_bundle_id();
  app_bundle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.MobileApp.app_bundle_id)
}
inline void BidRequest_Mobile_MobileApp::set_app_bundle_id(const char* value) {
  set_has_app_bundle_id();
  app_bundle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Mobile.MobileApp.app_bundle_id)
}
inline void BidRequest_Mobile_MobileApp::set_app_bundle_id(const char* value, size_t size) {
  set_has_app_bundle_id();
  app_bundle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Mobile.MobileApp.app_bundle_id)
}
inline ::std::string* BidRequest_Mobile_MobileApp::mutable_app_bundle_id() {
  set_has_app_bundle_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.MobileApp.app_bundle_id)
  return app_bundle_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile_MobileApp::release_app_bundle_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Mobile.MobileApp.app_bundle_id)
  clear_has_app_bundle_id();
  return app_bundle_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile_MobileApp::set_allocated_app_bundle_id(::std::string* app_bundle_id) {
  if (app_bundle_id != NULL) {
    set_has_app_bundle_id();
  } else {
    clear_has_app_bundle_id();
  }
  app_bundle_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_bundle_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Mobile.MobileApp.app_bundle_id)
}

// optional int32 app_category = 3;
inline bool BidRequest_Mobile_MobileApp::has_app_category() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Mobile_MobileApp::set_has_app_category() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Mobile_MobileApp::clear_has_app_category() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Mobile_MobileApp::clear_app_category() {
  app_category_ = 0;
  clear_has_app_category();
}
inline ::google::protobuf::int32 BidRequest_Mobile_MobileApp::app_category() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.MobileApp.app_category)
  return app_category_;
}
inline void BidRequest_Mobile_MobileApp::set_app_category(::google::protobuf::int32 value) {
  set_has_app_category();
  app_category_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.MobileApp.app_category)
}

// optional int32 app_publisher_id = 4;
inline bool BidRequest_Mobile_MobileApp::has_app_publisher_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_Mobile_MobileApp::set_has_app_publisher_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_Mobile_MobileApp::clear_has_app_publisher_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_Mobile_MobileApp::clear_app_publisher_id() {
  app_publisher_id_ = 0;
  clear_has_app_publisher_id();
}
inline ::google::protobuf::int32 BidRequest_Mobile_MobileApp::app_publisher_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.MobileApp.app_publisher_id)
  return app_publisher_id_;
}
inline void BidRequest_Mobile_MobileApp::set_app_publisher_id(::google::protobuf::int32 value) {
  set_has_app_publisher_id();
  app_publisher_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.MobileApp.app_publisher_id)
}

// repeated .protocol.baidu.BidRequest.Mobile.MobileApp.AppInteractionType app_interaction_type = 5;
inline int BidRequest_Mobile_MobileApp::app_interaction_type_size() const {
  return app_interaction_type_.size();
}
inline void BidRequest_Mobile_MobileApp::clear_app_interaction_type() {
  app_interaction_type_.Clear();
}
inline ::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType BidRequest_Mobile_MobileApp::app_interaction_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.MobileApp.app_interaction_type)
  return static_cast< ::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType >(app_interaction_type_.Get(index));
}
inline void BidRequest_Mobile_MobileApp::set_app_interaction_type(int index, ::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType value) {
  assert(::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType_IsValid(value));
  app_interaction_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.MobileApp.app_interaction_type)
}
inline void BidRequest_Mobile_MobileApp::add_app_interaction_type(::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType value) {
  assert(::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType_IsValid(value));
  app_interaction_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.Mobile.MobileApp.app_interaction_type)
}
inline const ::google::protobuf::RepeatedField<int>&
BidRequest_Mobile_MobileApp::app_interaction_type() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.Mobile.MobileApp.app_interaction_type)
  return app_interaction_type_;
}
inline ::google::protobuf::RepeatedField<int>*
BidRequest_Mobile_MobileApp::mutable_app_interaction_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.Mobile.MobileApp.app_interaction_type)
  return &app_interaction_type_;
}

inline const BidRequest_Mobile_MobileApp* BidRequest_Mobile_MobileApp::internal_default_instance() {
  return &BidRequest_Mobile_MobileApp_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_Mobile

// optional string DEPRECATED_device_id = 1;
inline bool BidRequest_Mobile::has_deprecated_device_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Mobile::set_has_deprecated_device_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Mobile::clear_has_deprecated_device_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Mobile::clear_deprecated_device_id() {
  deprecated_device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_device_id();
}
inline const ::std::string& BidRequest_Mobile::deprecated_device_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.DEPRECATED_device_id)
  return deprecated_device_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_deprecated_device_id(const ::std::string& value) {
  set_has_deprecated_device_id();
  deprecated_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.DEPRECATED_device_id)
}
inline void BidRequest_Mobile::set_deprecated_device_id(const char* value) {
  set_has_deprecated_device_id();
  deprecated_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Mobile.DEPRECATED_device_id)
}
inline void BidRequest_Mobile::set_deprecated_device_id(const char* value, size_t size) {
  set_has_deprecated_device_id();
  deprecated_device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Mobile.DEPRECATED_device_id)
}
inline ::std::string* BidRequest_Mobile::mutable_deprecated_device_id() {
  set_has_deprecated_device_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.DEPRECATED_device_id)
  return deprecated_device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_deprecated_device_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Mobile.DEPRECATED_device_id)
  clear_has_deprecated_device_id();
  return deprecated_device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_deprecated_device_id(::std::string* deprecated_device_id) {
  if (deprecated_device_id != NULL) {
    set_has_deprecated_device_id();
  } else {
    clear_has_deprecated_device_id();
  }
  deprecated_device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_device_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Mobile.DEPRECATED_device_id)
}

// repeated .protocol.baidu.BidRequest.Mobile.MobileID id = 13;
inline int BidRequest_Mobile::id_size() const {
  return id_.size();
}
inline void BidRequest_Mobile::clear_id() {
  id_.Clear();
}
inline const ::protocol::baidu::BidRequest_Mobile_MobileID& BidRequest_Mobile::id(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.id)
  return id_.Get(index);
}
inline ::protocol::baidu::BidRequest_Mobile_MobileID* BidRequest_Mobile::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.id)
  return id_.Mutable(index);
}
inline ::protocol::baidu::BidRequest_Mobile_MobileID* BidRequest_Mobile::add_id() {
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.Mobile.id)
  return id_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Mobile_MobileID >*
BidRequest_Mobile::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.Mobile.id)
  return &id_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Mobile_MobileID >&
BidRequest_Mobile::id() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.Mobile.id)
  return id_;
}

// optional .protocol.baidu.BidRequest.Mobile.MobileDeviceType device_type = 2;
inline bool BidRequest_Mobile::has_device_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Mobile::set_has_device_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Mobile::clear_has_device_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Mobile::clear_device_type() {
  device_type_ = 0;
  clear_has_device_type();
}
inline ::protocol::baidu::BidRequest_Mobile_MobileDeviceType BidRequest_Mobile::device_type() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.device_type)
  return static_cast< ::protocol::baidu::BidRequest_Mobile_MobileDeviceType >(device_type_);
}
inline void BidRequest_Mobile::set_device_type(::protocol::baidu::BidRequest_Mobile_MobileDeviceType value) {
  assert(::protocol::baidu::BidRequest_Mobile_MobileDeviceType_IsValid(value));
  set_has_device_type();
  device_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.device_type)
}

// optional .protocol.baidu.BidRequest.Mobile.OS platform = 3 [default = UNKNOWN_OS];
inline bool BidRequest_Mobile::has_platform() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_Mobile::set_has_platform() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_Mobile::clear_has_platform() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_Mobile::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
inline ::protocol::baidu::BidRequest_Mobile_OS BidRequest_Mobile::platform() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.platform)
  return static_cast< ::protocol::baidu::BidRequest_Mobile_OS >(platform_);
}
inline void BidRequest_Mobile::set_platform(::protocol::baidu::BidRequest_Mobile_OS value) {
  assert(::protocol::baidu::BidRequest_Mobile_OS_IsValid(value));
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.platform)
}

// optional .protocol.baidu.BidRequest.Mobile.DeviceOsVersion os_version = 4;
inline bool BidRequest_Mobile::has_os_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_Mobile::set_has_os_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_Mobile::clear_has_os_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_Mobile::clear_os_version() {
  if (os_version_ != NULL) os_version_->::protocol::baidu::BidRequest_Mobile_DeviceOsVersion::Clear();
  clear_has_os_version();
}
inline const ::protocol::baidu::BidRequest_Mobile_DeviceOsVersion& BidRequest_Mobile::os_version() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.os_version)
  return os_version_ != NULL ? *os_version_
                         : *::protocol::baidu::BidRequest_Mobile_DeviceOsVersion::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_Mobile_DeviceOsVersion* BidRequest_Mobile::mutable_os_version() {
  set_has_os_version();
  if (os_version_ == NULL) {
    os_version_ = new ::protocol::baidu::BidRequest_Mobile_DeviceOsVersion;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.os_version)
  return os_version_;
}
inline ::protocol::baidu::BidRequest_Mobile_DeviceOsVersion* BidRequest_Mobile::release_os_version() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Mobile.os_version)
  clear_has_os_version();
  ::protocol::baidu::BidRequest_Mobile_DeviceOsVersion* temp = os_version_;
  os_version_ = NULL;
  return temp;
}
inline void BidRequest_Mobile::set_allocated_os_version(::protocol::baidu::BidRequest_Mobile_DeviceOsVersion* os_version) {
  delete os_version_;
  os_version_ = os_version;
  if (os_version) {
    set_has_os_version();
  } else {
    clear_has_os_version();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Mobile.os_version)
}

// optional string brand = 5;
inline bool BidRequest_Mobile::has_brand() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_Mobile::set_has_brand() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_Mobile::clear_has_brand() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_Mobile::clear_brand() {
  brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_brand();
}
inline const ::std::string& BidRequest_Mobile::brand() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.brand)
  return brand_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_brand(const ::std::string& value) {
  set_has_brand();
  brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.brand)
}
inline void BidRequest_Mobile::set_brand(const char* value) {
  set_has_brand();
  brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Mobile.brand)
}
inline void BidRequest_Mobile::set_brand(const char* value, size_t size) {
  set_has_brand();
  brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Mobile.brand)
}
inline ::std::string* BidRequest_Mobile::mutable_brand() {
  set_has_brand();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.brand)
  return brand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_brand() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Mobile.brand)
  clear_has_brand();
  return brand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_brand(::std::string* brand) {
  if (brand != NULL) {
    set_has_brand();
  } else {
    clear_has_brand();
  }
  brand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brand);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Mobile.brand)
}

// optional string model = 6;
inline bool BidRequest_Mobile::has_model() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidRequest_Mobile::set_has_model() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidRequest_Mobile::clear_has_model() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidRequest_Mobile::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model();
}
inline const ::std::string& BidRequest_Mobile::model() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_model(const ::std::string& value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.model)
}
inline void BidRequest_Mobile::set_model(const char* value) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Mobile.model)
}
inline void BidRequest_Mobile::set_model(const char* value, size_t size) {
  set_has_model();
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Mobile.model)
}
inline ::std::string* BidRequest_Mobile::mutable_model() {
  set_has_model();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_model() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Mobile.model)
  clear_has_model();
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    set_has_model();
  } else {
    clear_has_model();
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Mobile.model)
}

// optional int32 screen_width = 7;
inline bool BidRequest_Mobile::has_screen_width() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidRequest_Mobile::set_has_screen_width() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidRequest_Mobile::clear_has_screen_width() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidRequest_Mobile::clear_screen_width() {
  screen_width_ = 0;
  clear_has_screen_width();
}
inline ::google::protobuf::int32 BidRequest_Mobile::screen_width() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.screen_width)
  return screen_width_;
}
inline void BidRequest_Mobile::set_screen_width(::google::protobuf::int32 value) {
  set_has_screen_width();
  screen_width_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.screen_width)
}

// optional int32 screen_height = 8;
inline bool BidRequest_Mobile::has_screen_height() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BidRequest_Mobile::set_has_screen_height() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BidRequest_Mobile::clear_has_screen_height() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BidRequest_Mobile::clear_screen_height() {
  screen_height_ = 0;
  clear_has_screen_height();
}
inline ::google::protobuf::int32 BidRequest_Mobile::screen_height() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.screen_height)
  return screen_height_;
}
inline void BidRequest_Mobile::set_screen_height(::google::protobuf::int32 value) {
  set_has_screen_height();
  screen_height_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.screen_height)
}

// optional float screen_density = 15;
inline bool BidRequest_Mobile::has_screen_density() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidRequest_Mobile::set_has_screen_density() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidRequest_Mobile::clear_has_screen_density() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidRequest_Mobile::clear_screen_density() {
  screen_density_ = 0;
  clear_has_screen_density();
}
inline float BidRequest_Mobile::screen_density() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.screen_density)
  return screen_density_;
}
inline void BidRequest_Mobile::set_screen_density(float value) {
  set_has_screen_density();
  screen_density_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.screen_density)
}

// optional int64 carrier_id = 9;
inline bool BidRequest_Mobile::has_carrier_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BidRequest_Mobile::set_has_carrier_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BidRequest_Mobile::clear_has_carrier_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BidRequest_Mobile::clear_carrier_id() {
  carrier_id_ = GOOGLE_LONGLONG(0);
  clear_has_carrier_id();
}
inline ::google::protobuf::int64 BidRequest_Mobile::carrier_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.carrier_id)
  return carrier_id_;
}
inline void BidRequest_Mobile::set_carrier_id(::google::protobuf::int64 value) {
  set_has_carrier_id();
  carrier_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.carrier_id)
}

// optional .protocol.baidu.BidRequest.Mobile.WirelessNetworkType wireless_network_type = 10;
inline bool BidRequest_Mobile::has_wireless_network_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidRequest_Mobile::set_has_wireless_network_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidRequest_Mobile::clear_has_wireless_network_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidRequest_Mobile::clear_wireless_network_type() {
  wireless_network_type_ = 0;
  clear_has_wireless_network_type();
}
inline ::protocol::baidu::BidRequest_Mobile_WirelessNetworkType BidRequest_Mobile::wireless_network_type() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.wireless_network_type)
  return static_cast< ::protocol::baidu::BidRequest_Mobile_WirelessNetworkType >(wireless_network_type_);
}
inline void BidRequest_Mobile::set_wireless_network_type(::protocol::baidu::BidRequest_Mobile_WirelessNetworkType value) {
  assert(::protocol::baidu::BidRequest_Mobile_WirelessNetworkType_IsValid(value));
  set_has_wireless_network_type();
  wireless_network_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.wireless_network_type)
}

// optional string DEPRECATED_for_advertising_id = 11;
inline bool BidRequest_Mobile::has_deprecated_for_advertising_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BidRequest_Mobile::set_has_deprecated_for_advertising_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BidRequest_Mobile::clear_has_deprecated_for_advertising_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BidRequest_Mobile::clear_deprecated_for_advertising_id() {
  deprecated_for_advertising_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deprecated_for_advertising_id();
}
inline const ::std::string& BidRequest_Mobile::deprecated_for_advertising_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.DEPRECATED_for_advertising_id)
  return deprecated_for_advertising_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_deprecated_for_advertising_id(const ::std::string& value) {
  set_has_deprecated_for_advertising_id();
  deprecated_for_advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Mobile.DEPRECATED_for_advertising_id)
}
inline void BidRequest_Mobile::set_deprecated_for_advertising_id(const char* value) {
  set_has_deprecated_for_advertising_id();
  deprecated_for_advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Mobile.DEPRECATED_for_advertising_id)
}
inline void BidRequest_Mobile::set_deprecated_for_advertising_id(const char* value, size_t size) {
  set_has_deprecated_for_advertising_id();
  deprecated_for_advertising_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Mobile.DEPRECATED_for_advertising_id)
}
inline ::std::string* BidRequest_Mobile::mutable_deprecated_for_advertising_id() {
  set_has_deprecated_for_advertising_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.DEPRECATED_for_advertising_id)
  return deprecated_for_advertising_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Mobile::release_deprecated_for_advertising_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Mobile.DEPRECATED_for_advertising_id)
  clear_has_deprecated_for_advertising_id();
  return deprecated_for_advertising_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Mobile::set_allocated_deprecated_for_advertising_id(::std::string* deprecated_for_advertising_id) {
  if (deprecated_for_advertising_id != NULL) {
    set_has_deprecated_for_advertising_id();
  } else {
    clear_has_deprecated_for_advertising_id();
  }
  deprecated_for_advertising_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_for_advertising_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Mobile.DEPRECATED_for_advertising_id)
}

// repeated .protocol.baidu.BidRequest.Mobile.ForAdvertisingID for_advertising_id = 14;
inline int BidRequest_Mobile::for_advertising_id_size() const {
  return for_advertising_id_.size();
}
inline void BidRequest_Mobile::clear_for_advertising_id() {
  for_advertising_id_.Clear();
}
inline const ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID& BidRequest_Mobile::for_advertising_id(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.for_advertising_id)
  return for_advertising_id_.Get(index);
}
inline ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID* BidRequest_Mobile::mutable_for_advertising_id(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.for_advertising_id)
  return for_advertising_id_.Mutable(index);
}
inline ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID* BidRequest_Mobile::add_for_advertising_id() {
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.Mobile.for_advertising_id)
  return for_advertising_id_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID >*
BidRequest_Mobile::mutable_for_advertising_id() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.Mobile.for_advertising_id)
  return &for_advertising_id_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID >&
BidRequest_Mobile::for_advertising_id() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.Mobile.for_advertising_id)
  return for_advertising_id_;
}

// optional .protocol.baidu.BidRequest.Mobile.MobileApp mobile_app = 12;
inline bool BidRequest_Mobile::has_mobile_app() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BidRequest_Mobile::set_has_mobile_app() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BidRequest_Mobile::clear_has_mobile_app() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BidRequest_Mobile::clear_mobile_app() {
  if (mobile_app_ != NULL) mobile_app_->::protocol::baidu::BidRequest_Mobile_MobileApp::Clear();
  clear_has_mobile_app();
}
inline const ::protocol::baidu::BidRequest_Mobile_MobileApp& BidRequest_Mobile::mobile_app() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Mobile.mobile_app)
  return mobile_app_ != NULL ? *mobile_app_
                         : *::protocol::baidu::BidRequest_Mobile_MobileApp::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_Mobile_MobileApp* BidRequest_Mobile::mutable_mobile_app() {
  set_has_mobile_app();
  if (mobile_app_ == NULL) {
    mobile_app_ = new ::protocol::baidu::BidRequest_Mobile_MobileApp;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Mobile.mobile_app)
  return mobile_app_;
}
inline ::protocol::baidu::BidRequest_Mobile_MobileApp* BidRequest_Mobile::release_mobile_app() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Mobile.mobile_app)
  clear_has_mobile_app();
  ::protocol::baidu::BidRequest_Mobile_MobileApp* temp = mobile_app_;
  mobile_app_ = NULL;
  return temp;
}
inline void BidRequest_Mobile::set_allocated_mobile_app(::protocol::baidu::BidRequest_Mobile_MobileApp* mobile_app) {
  delete mobile_app_;
  mobile_app_ = mobile_app;
  if (mobile_app) {
    set_has_mobile_app();
  } else {
    clear_has_mobile_app();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Mobile.mobile_app)
}

inline const BidRequest_Mobile* BidRequest_Mobile::internal_default_instance() {
  return &BidRequest_Mobile_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_Video

// optional string title = 1;
inline bool BidRequest_Video::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_Video::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_Video::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_Video::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& BidRequest_Video::title() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Video.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Video::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Video.title)
}
inline void BidRequest_Video::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Video.title)
}
inline void BidRequest_Video::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Video.title)
}
inline ::std::string* BidRequest_Video::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Video.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_Video::release_title() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.Video.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_Video::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.Video.title)
}

// repeated string tags = 2;
inline int BidRequest_Video::tags_size() const {
  return tags_.size();
}
inline void BidRequest_Video::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& BidRequest_Video::tags(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Video.tags)
  return tags_.Get(index);
}
inline ::std::string* BidRequest_Video::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.Video.tags)
  return tags_.Mutable(index);
}
inline void BidRequest_Video::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Video.tags)
  tags_.Mutable(index)->assign(value);
}
inline void BidRequest_Video::set_tags(int index, const char* value) {
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.Video.tags)
}
inline void BidRequest_Video::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.Video.tags)
}
inline ::std::string* BidRequest_Video::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:protocol.baidu.BidRequest.Video.tags)
  return tags_.Add();
}
inline void BidRequest_Video::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.Video.tags)
}
inline void BidRequest_Video::add_tags(const char* value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.baidu.BidRequest.Video.tags)
}
inline void BidRequest_Video::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.baidu.BidRequest.Video.tags)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest_Video::tags() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.Video.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest_Video::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.Video.tags)
  return &tags_;
}

// optional int32 content_length = 3;
inline bool BidRequest_Video::has_content_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_Video::set_has_content_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_Video::clear_has_content_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_Video::clear_content_length() {
  content_length_ = 0;
  clear_has_content_length();
}
inline ::google::protobuf::int32 BidRequest_Video::content_length() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Video.content_length)
  return content_length_;
}
inline void BidRequest_Video::set_content_length(::google::protobuf::int32 value) {
  set_has_content_length();
  content_length_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Video.content_length)
}

// repeated int64 channel_id = 4;
inline int BidRequest_Video::channel_id_size() const {
  return channel_id_.size();
}
inline void BidRequest_Video::clear_channel_id() {
  channel_id_.Clear();
}
inline ::google::protobuf::int64 BidRequest_Video::channel_id(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.Video.channel_id)
  return channel_id_.Get(index);
}
inline void BidRequest_Video::set_channel_id(int index, ::google::protobuf::int64 value) {
  channel_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.Video.channel_id)
}
inline void BidRequest_Video::add_channel_id(::google::protobuf::int64 value) {
  channel_id_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.Video.channel_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
BidRequest_Video::channel_id() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.Video.channel_id)
  return channel_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
BidRequest_Video::mutable_channel_id() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.Video.channel_id)
  return &channel_id_;
}

inline const BidRequest_Video* BidRequest_Video::internal_default_instance() {
  return &BidRequest_Video_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_AdSlot_VideoInfo

// optional int32 max_video_duration = 1;
inline bool BidRequest_AdSlot_VideoInfo::has_max_video_duration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_VideoInfo::set_has_max_video_duration() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_has_max_video_duration() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_max_video_duration() {
  max_video_duration_ = 0;
  clear_has_max_video_duration();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_VideoInfo::max_video_duration() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.VideoInfo.max_video_duration)
  return max_video_duration_;
}
inline void BidRequest_AdSlot_VideoInfo::set_max_video_duration(::google::protobuf::int32 value) {
  set_has_max_video_duration();
  max_video_duration_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.VideoInfo.max_video_duration)
}

// optional int32 min_video_duration = 2;
inline bool BidRequest_AdSlot_VideoInfo::has_min_video_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_VideoInfo::set_has_min_video_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_has_min_video_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_min_video_duration() {
  min_video_duration_ = 0;
  clear_has_min_video_duration();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_VideoInfo::min_video_duration() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.VideoInfo.min_video_duration)
  return min_video_duration_;
}
inline void BidRequest_AdSlot_VideoInfo::set_min_video_duration(::google::protobuf::int32 value) {
  set_has_min_video_duration();
  min_video_duration_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.VideoInfo.min_video_duration)
}

// optional int32 video_start_delay = 3;
inline bool BidRequest_AdSlot_VideoInfo::has_video_start_delay() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_AdSlot_VideoInfo::set_has_video_start_delay() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_has_video_start_delay() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_AdSlot_VideoInfo::clear_video_start_delay() {
  video_start_delay_ = 0;
  clear_has_video_start_delay();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_VideoInfo::video_start_delay() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.VideoInfo.video_start_delay)
  return video_start_delay_;
}
inline void BidRequest_AdSlot_VideoInfo::set_video_start_delay(::google::protobuf::int32 value) {
  set_has_video_start_delay();
  video_start_delay_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.VideoInfo.video_start_delay)
}

inline const BidRequest_AdSlot_VideoInfo* BidRequest_AdSlot_VideoInfo::internal_default_instance() {
  return &BidRequest_AdSlot_VideoInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword

// optional string text = 1;
inline bool BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::text() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword.text)
}
inline void BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword.text)
}
inline void BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword.text)
}
inline ::std::string* BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::release_text() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword.text)
}

// optional float pctr1 = 2;
inline bool BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::has_pctr1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::set_has_pctr1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::clear_has_pctr1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::clear_pctr1() {
  pctr1_ = 0;
  clear_has_pctr1();
}
inline float BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::pctr1() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword.pctr1)
  return pctr1_;
}
inline void BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::set_pctr1(float value) {
  set_has_pctr1();
  pctr1_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword.pctr1)
}

inline const BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword* BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword::internal_default_instance() {
  return &BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_AdSlot_LinkUnitInfo

// repeated int32 style_type = 1;
inline int BidRequest_AdSlot_LinkUnitInfo::style_type_size() const {
  return style_type_.size();
}
inline void BidRequest_AdSlot_LinkUnitInfo::clear_style_type() {
  style_type_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_LinkUnitInfo::style_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.style_type)
  return style_type_.Get(index);
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_style_type(int index, ::google::protobuf::int32 value) {
  style_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.style_type)
}
inline void BidRequest_AdSlot_LinkUnitInfo::add_style_type(::google::protobuf::int32 value) {
  style_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.style_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot_LinkUnitInfo::style_type() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.style_type)
  return style_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot_LinkUnitInfo::mutable_style_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.style_type)
  return &style_type_;
}

// optional int32 req_keyword_num = 2;
inline bool BidRequest_AdSlot_LinkUnitInfo::has_req_keyword_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_has_req_keyword_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_LinkUnitInfo::clear_has_req_keyword_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_LinkUnitInfo::clear_req_keyword_num() {
  req_keyword_num_ = 0;
  clear_has_req_keyword_num();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_LinkUnitInfo::req_keyword_num() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.req_keyword_num)
  return req_keyword_num_;
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_req_keyword_num(::google::protobuf::int32 value) {
  set_has_req_keyword_num();
  req_keyword_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.req_keyword_num)
}

// repeated string proposed_keyword = 3;
inline int BidRequest_AdSlot_LinkUnitInfo::proposed_keyword_size() const {
  return proposed_keyword_.size();
}
inline void BidRequest_AdSlot_LinkUnitInfo::clear_proposed_keyword() {
  proposed_keyword_.Clear();
}
inline const ::std::string& BidRequest_AdSlot_LinkUnitInfo::proposed_keyword(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
  return proposed_keyword_.Get(index);
}
inline ::std::string* BidRequest_AdSlot_LinkUnitInfo::mutable_proposed_keyword(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
  return proposed_keyword_.Mutable(index);
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_proposed_keyword(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
  proposed_keyword_.Mutable(index)->assign(value);
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_proposed_keyword(int index, const char* value) {
  proposed_keyword_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
}
inline void BidRequest_AdSlot_LinkUnitInfo::set_proposed_keyword(int index, const char* value, size_t size) {
  proposed_keyword_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
}
inline ::std::string* BidRequest_AdSlot_LinkUnitInfo::add_proposed_keyword() {
  // @@protoc_insertion_point(field_add_mutable:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
  return proposed_keyword_.Add();
}
inline void BidRequest_AdSlot_LinkUnitInfo::add_proposed_keyword(const ::std::string& value) {
  proposed_keyword_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
}
inline void BidRequest_AdSlot_LinkUnitInfo::add_proposed_keyword(const char* value) {
  proposed_keyword_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
}
inline void BidRequest_AdSlot_LinkUnitInfo::add_proposed_keyword(const char* value, size_t size) {
  proposed_keyword_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest_AdSlot_LinkUnitInfo::proposed_keyword() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
  return proposed_keyword_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest_AdSlot_LinkUnitInfo::mutable_proposed_keyword() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.proposed_keyword)
  return &proposed_keyword_;
}

// repeated .protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.ProposedKeyword keywords = 4;
inline int BidRequest_AdSlot_LinkUnitInfo::keywords_size() const {
  return keywords_.size();
}
inline void BidRequest_AdSlot_LinkUnitInfo::clear_keywords() {
  keywords_.Clear();
}
inline const ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword& BidRequest_AdSlot_LinkUnitInfo::keywords(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.keywords)
  return keywords_.Get(index);
}
inline ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword* BidRequest_AdSlot_LinkUnitInfo::mutable_keywords(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.keywords)
  return keywords_.Mutable(index);
}
inline ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword* BidRequest_AdSlot_LinkUnitInfo::add_keywords() {
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.keywords)
  return keywords_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword >*
BidRequest_AdSlot_LinkUnitInfo::mutable_keywords() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.keywords)
  return &keywords_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo_ProposedKeyword >&
BidRequest_AdSlot_LinkUnitInfo::keywords() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.LinkUnitInfo.keywords)
  return keywords_;
}

inline const BidRequest_AdSlot_LinkUnitInfo* BidRequest_AdSlot_LinkUnitInfo::internal_default_instance() {
  return &BidRequest_AdSlot_LinkUnitInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder

// optional string order_id = 1;
inline bool BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::has_order_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_has_order_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::clear_order_id() {
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_order_id();
}
inline const ::std::string& BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::order_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
  return order_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_order_id(const ::std::string& value) {
  set_has_order_id();
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_order_id(const char* value) {
  set_has_order_id();
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_order_id(const char* value, size_t size) {
  set_has_order_id();
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
}
inline ::std::string* BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::mutable_order_id() {
  set_has_order_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
  return order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::release_order_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
  clear_has_order_id();
  return order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_allocated_order_id(::std::string* order_id) {
  if (order_id != NULL) {
    set_has_order_id();
  } else {
    clear_has_order_id();
  }
  order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.order_id)
}

// optional int64 fixed_cpm = 2;
inline bool BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::has_fixed_cpm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_has_fixed_cpm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::clear_has_fixed_cpm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::clear_fixed_cpm() {
  fixed_cpm_ = GOOGLE_LONGLONG(0);
  clear_has_fixed_cpm();
}
inline ::google::protobuf::int64 BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::fixed_cpm() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.fixed_cpm)
  return fixed_cpm_;
}
inline void BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::set_fixed_cpm(::google::protobuf::int64 value) {
  set_has_fixed_cpm();
  fixed_cpm_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder.fixed_cpm)
}

inline const BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder::internal_default_instance() {
  return &BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_AdSlot_PreferredOrderInfo

// repeated .protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.PreferredOrder preferred_orders = 1;
inline int BidRequest_AdSlot_PreferredOrderInfo::preferred_orders_size() const {
  return preferred_orders_.size();
}
inline void BidRequest_AdSlot_PreferredOrderInfo::clear_preferred_orders() {
  preferred_orders_.Clear();
}
inline const ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder& BidRequest_AdSlot_PreferredOrderInfo::preferred_orders(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.preferred_orders)
  return preferred_orders_.Get(index);
}
inline ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* BidRequest_AdSlot_PreferredOrderInfo::mutable_preferred_orders(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.preferred_orders)
  return preferred_orders_.Mutable(index);
}
inline ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder* BidRequest_AdSlot_PreferredOrderInfo::add_preferred_orders() {
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.preferred_orders)
  return preferred_orders_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder >*
BidRequest_AdSlot_PreferredOrderInfo::mutable_preferred_orders() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.preferred_orders)
  return &preferred_orders_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo_PreferredOrder >&
BidRequest_AdSlot_PreferredOrderInfo::preferred_orders() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.preferred_orders)
  return preferred_orders_;
}

// optional bool allow_auction = 2 [default = true];
inline bool BidRequest_AdSlot_PreferredOrderInfo::has_allow_auction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_PreferredOrderInfo::set_has_allow_auction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo::clear_has_allow_auction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_PreferredOrderInfo::clear_allow_auction() {
  allow_auction_ = true;
  clear_has_allow_auction();
}
inline bool BidRequest_AdSlot_PreferredOrderInfo::allow_auction() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.allow_auction)
  return allow_auction_;
}
inline void BidRequest_AdSlot_PreferredOrderInfo::set_allow_auction(bool value) {
  set_has_allow_auction();
  allow_auction_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo.allow_auction)
}

inline const BidRequest_AdSlot_PreferredOrderInfo* BidRequest_AdSlot_PreferredOrderInfo::internal_default_instance() {
  return &BidRequest_AdSlot_PreferredOrderInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_AdSlot_GuaranteedOrder_Charge

// optional int32 price = 1;
inline bool BidRequest_AdSlot_GuaranteedOrder_Charge::has_price() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_GuaranteedOrder_Charge::set_has_price() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_GuaranteedOrder_Charge::clear_has_price() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_GuaranteedOrder_Charge::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_GuaranteedOrder_Charge::price() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.Charge.price)
  return price_;
}
inline void BidRequest_AdSlot_GuaranteedOrder_Charge::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.Charge.price)
}

// optional .protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.Charge.ChargeType charge_mode = 2 [default = CHARGE_GD_CPM];
inline bool BidRequest_AdSlot_GuaranteedOrder_Charge::has_charge_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_GuaranteedOrder_Charge::set_has_charge_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_GuaranteedOrder_Charge::clear_has_charge_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_GuaranteedOrder_Charge::clear_charge_mode() {
  charge_mode_ = 2;
  clear_has_charge_mode();
}
inline ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType BidRequest_AdSlot_GuaranteedOrder_Charge::charge_mode() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.Charge.charge_mode)
  return static_cast< ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType >(charge_mode_);
}
inline void BidRequest_AdSlot_GuaranteedOrder_Charge::set_charge_mode(::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType value) {
  assert(::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_IsValid(value));
  set_has_charge_mode();
  charge_mode_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.Charge.charge_mode)
}

inline const BidRequest_AdSlot_GuaranteedOrder_Charge* BidRequest_AdSlot_GuaranteedOrder_Charge::internal_default_instance() {
  return &BidRequest_AdSlot_GuaranteedOrder_Charge_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_AdSlot_GuaranteedOrder

// optional uint32 order_id = 1;
inline bool BidRequest_AdSlot_GuaranteedOrder::has_order_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_GuaranteedOrder::set_has_order_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_GuaranteedOrder::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_GuaranteedOrder::clear_order_id() {
  order_id_ = 0u;
  clear_has_order_id();
}
inline ::google::protobuf::uint32 BidRequest_AdSlot_GuaranteedOrder::order_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.order_id)
  return order_id_;
}
inline void BidRequest_AdSlot_GuaranteedOrder::set_order_id(::google::protobuf::uint32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.order_id)
}

// optional .protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.Charge charge = 2;
inline bool BidRequest_AdSlot_GuaranteedOrder::has_charge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_GuaranteedOrder::set_has_charge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_GuaranteedOrder::clear_has_charge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_GuaranteedOrder::clear_charge() {
  if (charge_ != NULL) charge_->::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge::Clear();
  clear_has_charge();
}
inline const ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge& BidRequest_AdSlot_GuaranteedOrder::charge() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.charge)
  return charge_ != NULL ? *charge_
                         : *::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge* BidRequest_AdSlot_GuaranteedOrder::mutable_charge() {
  set_has_charge();
  if (charge_ == NULL) {
    charge_ = new ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.charge)
  return charge_;
}
inline ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge* BidRequest_AdSlot_GuaranteedOrder::release_charge() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.charge)
  clear_has_charge();
  ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge* temp = charge_;
  charge_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot_GuaranteedOrder::set_allocated_charge(::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge* charge) {
  delete charge_;
  charge_ = charge;
  if (charge) {
    set_has_charge();
  } else {
    clear_has_charge();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.AdSlot.GuaranteedOrder.charge)
}

inline const BidRequest_AdSlot_GuaranteedOrder* BidRequest_AdSlot_GuaranteedOrder::internal_default_instance() {
  return &BidRequest_AdSlot_GuaranteedOrder_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_AdSlot_ExpandCreativeInfo

// repeated .protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.ActionType expand_action_type = 1;
inline int BidRequest_AdSlot_ExpandCreativeInfo::expand_action_type_size() const {
  return expand_action_type_.size();
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_action_type() {
  expand_action_type_.Clear();
}
inline ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType BidRequest_AdSlot_ExpandCreativeInfo::expand_action_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_action_type)
  return static_cast< ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType >(expand_action_type_.Get(index));
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_action_type(int index, ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType value) {
  assert(::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType_IsValid(value));
  expand_action_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_action_type)
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::add_expand_action_type(::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType value) {
  assert(::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType_IsValid(value));
  expand_action_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_action_type)
}
inline const ::google::protobuf::RepeatedField<int>&
BidRequest_AdSlot_ExpandCreativeInfo::expand_action_type() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_action_type)
  return expand_action_type_;
}
inline ::google::protobuf::RepeatedField<int>*
BidRequest_AdSlot_ExpandCreativeInfo::mutable_expand_action_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_action_type)
  return &expand_action_type_;
}

// optional .protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.Direction expand_direction = 2;
inline bool BidRequest_AdSlot_ExpandCreativeInfo::has_expand_direction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_has_expand_direction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_has_expand_direction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_direction() {
  expand_direction_ = 0;
  clear_has_expand_direction();
}
inline ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_Direction BidRequest_AdSlot_ExpandCreativeInfo::expand_direction() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_direction)
  return static_cast< ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_Direction >(expand_direction_);
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_direction(::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_Direction value) {
  assert(::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_Direction_IsValid(value));
  set_has_expand_direction();
  expand_direction_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_direction)
}

// repeated int32 expand_creative_type = 3 [packed = true];
inline int BidRequest_AdSlot_ExpandCreativeInfo::expand_creative_type_size() const {
  return expand_creative_type_.size();
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_creative_type() {
  expand_creative_type_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_ExpandCreativeInfo::expand_creative_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_creative_type)
  return expand_creative_type_.Get(index);
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_creative_type(int index, ::google::protobuf::int32 value) {
  expand_creative_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_creative_type)
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::add_expand_creative_type(::google::protobuf::int32 value) {
  expand_creative_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_creative_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot_ExpandCreativeInfo::expand_creative_type() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_creative_type)
  return expand_creative_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot_ExpandCreativeInfo::mutable_expand_creative_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_creative_type)
  return &expand_creative_type_;
}

// optional int32 expand_width = 4;
inline bool BidRequest_AdSlot_ExpandCreativeInfo::has_expand_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_has_expand_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_has_expand_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_width() {
  expand_width_ = 0;
  clear_has_expand_width();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_ExpandCreativeInfo::expand_width() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_width)
  return expand_width_;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_width(::google::protobuf::int32 value) {
  set_has_expand_width();
  expand_width_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_width)
}

// optional int32 expand_height = 5;
inline bool BidRequest_AdSlot_ExpandCreativeInfo::has_expand_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_has_expand_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_has_expand_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_height() {
  expand_height_ = 0;
  clear_has_expand_height();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_ExpandCreativeInfo::expand_height() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_height)
  return expand_height_;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_height(::google::protobuf::int32 value) {
  set_has_expand_height();
  expand_height_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_height)
}

// optional int32 expand_duration = 6;
inline bool BidRequest_AdSlot_ExpandCreativeInfo::has_expand_duration() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_has_expand_duration() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_has_expand_duration() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::clear_expand_duration() {
  expand_duration_ = 0;
  clear_has_expand_duration();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_ExpandCreativeInfo::expand_duration() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_duration)
  return expand_duration_;
}
inline void BidRequest_AdSlot_ExpandCreativeInfo::set_expand_duration(::google::protobuf::int32 value) {
  set_has_expand_duration();
  expand_duration_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo.expand_duration)
}

inline const BidRequest_AdSlot_ExpandCreativeInfo* BidRequest_AdSlot_ExpandCreativeInfo::internal_default_instance() {
  return &BidRequest_AdSlot_ExpandCreativeInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_AdSlot_NativeAdParam_ImageEle

// optional int32 width = 1;
inline bool BidRequest_AdSlot_NativeAdParam_ImageEle::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_NativeAdParam_ImageEle::width() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle.width)
  return width_;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle.width)
}

// optional int32 height = 2;
inline bool BidRequest_AdSlot_NativeAdParam_ImageEle::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_NativeAdParam_ImageEle::height() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle.height)
  return height_;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle.height)
}

// optional int32 shape = 3 [default = 0];
inline bool BidRequest_AdSlot_NativeAdParam_ImageEle::has_shape() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::set_has_shape() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::clear_has_shape() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::clear_shape() {
  shape_ = 0;
  clear_has_shape();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_NativeAdParam_ImageEle::shape() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle.shape)
  return shape_;
}
inline void BidRequest_AdSlot_NativeAdParam_ImageEle::set_shape(::google::protobuf::int32 value) {
  set_has_shape();
  shape_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle.shape)
}

inline const BidRequest_AdSlot_NativeAdParam_ImageEle* BidRequest_AdSlot_NativeAdParam_ImageEle::internal_default_instance() {
  return &BidRequest_AdSlot_NativeAdParam_ImageEle_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_AdSlot_NativeAdParam

// repeated int64 required_fields = 1;
inline int BidRequest_AdSlot_NativeAdParam::required_fields_size() const {
  return required_fields_.size();
}
inline void BidRequest_AdSlot_NativeAdParam::clear_required_fields() {
  required_fields_.Clear();
}
inline ::google::protobuf::int64 BidRequest_AdSlot_NativeAdParam::required_fields(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.NativeAdParam.required_fields)
  return required_fields_.Get(index);
}
inline void BidRequest_AdSlot_NativeAdParam::set_required_fields(int index, ::google::protobuf::int64 value) {
  required_fields_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.NativeAdParam.required_fields)
}
inline void BidRequest_AdSlot_NativeAdParam::add_required_fields(::google::protobuf::int64 value) {
  required_fields_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.NativeAdParam.required_fields)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
BidRequest_AdSlot_NativeAdParam::required_fields() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.NativeAdParam.required_fields)
  return required_fields_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
BidRequest_AdSlot_NativeAdParam::mutable_required_fields() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.NativeAdParam.required_fields)
  return &required_fields_;
}

// optional int32 title_max_length = 2;
inline bool BidRequest_AdSlot_NativeAdParam::has_title_max_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot_NativeAdParam::set_has_title_max_length() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot_NativeAdParam::clear_has_title_max_length() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot_NativeAdParam::clear_title_max_length() {
  title_max_length_ = 0;
  clear_has_title_max_length();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_NativeAdParam::title_max_length() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.NativeAdParam.title_max_length)
  return title_max_length_;
}
inline void BidRequest_AdSlot_NativeAdParam::set_title_max_length(::google::protobuf::int32 value) {
  set_has_title_max_length();
  title_max_length_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.NativeAdParam.title_max_length)
}

// optional int32 desc_max_length = 3;
inline bool BidRequest_AdSlot_NativeAdParam::has_desc_max_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_AdSlot_NativeAdParam::set_has_desc_max_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_AdSlot_NativeAdParam::clear_has_desc_max_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_AdSlot_NativeAdParam::clear_desc_max_length() {
  desc_max_length_ = 0;
  clear_has_desc_max_length();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_NativeAdParam::desc_max_length() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.NativeAdParam.desc_max_length)
  return desc_max_length_;
}
inline void BidRequest_AdSlot_NativeAdParam::set_desc_max_length(::google::protobuf::int32 value) {
  set_has_desc_max_length();
  desc_max_length_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.NativeAdParam.desc_max_length)
}

// optional .protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle logo_icon = 4;
inline bool BidRequest_AdSlot_NativeAdParam::has_logo_icon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_AdSlot_NativeAdParam::set_has_logo_icon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_AdSlot_NativeAdParam::clear_has_logo_icon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_AdSlot_NativeAdParam::clear_logo_icon() {
  if (logo_icon_ != NULL) logo_icon_->::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle::Clear();
  clear_has_logo_icon();
}
inline const ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle& BidRequest_AdSlot_NativeAdParam::logo_icon() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.NativeAdParam.logo_icon)
  return logo_icon_ != NULL ? *logo_icon_
                         : *::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* BidRequest_AdSlot_NativeAdParam::mutable_logo_icon() {
  set_has_logo_icon();
  if (logo_icon_ == NULL) {
    logo_icon_ = new ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.NativeAdParam.logo_icon)
  return logo_icon_;
}
inline ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* BidRequest_AdSlot_NativeAdParam::release_logo_icon() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.AdSlot.NativeAdParam.logo_icon)
  clear_has_logo_icon();
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* temp = logo_icon_;
  logo_icon_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot_NativeAdParam::set_allocated_logo_icon(::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* logo_icon) {
  delete logo_icon_;
  logo_icon_ = logo_icon;
  if (logo_icon) {
    set_has_logo_icon();
  } else {
    clear_has_logo_icon();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.AdSlot.NativeAdParam.logo_icon)
}

// optional .protocol.baidu.BidRequest.AdSlot.NativeAdParam.ImageEle image = 5;
inline bool BidRequest_AdSlot_NativeAdParam::has_image() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_AdSlot_NativeAdParam::set_has_image() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_AdSlot_NativeAdParam::clear_has_image() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_AdSlot_NativeAdParam::clear_image() {
  if (image_ != NULL) image_->::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle::Clear();
  clear_has_image();
}
inline const ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle& BidRequest_AdSlot_NativeAdParam::image() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.NativeAdParam.image)
  return image_ != NULL ? *image_
                         : *::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* BidRequest_AdSlot_NativeAdParam::mutable_image() {
  set_has_image();
  if (image_ == NULL) {
    image_ = new ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.NativeAdParam.image)
  return image_;
}
inline ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* BidRequest_AdSlot_NativeAdParam::release_image() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.AdSlot.NativeAdParam.image)
  clear_has_image();
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* temp = image_;
  image_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot_NativeAdParam::set_allocated_image(::protocol::baidu::BidRequest_AdSlot_NativeAdParam_ImageEle* image) {
  delete image_;
  image_ = image;
  if (image) {
    set_has_image();
  } else {
    clear_has_image();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.AdSlot.NativeAdParam.image)
}

// optional int32 image_num = 6;
inline bool BidRequest_AdSlot_NativeAdParam::has_image_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_AdSlot_NativeAdParam::set_has_image_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_AdSlot_NativeAdParam::clear_has_image_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_AdSlot_NativeAdParam::clear_image_num() {
  image_num_ = 0;
  clear_has_image_num();
}
inline ::google::protobuf::int32 BidRequest_AdSlot_NativeAdParam::image_num() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.NativeAdParam.image_num)
  return image_num_;
}
inline void BidRequest_AdSlot_NativeAdParam::set_image_num(::google::protobuf::int32 value) {
  set_has_image_num();
  image_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.NativeAdParam.image_num)
}

inline const BidRequest_AdSlot_NativeAdParam* BidRequest_AdSlot_NativeAdParam::internal_default_instance() {
  return &BidRequest_AdSlot_NativeAdParam_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest_AdSlot

// optional uint64 ad_block_key = 1;
inline bool BidRequest_AdSlot::has_ad_block_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest_AdSlot::set_has_ad_block_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest_AdSlot::clear_has_ad_block_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest_AdSlot::clear_ad_block_key() {
  ad_block_key_ = GOOGLE_ULONGLONG(0);
  clear_has_ad_block_key();
}
inline ::google::protobuf::uint64 BidRequest_AdSlot::ad_block_key() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.ad_block_key)
  return ad_block_key_;
}
inline void BidRequest_AdSlot::set_ad_block_key(::google::protobuf::uint64 value) {
  set_has_ad_block_key();
  ad_block_key_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.ad_block_key)
}

// optional int32 sequence_id = 2;
inline bool BidRequest_AdSlot::has_sequence_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest_AdSlot::set_has_sequence_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest_AdSlot::clear_has_sequence_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest_AdSlot::clear_sequence_id() {
  sequence_id_ = 0;
  clear_has_sequence_id();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::sequence_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.sequence_id)
  return sequence_id_;
}
inline void BidRequest_AdSlot::set_sequence_id(::google::protobuf::int32 value) {
  set_has_sequence_id();
  sequence_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.sequence_id)
}

// optional int32 adslot_type = 3;
inline bool BidRequest_AdSlot::has_adslot_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest_AdSlot::set_has_adslot_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest_AdSlot::clear_has_adslot_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest_AdSlot::clear_adslot_type() {
  adslot_type_ = 0;
  clear_has_adslot_type();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::adslot_type() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.adslot_type)
  return adslot_type_;
}
inline void BidRequest_AdSlot::set_adslot_type(::google::protobuf::int32 value) {
  set_has_adslot_type();
  adslot_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.adslot_type)
}

// optional int32 width = 4;
inline bool BidRequest_AdSlot::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest_AdSlot::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest_AdSlot::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest_AdSlot::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::width() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.width)
  return width_;
}
inline void BidRequest_AdSlot::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.width)
}

// optional int32 height = 5;
inline bool BidRequest_AdSlot::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest_AdSlot::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest_AdSlot::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest_AdSlot::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::height() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.height)
  return height_;
}
inline void BidRequest_AdSlot::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.height)
}

// optional int32 actual_width = 18;
inline bool BidRequest_AdSlot::has_actual_width() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidRequest_AdSlot::set_has_actual_width() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidRequest_AdSlot::clear_has_actual_width() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidRequest_AdSlot::clear_actual_width() {
  actual_width_ = 0;
  clear_has_actual_width();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::actual_width() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.actual_width)
  return actual_width_;
}
inline void BidRequest_AdSlot::set_actual_width(::google::protobuf::int32 value) {
  set_has_actual_width();
  actual_width_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.actual_width)
}

// optional int32 actual_height = 19;
inline bool BidRequest_AdSlot::has_actual_height() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidRequest_AdSlot::set_has_actual_height() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidRequest_AdSlot::clear_has_actual_height() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidRequest_AdSlot::clear_actual_height() {
  actual_height_ = 0;
  clear_has_actual_height();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::actual_height() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.actual_height)
  return actual_height_;
}
inline void BidRequest_AdSlot::set_actual_height(::google::protobuf::int32 value) {
  set_has_actual_height();
  actual_height_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.actual_height)
}

// optional int32 slot_visibility = 6;
inline bool BidRequest_AdSlot::has_slot_visibility() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidRequest_AdSlot::set_has_slot_visibility() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidRequest_AdSlot::clear_has_slot_visibility() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidRequest_AdSlot::clear_slot_visibility() {
  slot_visibility_ = 0;
  clear_has_slot_visibility();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::slot_visibility() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.slot_visibility)
  return slot_visibility_;
}
inline void BidRequest_AdSlot::set_slot_visibility(::google::protobuf::int32 value) {
  set_has_slot_visibility();
  slot_visibility_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.slot_visibility)
}

// repeated int32 creative_type = 7 [packed = true];
inline int BidRequest_AdSlot::creative_type_size() const {
  return creative_type_.size();
}
inline void BidRequest_AdSlot::clear_creative_type() {
  creative_type_.Clear();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::creative_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.creative_type)
  return creative_type_.Get(index);
}
inline void BidRequest_AdSlot::set_creative_type(int index, ::google::protobuf::int32 value) {
  creative_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.creative_type)
}
inline void BidRequest_AdSlot::add_creative_type(::google::protobuf::int32 value) {
  creative_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.creative_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest_AdSlot::creative_type() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.creative_type)
  return creative_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest_AdSlot::mutable_creative_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.creative_type)
  return &creative_type_;
}

// repeated .protocol.baidu.BidRequest.AdSlot.CreativeDescType creative_desc_type = 22;
inline int BidRequest_AdSlot::creative_desc_type_size() const {
  return creative_desc_type_.size();
}
inline void BidRequest_AdSlot::clear_creative_desc_type() {
  creative_desc_type_.Clear();
}
inline ::protocol::baidu::BidRequest_AdSlot_CreativeDescType BidRequest_AdSlot::creative_desc_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.creative_desc_type)
  return static_cast< ::protocol::baidu::BidRequest_AdSlot_CreativeDescType >(creative_desc_type_.Get(index));
}
inline void BidRequest_AdSlot::set_creative_desc_type(int index, ::protocol::baidu::BidRequest_AdSlot_CreativeDescType value) {
  assert(::protocol::baidu::BidRequest_AdSlot_CreativeDescType_IsValid(value));
  creative_desc_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.creative_desc_type)
}
inline void BidRequest_AdSlot::add_creative_desc_type(::protocol::baidu::BidRequest_AdSlot_CreativeDescType value) {
  assert(::protocol::baidu::BidRequest_AdSlot_CreativeDescType_IsValid(value));
  creative_desc_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.creative_desc_type)
}
inline const ::google::protobuf::RepeatedField<int>&
BidRequest_AdSlot::creative_desc_type() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.creative_desc_type)
  return creative_desc_type_;
}
inline ::google::protobuf::RepeatedField<int>*
BidRequest_AdSlot::mutable_creative_desc_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.creative_desc_type)
  return &creative_desc_type_;
}

// repeated string excluded_landing_page_url = 8;
inline int BidRequest_AdSlot::excluded_landing_page_url_size() const {
  return excluded_landing_page_url_.size();
}
inline void BidRequest_AdSlot::clear_excluded_landing_page_url() {
  excluded_landing_page_url_.Clear();
}
inline const ::std::string& BidRequest_AdSlot::excluded_landing_page_url(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.excluded_landing_page_url)
  return excluded_landing_page_url_.Get(index);
}
inline ::std::string* BidRequest_AdSlot::mutable_excluded_landing_page_url(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.excluded_landing_page_url)
  return excluded_landing_page_url_.Mutable(index);
}
inline void BidRequest_AdSlot::set_excluded_landing_page_url(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.excluded_landing_page_url)
  excluded_landing_page_url_.Mutable(index)->assign(value);
}
inline void BidRequest_AdSlot::set_excluded_landing_page_url(int index, const char* value) {
  excluded_landing_page_url_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.AdSlot.excluded_landing_page_url)
}
inline void BidRequest_AdSlot::set_excluded_landing_page_url(int index, const char* value, size_t size) {
  excluded_landing_page_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.AdSlot.excluded_landing_page_url)
}
inline ::std::string* BidRequest_AdSlot::add_excluded_landing_page_url() {
  // @@protoc_insertion_point(field_add_mutable:protocol.baidu.BidRequest.AdSlot.excluded_landing_page_url)
  return excluded_landing_page_url_.Add();
}
inline void BidRequest_AdSlot::add_excluded_landing_page_url(const ::std::string& value) {
  excluded_landing_page_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.excluded_landing_page_url)
}
inline void BidRequest_AdSlot::add_excluded_landing_page_url(const char* value) {
  excluded_landing_page_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.baidu.BidRequest.AdSlot.excluded_landing_page_url)
}
inline void BidRequest_AdSlot::add_excluded_landing_page_url(const char* value, size_t size) {
  excluded_landing_page_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.baidu.BidRequest.AdSlot.excluded_landing_page_url)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest_AdSlot::excluded_landing_page_url() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.excluded_landing_page_url)
  return excluded_landing_page_url_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest_AdSlot::mutable_excluded_landing_page_url() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.excluded_landing_page_url)
  return &excluded_landing_page_url_;
}

// repeated fixed64 publisher_settings_list_id = 14;
inline int BidRequest_AdSlot::publisher_settings_list_id_size() const {
  return publisher_settings_list_id_.size();
}
inline void BidRequest_AdSlot::clear_publisher_settings_list_id() {
  publisher_settings_list_id_.Clear();
}
inline ::google::protobuf::uint64 BidRequest_AdSlot::publisher_settings_list_id(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.publisher_settings_list_id)
  return publisher_settings_list_id_.Get(index);
}
inline void BidRequest_AdSlot::set_publisher_settings_list_id(int index, ::google::protobuf::uint64 value) {
  publisher_settings_list_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.publisher_settings_list_id)
}
inline void BidRequest_AdSlot::add_publisher_settings_list_id(::google::protobuf::uint64 value) {
  publisher_settings_list_id_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.publisher_settings_list_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BidRequest_AdSlot::publisher_settings_list_id() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.publisher_settings_list_id)
  return publisher_settings_list_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BidRequest_AdSlot::mutable_publisher_settings_list_id() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.publisher_settings_list_id)
  return &publisher_settings_list_id_;
}

// optional int32 minimum_cpm = 9;
inline bool BidRequest_AdSlot::has_minimum_cpm() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BidRequest_AdSlot::set_has_minimum_cpm() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BidRequest_AdSlot::clear_has_minimum_cpm() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BidRequest_AdSlot::clear_minimum_cpm() {
  minimum_cpm_ = 0;
  clear_has_minimum_cpm();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::minimum_cpm() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.minimum_cpm)
  return minimum_cpm_;
}
inline void BidRequest_AdSlot::set_minimum_cpm(::google::protobuf::int32 value) {
  set_has_minimum_cpm();
  minimum_cpm_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.minimum_cpm)
}

// optional int32 max_video_duration = 10;
inline bool BidRequest_AdSlot::has_max_video_duration() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidRequest_AdSlot::set_has_max_video_duration() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidRequest_AdSlot::clear_has_max_video_duration() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidRequest_AdSlot::clear_max_video_duration() {
  max_video_duration_ = 0;
  clear_has_max_video_duration();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::max_video_duration() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.max_video_duration)
  return max_video_duration_;
}
inline void BidRequest_AdSlot::set_max_video_duration(::google::protobuf::int32 value) {
  set_has_max_video_duration();
  max_video_duration_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.max_video_duration)
}

// optional int32 min_video_duration = 11;
inline bool BidRequest_AdSlot::has_min_video_duration() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BidRequest_AdSlot::set_has_min_video_duration() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BidRequest_AdSlot::clear_has_min_video_duration() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BidRequest_AdSlot::clear_min_video_duration() {
  min_video_duration_ = 0;
  clear_has_min_video_duration();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::min_video_duration() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.min_video_duration)
  return min_video_duration_;
}
inline void BidRequest_AdSlot::set_min_video_duration(::google::protobuf::int32 value) {
  set_has_min_video_duration();
  min_video_duration_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.min_video_duration)
}

// optional int32 video_start_delay = 12;
inline bool BidRequest_AdSlot::has_video_start_delay() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BidRequest_AdSlot::set_has_video_start_delay() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BidRequest_AdSlot::clear_has_video_start_delay() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BidRequest_AdSlot::clear_video_start_delay() {
  video_start_delay_ = 0;
  clear_has_video_start_delay();
}
inline ::google::protobuf::int32 BidRequest_AdSlot::video_start_delay() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.video_start_delay)
  return video_start_delay_;
}
inline void BidRequest_AdSlot::set_video_start_delay(::google::protobuf::int32 value) {
  set_has_video_start_delay();
  video_start_delay_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.video_start_delay)
}

// optional .protocol.baidu.BidRequest.AdSlot.VideoInfo video_info = 15;
inline bool BidRequest_AdSlot::has_video_info() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BidRequest_AdSlot::set_has_video_info() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BidRequest_AdSlot::clear_has_video_info() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BidRequest_AdSlot::clear_video_info() {
  if (video_info_ != NULL) video_info_->::protocol::baidu::BidRequest_AdSlot_VideoInfo::Clear();
  clear_has_video_info();
}
inline const ::protocol::baidu::BidRequest_AdSlot_VideoInfo& BidRequest_AdSlot::video_info() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.video_info)
  return video_info_ != NULL ? *video_info_
                         : *::protocol::baidu::BidRequest_AdSlot_VideoInfo::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_AdSlot_VideoInfo* BidRequest_AdSlot::mutable_video_info() {
  set_has_video_info();
  if (video_info_ == NULL) {
    video_info_ = new ::protocol::baidu::BidRequest_AdSlot_VideoInfo;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.video_info)
  return video_info_;
}
inline ::protocol::baidu::BidRequest_AdSlot_VideoInfo* BidRequest_AdSlot::release_video_info() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.AdSlot.video_info)
  clear_has_video_info();
  ::protocol::baidu::BidRequest_AdSlot_VideoInfo* temp = video_info_;
  video_info_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot::set_allocated_video_info(::protocol::baidu::BidRequest_AdSlot_VideoInfo* video_info) {
  delete video_info_;
  video_info_ = video_info;
  if (video_info) {
    set_has_video_info();
  } else {
    clear_has_video_info();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.AdSlot.video_info)
}

// optional .protocol.baidu.BidRequest.AdSlot.LinkUnitInfo link_unit_info = 16;
inline bool BidRequest_AdSlot::has_link_unit_info() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BidRequest_AdSlot::set_has_link_unit_info() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BidRequest_AdSlot::clear_has_link_unit_info() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BidRequest_AdSlot::clear_link_unit_info() {
  if (link_unit_info_ != NULL) link_unit_info_->::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo::Clear();
  clear_has_link_unit_info();
}
inline const ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo& BidRequest_AdSlot::link_unit_info() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.link_unit_info)
  return link_unit_info_ != NULL ? *link_unit_info_
                         : *::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo* BidRequest_AdSlot::mutable_link_unit_info() {
  set_has_link_unit_info();
  if (link_unit_info_ == NULL) {
    link_unit_info_ = new ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.link_unit_info)
  return link_unit_info_;
}
inline ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo* BidRequest_AdSlot::release_link_unit_info() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.AdSlot.link_unit_info)
  clear_has_link_unit_info();
  ::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo* temp = link_unit_info_;
  link_unit_info_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot::set_allocated_link_unit_info(::protocol::baidu::BidRequest_AdSlot_LinkUnitInfo* link_unit_info) {
  delete link_unit_info_;
  link_unit_info_ = link_unit_info;
  if (link_unit_info) {
    set_has_link_unit_info();
  } else {
    clear_has_link_unit_info();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.AdSlot.link_unit_info)
}

// optional .protocol.baidu.BidRequest.AdSlot.PreferredOrderInfo preferred_order_info = 13;
inline bool BidRequest_AdSlot::has_preferred_order_info() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BidRequest_AdSlot::set_has_preferred_order_info() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BidRequest_AdSlot::clear_has_preferred_order_info() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BidRequest_AdSlot::clear_preferred_order_info() {
  if (preferred_order_info_ != NULL) preferred_order_info_->::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo::Clear();
  clear_has_preferred_order_info();
}
inline const ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo& BidRequest_AdSlot::preferred_order_info() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.preferred_order_info)
  return preferred_order_info_ != NULL ? *preferred_order_info_
                         : *::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo* BidRequest_AdSlot::mutable_preferred_order_info() {
  set_has_preferred_order_info();
  if (preferred_order_info_ == NULL) {
    preferred_order_info_ = new ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.preferred_order_info)
  return preferred_order_info_;
}
inline ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo* BidRequest_AdSlot::release_preferred_order_info() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.AdSlot.preferred_order_info)
  clear_has_preferred_order_info();
  ::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo* temp = preferred_order_info_;
  preferred_order_info_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot::set_allocated_preferred_order_info(::protocol::baidu::BidRequest_AdSlot_PreferredOrderInfo* preferred_order_info) {
  delete preferred_order_info_;
  preferred_order_info_ = preferred_order_info;
  if (preferred_order_info) {
    set_has_preferred_order_info();
  } else {
    clear_has_preferred_order_info();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.AdSlot.preferred_order_info)
}

// repeated .protocol.baidu.BidRequest.AdSlot.GuaranteedOrder guaranteed_orders = 20;
inline int BidRequest_AdSlot::guaranteed_orders_size() const {
  return guaranteed_orders_.size();
}
inline void BidRequest_AdSlot::clear_guaranteed_orders() {
  guaranteed_orders_.Clear();
}
inline const ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder& BidRequest_AdSlot::guaranteed_orders(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.guaranteed_orders)
  return guaranteed_orders_.Get(index);
}
inline ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder* BidRequest_AdSlot::mutable_guaranteed_orders(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.guaranteed_orders)
  return guaranteed_orders_.Mutable(index);
}
inline ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder* BidRequest_AdSlot::add_guaranteed_orders() {
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.AdSlot.guaranteed_orders)
  return guaranteed_orders_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder >*
BidRequest_AdSlot::mutable_guaranteed_orders() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.AdSlot.guaranteed_orders)
  return &guaranteed_orders_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder >&
BidRequest_AdSlot::guaranteed_orders() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.AdSlot.guaranteed_orders)
  return guaranteed_orders_;
}

// optional .protocol.baidu.BidRequest.AdSlot.ExpandCreativeInfo expand_creative_info = 17;
inline bool BidRequest_AdSlot::has_expand_creative_info() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void BidRequest_AdSlot::set_has_expand_creative_info() {
  _has_bits_[0] |= 0x00100000u;
}
inline void BidRequest_AdSlot::clear_has_expand_creative_info() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void BidRequest_AdSlot::clear_expand_creative_info() {
  if (expand_creative_info_ != NULL) expand_creative_info_->::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo::Clear();
  clear_has_expand_creative_info();
}
inline const ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo& BidRequest_AdSlot::expand_creative_info() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.expand_creative_info)
  return expand_creative_info_ != NULL ? *expand_creative_info_
                         : *::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo* BidRequest_AdSlot::mutable_expand_creative_info() {
  set_has_expand_creative_info();
  if (expand_creative_info_ == NULL) {
    expand_creative_info_ = new ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.expand_creative_info)
  return expand_creative_info_;
}
inline ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo* BidRequest_AdSlot::release_expand_creative_info() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.AdSlot.expand_creative_info)
  clear_has_expand_creative_info();
  ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo* temp = expand_creative_info_;
  expand_creative_info_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot::set_allocated_expand_creative_info(::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo* expand_creative_info) {
  delete expand_creative_info_;
  expand_creative_info_ = expand_creative_info;
  if (expand_creative_info) {
    set_has_expand_creative_info();
  } else {
    clear_has_expand_creative_info();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.AdSlot.expand_creative_info)
}

// optional .protocol.baidu.BidRequest.AdSlot.AdSlotLevel adslot_level = 21 [default = UNKNOWN_ADB_LEVEL];
inline bool BidRequest_AdSlot::has_adslot_level() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void BidRequest_AdSlot::set_has_adslot_level() {
  _has_bits_[0] |= 0x00200000u;
}
inline void BidRequest_AdSlot::clear_has_adslot_level() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void BidRequest_AdSlot::clear_adslot_level() {
  adslot_level_ = 0;
  clear_has_adslot_level();
}
inline ::protocol::baidu::BidRequest_AdSlot_AdSlotLevel BidRequest_AdSlot::adslot_level() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.adslot_level)
  return static_cast< ::protocol::baidu::BidRequest_AdSlot_AdSlotLevel >(adslot_level_);
}
inline void BidRequest_AdSlot::set_adslot_level(::protocol::baidu::BidRequest_AdSlot_AdSlotLevel value) {
  assert(::protocol::baidu::BidRequest_AdSlot_AdSlotLevel_IsValid(value));
  set_has_adslot_level();
  adslot_level_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.adslot_level)
}

// optional bool allowed_non_nativead = 23 [default = true];
inline bool BidRequest_AdSlot::has_allowed_non_nativead() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void BidRequest_AdSlot::set_has_allowed_non_nativead() {
  _has_bits_[0] |= 0x00400000u;
}
inline void BidRequest_AdSlot::clear_has_allowed_non_nativead() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void BidRequest_AdSlot::clear_allowed_non_nativead() {
  allowed_non_nativead_ = true;
  clear_has_allowed_non_nativead();
}
inline bool BidRequest_AdSlot::allowed_non_nativead() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.allowed_non_nativead)
  return allowed_non_nativead_;
}
inline void BidRequest_AdSlot::set_allowed_non_nativead(bool value) {
  set_has_allowed_non_nativead();
  allowed_non_nativead_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.allowed_non_nativead)
}

// optional .protocol.baidu.BidRequest.AdSlot.NativeAdParam nativead_param = 24;
inline bool BidRequest_AdSlot::has_nativead_param() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void BidRequest_AdSlot::set_has_nativead_param() {
  _has_bits_[0] |= 0x00800000u;
}
inline void BidRequest_AdSlot::clear_has_nativead_param() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void BidRequest_AdSlot::clear_nativead_param() {
  if (nativead_param_ != NULL) nativead_param_->::protocol::baidu::BidRequest_AdSlot_NativeAdParam::Clear();
  clear_has_nativead_param();
}
inline const ::protocol::baidu::BidRequest_AdSlot_NativeAdParam& BidRequest_AdSlot::nativead_param() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.nativead_param)
  return nativead_param_ != NULL ? *nativead_param_
                         : *::protocol::baidu::BidRequest_AdSlot_NativeAdParam::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_AdSlot_NativeAdParam* BidRequest_AdSlot::mutable_nativead_param() {
  set_has_nativead_param();
  if (nativead_param_ == NULL) {
    nativead_param_ = new ::protocol::baidu::BidRequest_AdSlot_NativeAdParam;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.AdSlot.nativead_param)
  return nativead_param_;
}
inline ::protocol::baidu::BidRequest_AdSlot_NativeAdParam* BidRequest_AdSlot::release_nativead_param() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.AdSlot.nativead_param)
  clear_has_nativead_param();
  ::protocol::baidu::BidRequest_AdSlot_NativeAdParam* temp = nativead_param_;
  nativead_param_ = NULL;
  return temp;
}
inline void BidRequest_AdSlot::set_allocated_nativead_param(::protocol::baidu::BidRequest_AdSlot_NativeAdParam* nativead_param) {
  delete nativead_param_;
  nativead_param_ = nativead_param;
  if (nativead_param) {
    set_has_nativead_param();
  } else {
    clear_has_nativead_param();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.AdSlot.nativead_param)
}

// optional bool secure = 25 [default = false];
inline bool BidRequest_AdSlot::has_secure() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void BidRequest_AdSlot::set_has_secure() {
  _has_bits_[0] |= 0x01000000u;
}
inline void BidRequest_AdSlot::clear_has_secure() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void BidRequest_AdSlot::clear_secure() {
  secure_ = false;
  clear_has_secure();
}
inline bool BidRequest_AdSlot::secure() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.AdSlot.secure)
  return secure_;
}
inline void BidRequest_AdSlot::set_secure(bool value) {
  set_has_secure();
  secure_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.AdSlot.secure)
}

inline const BidRequest_AdSlot* BidRequest_AdSlot::internal_default_instance() {
  return &BidRequest_AdSlot_default_instance_.get();
}
// -------------------------------------------------------------------

// BidRequest

// required string id = 1;
inline bool BidRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& BidRequest::id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.id)
}
inline void BidRequest::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.id)
}
inline void BidRequest::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.id)
}
inline ::std::string* BidRequest::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.id)
}

// optional string ip = 2;
inline bool BidRequest::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidRequest::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidRequest::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidRequest::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& BidRequest::ip() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.ip)
}
inline void BidRequest::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.ip)
}
inline void BidRequest::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.ip)
}
inline ::std::string* BidRequest::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_ip() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.ip)
}

// optional string user_agent = 3;
inline bool BidRequest::has_user_agent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidRequest::set_has_user_agent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidRequest::clear_has_user_agent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidRequest::clear_user_agent() {
  user_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_agent();
}
inline const ::std::string& BidRequest::user_agent() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.user_agent)
  return user_agent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_user_agent(const ::std::string& value) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.user_agent)
}
inline void BidRequest::set_user_agent(const char* value) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.user_agent)
}
inline void BidRequest::set_user_agent(const char* value, size_t size) {
  set_has_user_agent();
  user_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.user_agent)
}
inline ::std::string* BidRequest::mutable_user_agent() {
  set_has_user_agent();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.user_agent)
  return user_agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_user_agent() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.user_agent)
  clear_has_user_agent();
  return user_agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_user_agent(::std::string* user_agent) {
  if (user_agent != NULL) {
    set_has_user_agent();
  } else {
    clear_has_user_agent();
  }
  user_agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_agent);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.user_agent)
}

// optional string baidu_user_id = 4;
inline bool BidRequest::has_baidu_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidRequest::set_has_baidu_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidRequest::clear_has_baidu_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidRequest::clear_baidu_user_id() {
  baidu_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_baidu_user_id();
}
inline const ::std::string& BidRequest::baidu_user_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.baidu_user_id)
  return baidu_user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_baidu_user_id(const ::std::string& value) {
  set_has_baidu_user_id();
  baidu_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.baidu_user_id)
}
inline void BidRequest::set_baidu_user_id(const char* value) {
  set_has_baidu_user_id();
  baidu_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.baidu_user_id)
}
inline void BidRequest::set_baidu_user_id(const char* value, size_t size) {
  set_has_baidu_user_id();
  baidu_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.baidu_user_id)
}
inline ::std::string* BidRequest::mutable_baidu_user_id() {
  set_has_baidu_user_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.baidu_user_id)
  return baidu_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_baidu_user_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.baidu_user_id)
  clear_has_baidu_user_id();
  return baidu_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_baidu_user_id(::std::string* baidu_user_id) {
  if (baidu_user_id != NULL) {
    set_has_baidu_user_id();
  } else {
    clear_has_baidu_user_id();
  }
  baidu_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), baidu_user_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.baidu_user_id)
}

// optional int32 baidu_user_id_version = 5;
inline bool BidRequest::has_baidu_user_id_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidRequest::set_has_baidu_user_id_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidRequest::clear_has_baidu_user_id_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidRequest::clear_baidu_user_id_version() {
  baidu_user_id_version_ = 0;
  clear_has_baidu_user_id_version();
}
inline ::google::protobuf::int32 BidRequest::baidu_user_id_version() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.baidu_user_id_version)
  return baidu_user_id_version_;
}
inline void BidRequest::set_baidu_user_id_version(::google::protobuf::int32 value) {
  set_has_baidu_user_id_version();
  baidu_user_id_version_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.baidu_user_id_version)
}

// repeated .protocol.baidu.BidRequest.BaiduId baidu_id_list = 8;
inline int BidRequest::baidu_id_list_size() const {
  return baidu_id_list_.size();
}
inline void BidRequest::clear_baidu_id_list() {
  baidu_id_list_.Clear();
}
inline const ::protocol::baidu::BidRequest_BaiduId& BidRequest::baidu_id_list(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.baidu_id_list)
  return baidu_id_list_.Get(index);
}
inline ::protocol::baidu::BidRequest_BaiduId* BidRequest::mutable_baidu_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.baidu_id_list)
  return baidu_id_list_.Mutable(index);
}
inline ::protocol::baidu::BidRequest_BaiduId* BidRequest::add_baidu_id_list() {
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.baidu_id_list)
  return baidu_id_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_BaiduId >*
BidRequest::mutable_baidu_id_list() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.baidu_id_list)
  return &baidu_id_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_BaiduId >&
BidRequest::baidu_id_list() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.baidu_id_list)
  return baidu_id_list_;
}

// optional string buyer_user_id = 32;
inline bool BidRequest::has_buyer_user_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidRequest::set_has_buyer_user_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidRequest::clear_has_buyer_user_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidRequest::clear_buyer_user_id() {
  buyer_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buyer_user_id();
}
inline const ::std::string& BidRequest::buyer_user_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.buyer_user_id)
  return buyer_user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_buyer_user_id(const ::std::string& value) {
  set_has_buyer_user_id();
  buyer_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.buyer_user_id)
}
inline void BidRequest::set_buyer_user_id(const char* value) {
  set_has_buyer_user_id();
  buyer_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.buyer_user_id)
}
inline void BidRequest::set_buyer_user_id(const char* value, size_t size) {
  set_has_buyer_user_id();
  buyer_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.buyer_user_id)
}
inline ::std::string* BidRequest::mutable_buyer_user_id() {
  set_has_buyer_user_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.buyer_user_id)
  return buyer_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_buyer_user_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.buyer_user_id)
  clear_has_buyer_user_id();
  return buyer_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_buyer_user_id(::std::string* buyer_user_id) {
  if (buyer_user_id != NULL) {
    set_has_buyer_user_id();
  } else {
    clear_has_buyer_user_id();
  }
  buyer_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buyer_user_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.buyer_user_id)
}

// repeated int64 user_category = 6;
inline int BidRequest::user_category_size() const {
  return user_category_.size();
}
inline void BidRequest::clear_user_category() {
  user_category_.Clear();
}
inline ::google::protobuf::int64 BidRequest::user_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.user_category)
  return user_category_.Get(index);
}
inline void BidRequest::set_user_category(int index, ::google::protobuf::int64 value) {
  user_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.user_category)
}
inline void BidRequest::add_user_category(::google::protobuf::int64 value) {
  user_category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.user_category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
BidRequest::user_category() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.user_category)
  return user_category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
BidRequest::mutable_user_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.user_category)
  return &user_category_;
}

// optional .protocol.baidu.BidRequest.CustomizedUserTag customized_user_tag = 31;
inline bool BidRequest::has_customized_user_tag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BidRequest::set_has_customized_user_tag() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BidRequest::clear_has_customized_user_tag() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BidRequest::clear_customized_user_tag() {
  if (customized_user_tag_ != NULL) customized_user_tag_->::protocol::baidu::BidRequest_CustomizedUserTag::Clear();
  clear_has_customized_user_tag();
}
inline const ::protocol::baidu::BidRequest_CustomizedUserTag& BidRequest::customized_user_tag() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.customized_user_tag)
  return customized_user_tag_ != NULL ? *customized_user_tag_
                         : *::protocol::baidu::BidRequest_CustomizedUserTag::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_CustomizedUserTag* BidRequest::mutable_customized_user_tag() {
  set_has_customized_user_tag();
  if (customized_user_tag_ == NULL) {
    customized_user_tag_ = new ::protocol::baidu::BidRequest_CustomizedUserTag;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.customized_user_tag)
  return customized_user_tag_;
}
inline ::protocol::baidu::BidRequest_CustomizedUserTag* BidRequest::release_customized_user_tag() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.customized_user_tag)
  clear_has_customized_user_tag();
  ::protocol::baidu::BidRequest_CustomizedUserTag* temp = customized_user_tag_;
  customized_user_tag_ = NULL;
  return temp;
}
inline void BidRequest::set_allocated_customized_user_tag(::protocol::baidu::BidRequest_CustomizedUserTag* customized_user_tag) {
  delete customized_user_tag_;
  customized_user_tag_ = customized_user_tag;
  if (customized_user_tag) {
    set_has_customized_user_tag();
  } else {
    clear_has_customized_user_tag();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.customized_user_tag)
}

// optional .protocol.baidu.BidRequest.Gender gender = 7;
inline bool BidRequest::has_gender() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidRequest::set_has_gender() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidRequest::clear_has_gender() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidRequest::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::protocol::baidu::BidRequest_Gender BidRequest::gender() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.gender)
  return static_cast< ::protocol::baidu::BidRequest_Gender >(gender_);
}
inline void BidRequest::set_gender(::protocol::baidu::BidRequest_Gender value) {
  assert(::protocol::baidu::BidRequest_Gender_IsValid(value));
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.gender)
}

// optional string detected_language = 9;
inline bool BidRequest::has_detected_language() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BidRequest::set_has_detected_language() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BidRequest::clear_has_detected_language() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BidRequest::clear_detected_language() {
  detected_language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detected_language();
}
inline const ::std::string& BidRequest::detected_language() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.detected_language)
  return detected_language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_detected_language(const ::std::string& value) {
  set_has_detected_language();
  detected_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.detected_language)
}
inline void BidRequest::set_detected_language(const char* value) {
  set_has_detected_language();
  detected_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.detected_language)
}
inline void BidRequest::set_detected_language(const char* value, size_t size) {
  set_has_detected_language();
  detected_language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.detected_language)
}
inline ::std::string* BidRequest::mutable_detected_language() {
  set_has_detected_language();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.detected_language)
  return detected_language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_detected_language() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.detected_language)
  clear_has_detected_language();
  return detected_language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_detected_language(::std::string* detected_language) {
  if (detected_language != NULL) {
    set_has_detected_language();
  } else {
    clear_has_detected_language();
  }
  detected_language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detected_language);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.detected_language)
}

// optional string flash_version = 10;
inline bool BidRequest::has_flash_version() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BidRequest::set_has_flash_version() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BidRequest::clear_has_flash_version() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BidRequest::clear_flash_version() {
  flash_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_flash_version();
}
inline const ::std::string& BidRequest::flash_version() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.flash_version)
  return flash_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_flash_version(const ::std::string& value) {
  set_has_flash_version();
  flash_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.flash_version)
}
inline void BidRequest::set_flash_version(const char* value) {
  set_has_flash_version();
  flash_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.flash_version)
}
inline void BidRequest::set_flash_version(const char* value, size_t size) {
  set_has_flash_version();
  flash_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.flash_version)
}
inline ::std::string* BidRequest::mutable_flash_version() {
  set_has_flash_version();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.flash_version)
  return flash_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_flash_version() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.flash_version)
  clear_has_flash_version();
  return flash_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_flash_version(::std::string* flash_version) {
  if (flash_version != NULL) {
    set_has_flash_version();
  } else {
    clear_has_flash_version();
  }
  flash_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flash_version);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.flash_version)
}

// optional .protocol.baidu.BidRequest.Geo user_geo_info = 28;
inline bool BidRequest::has_user_geo_info() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BidRequest::set_has_user_geo_info() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BidRequest::clear_has_user_geo_info() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BidRequest::clear_user_geo_info() {
  if (user_geo_info_ != NULL) user_geo_info_->::protocol::baidu::BidRequest_Geo::Clear();
  clear_has_user_geo_info();
}
inline const ::protocol::baidu::BidRequest_Geo& BidRequest::user_geo_info() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.user_geo_info)
  return user_geo_info_ != NULL ? *user_geo_info_
                         : *::protocol::baidu::BidRequest_Geo::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_Geo* BidRequest::mutable_user_geo_info() {
  set_has_user_geo_info();
  if (user_geo_info_ == NULL) {
    user_geo_info_ = new ::protocol::baidu::BidRequest_Geo;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.user_geo_info)
  return user_geo_info_;
}
inline ::protocol::baidu::BidRequest_Geo* BidRequest::release_user_geo_info() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.user_geo_info)
  clear_has_user_geo_info();
  ::protocol::baidu::BidRequest_Geo* temp = user_geo_info_;
  user_geo_info_ = NULL;
  return temp;
}
inline void BidRequest::set_allocated_user_geo_info(::protocol::baidu::BidRequest_Geo* user_geo_info) {
  delete user_geo_info_;
  user_geo_info_ = user_geo_info;
  if (user_geo_info) {
    set_has_user_geo_info();
  } else {
    clear_has_user_geo_info();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.user_geo_info)
}

// optional string url = 11;
inline bool BidRequest::has_url() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidRequest::set_has_url() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& BidRequest::url() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.url)
}
inline void BidRequest::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.url)
}
inline void BidRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.url)
}
inline ::std::string* BidRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_url() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.url)
}

// optional string referer = 12;
inline bool BidRequest::has_referer() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BidRequest::set_has_referer() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BidRequest::clear_has_referer() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BidRequest::clear_referer() {
  referer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_referer();
}
inline const ::std::string& BidRequest::referer() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.referer)
  return referer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_referer(const ::std::string& value) {
  set_has_referer();
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.referer)
}
inline void BidRequest::set_referer(const char* value) {
  set_has_referer();
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.referer)
}
inline void BidRequest::set_referer(const char* value, size_t size) {
  set_has_referer();
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.referer)
}
inline ::std::string* BidRequest::mutable_referer() {
  set_has_referer();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.referer)
  return referer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidRequest::release_referer() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.referer)
  clear_has_referer();
  return referer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidRequest::set_allocated_referer(::std::string* referer) {
  if (referer != NULL) {
    set_has_referer();
  } else {
    clear_has_referer();
  }
  referer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referer);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.referer)
}

// optional int32 site_category = 13;
inline bool BidRequest::has_site_category() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BidRequest::set_has_site_category() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BidRequest::clear_has_site_category() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BidRequest::clear_site_category() {
  site_category_ = 0;
  clear_has_site_category();
}
inline ::google::protobuf::int32 BidRequest::site_category() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.site_category)
  return site_category_;
}
inline void BidRequest::set_site_category(::google::protobuf::int32 value) {
  set_has_site_category();
  site_category_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.site_category)
}

// optional int32 site_quality = 14;
inline bool BidRequest::has_site_quality() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BidRequest::set_has_site_quality() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BidRequest::clear_has_site_quality() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BidRequest::clear_site_quality() {
  site_quality_ = 0;
  clear_has_site_quality();
}
inline ::google::protobuf::int32 BidRequest::site_quality() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.site_quality)
  return site_quality_;
}
inline void BidRequest::set_site_quality(::google::protobuf::int32 value) {
  set_has_site_quality();
  site_quality_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.site_quality)
}

// optional int32 page_type = 15;
inline bool BidRequest::has_page_type() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BidRequest::set_has_page_type() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BidRequest::clear_has_page_type() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BidRequest::clear_page_type() {
  page_type_ = 0;
  clear_has_page_type();
}
inline ::google::protobuf::int32 BidRequest::page_type() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.page_type)
  return page_type_;
}
inline void BidRequest::set_page_type(::google::protobuf::int32 value) {
  set_has_page_type();
  page_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.page_type)
}

// repeated string page_keyword = 17;
inline int BidRequest::page_keyword_size() const {
  return page_keyword_.size();
}
inline void BidRequest::clear_page_keyword() {
  page_keyword_.Clear();
}
inline const ::std::string& BidRequest::page_keyword(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.page_keyword)
  return page_keyword_.Get(index);
}
inline ::std::string* BidRequest::mutable_page_keyword(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.page_keyword)
  return page_keyword_.Mutable(index);
}
inline void BidRequest::set_page_keyword(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.page_keyword)
  page_keyword_.Mutable(index)->assign(value);
}
inline void BidRequest::set_page_keyword(int index, const char* value) {
  page_keyword_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidRequest.page_keyword)
}
inline void BidRequest::set_page_keyword(int index, const char* value, size_t size) {
  page_keyword_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidRequest.page_keyword)
}
inline ::std::string* BidRequest::add_page_keyword() {
  // @@protoc_insertion_point(field_add_mutable:protocol.baidu.BidRequest.page_keyword)
  return page_keyword_.Add();
}
inline void BidRequest::add_page_keyword(const ::std::string& value) {
  page_keyword_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.page_keyword)
}
inline void BidRequest::add_page_keyword(const char* value) {
  page_keyword_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.baidu.BidRequest.page_keyword)
}
inline void BidRequest::add_page_keyword(const char* value, size_t size) {
  page_keyword_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.baidu.BidRequest.page_keyword)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidRequest::page_keyword() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.page_keyword)
  return page_keyword_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidRequest::mutable_page_keyword() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.page_keyword)
  return &page_keyword_;
}

// optional int32 page_quality = 18;
inline bool BidRequest::has_page_quality() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BidRequest::set_has_page_quality() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BidRequest::clear_has_page_quality() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BidRequest::clear_page_quality() {
  page_quality_ = 0;
  clear_has_page_quality();
}
inline ::google::protobuf::int32 BidRequest::page_quality() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.page_quality)
  return page_quality_;
}
inline void BidRequest::set_page_quality(::google::protobuf::int32 value) {
  set_has_page_quality();
  page_quality_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.page_quality)
}

// optional int32 page_vertical = 21;
inline bool BidRequest::has_page_vertical() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void BidRequest::set_has_page_vertical() {
  _has_bits_[0] |= 0x00100000u;
}
inline void BidRequest::clear_has_page_vertical() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void BidRequest::clear_page_vertical() {
  page_vertical_ = 0;
  clear_has_page_vertical();
}
inline ::google::protobuf::int32 BidRequest::page_vertical() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.page_vertical)
  return page_vertical_;
}
inline void BidRequest::set_page_vertical(::google::protobuf::int32 value) {
  set_has_page_vertical();
  page_vertical_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.page_vertical)
}

// repeated int32 excluded_product_category = 19 [packed = true];
inline int BidRequest::excluded_product_category_size() const {
  return excluded_product_category_.size();
}
inline void BidRequest::clear_excluded_product_category() {
  excluded_product_category_.Clear();
}
inline ::google::protobuf::int32 BidRequest::excluded_product_category(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.excluded_product_category)
  return excluded_product_category_.Get(index);
}
inline void BidRequest::set_excluded_product_category(int index, ::google::protobuf::int32 value) {
  excluded_product_category_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.excluded_product_category)
}
inline void BidRequest::add_excluded_product_category(::google::protobuf::int32 value) {
  excluded_product_category_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.excluded_product_category)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidRequest::excluded_product_category() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.excluded_product_category)
  return excluded_product_category_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidRequest::mutable_excluded_product_category() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.excluded_product_category)
  return &excluded_product_category_;
}

// optional .protocol.baidu.BidRequest.Mobile mobile = 29;
inline bool BidRequest::has_mobile() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void BidRequest::set_has_mobile() {
  _has_bits_[0] |= 0x00400000u;
}
inline void BidRequest::clear_has_mobile() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void BidRequest::clear_mobile() {
  if (mobile_ != NULL) mobile_->::protocol::baidu::BidRequest_Mobile::Clear();
  clear_has_mobile();
}
inline const ::protocol::baidu::BidRequest_Mobile& BidRequest::mobile() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.mobile)
  return mobile_ != NULL ? *mobile_
                         : *::protocol::baidu::BidRequest_Mobile::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_Mobile* BidRequest::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == NULL) {
    mobile_ = new ::protocol::baidu::BidRequest_Mobile;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.mobile)
  return mobile_;
}
inline ::protocol::baidu::BidRequest_Mobile* BidRequest::release_mobile() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.mobile)
  clear_has_mobile();
  ::protocol::baidu::BidRequest_Mobile* temp = mobile_;
  mobile_ = NULL;
  return temp;
}
inline void BidRequest::set_allocated_mobile(::protocol::baidu::BidRequest_Mobile* mobile) {
  delete mobile_;
  mobile_ = mobile;
  if (mobile) {
    set_has_mobile();
  } else {
    clear_has_mobile();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.mobile)
}

// optional .protocol.baidu.BidRequest.Video video = 30;
inline bool BidRequest::has_video() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void BidRequest::set_has_video() {
  _has_bits_[0] |= 0x00800000u;
}
inline void BidRequest::clear_has_video() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void BidRequest::clear_video() {
  if (video_ != NULL) video_->::protocol::baidu::BidRequest_Video::Clear();
  clear_has_video();
}
inline const ::protocol::baidu::BidRequest_Video& BidRequest::video() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.video)
  return video_ != NULL ? *video_
                         : *::protocol::baidu::BidRequest_Video::internal_default_instance();
}
inline ::protocol::baidu::BidRequest_Video* BidRequest::mutable_video() {
  set_has_video();
  if (video_ == NULL) {
    video_ = new ::protocol::baidu::BidRequest_Video;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.video)
  return video_;
}
inline ::protocol::baidu::BidRequest_Video* BidRequest::release_video() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidRequest.video)
  clear_has_video();
  ::protocol::baidu::BidRequest_Video* temp = video_;
  video_ = NULL;
  return temp;
}
inline void BidRequest::set_allocated_video(::protocol::baidu::BidRequest_Video* video) {
  delete video_;
  video_ = video;
  if (video) {
    set_has_video();
  } else {
    clear_has_video();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidRequest.video)
}

// repeated .protocol.baidu.BidRequest.AdSlot adslot = 20;
inline int BidRequest::adslot_size() const {
  return adslot_.size();
}
inline void BidRequest::clear_adslot() {
  adslot_.Clear();
}
inline const ::protocol::baidu::BidRequest_AdSlot& BidRequest::adslot(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.adslot)
  return adslot_.Get(index);
}
inline ::protocol::baidu::BidRequest_AdSlot* BidRequest::mutable_adslot(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidRequest.adslot)
  return adslot_.Mutable(index);
}
inline ::protocol::baidu::BidRequest_AdSlot* BidRequest::add_adslot() {
  // @@protoc_insertion_point(field_add:protocol.baidu.BidRequest.adslot)
  return adslot_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot >*
BidRequest::mutable_adslot() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidRequest.adslot)
  return &adslot_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidRequest_AdSlot >&
BidRequest::adslot() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidRequest.adslot)
  return adslot_;
}

// optional bool is_test = 26 [default = false];
inline bool BidRequest::has_is_test() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void BidRequest::set_has_is_test() {
  _has_bits_[0] |= 0x02000000u;
}
inline void BidRequest::clear_has_is_test() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void BidRequest::clear_is_test() {
  is_test_ = false;
  clear_has_is_test();
}
inline bool BidRequest::is_test() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.is_test)
  return is_test_;
}
inline void BidRequest::set_is_test(bool value) {
  set_has_is_test();
  is_test_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.is_test)
}

// optional bool is_ping = 27 [default = false];
inline bool BidRequest::has_is_ping() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void BidRequest::set_has_is_ping() {
  _has_bits_[0] |= 0x04000000u;
}
inline void BidRequest::clear_has_is_ping() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void BidRequest::clear_is_ping() {
  is_ping_ = false;
  clear_has_is_ping();
}
inline bool BidRequest::is_ping() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidRequest.is_ping)
  return is_ping_;
}
inline void BidRequest::set_is_ping(bool value) {
  set_has_is_ping();
  is_ping_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidRequest.is_ping)
}

inline const BidRequest* BidRequest::internal_default_instance() {
  return &BidRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// BidResponse_Ad_LinkUnitKeyword

// optional string keyword = 1;
inline bool BidResponse_Ad_LinkUnitKeyword::has_keyword() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad_LinkUnitKeyword::set_has_keyword() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad_LinkUnitKeyword::clear_has_keyword() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad_LinkUnitKeyword::clear_keyword() {
  keyword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyword();
}
inline const ::std::string& BidResponse_Ad_LinkUnitKeyword::keyword() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.keyword)
  return keyword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_LinkUnitKeyword::set_keyword(const ::std::string& value) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.keyword)
}
inline void BidResponse_Ad_LinkUnitKeyword::set_keyword(const char* value) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.keyword)
}
inline void BidResponse_Ad_LinkUnitKeyword::set_keyword(const char* value, size_t size) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.keyword)
}
inline ::std::string* BidResponse_Ad_LinkUnitKeyword::mutable_keyword() {
  set_has_keyword();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.keyword)
  return keyword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad_LinkUnitKeyword::release_keyword() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.keyword)
  clear_has_keyword();
  return keyword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_LinkUnitKeyword::set_allocated_keyword(::std::string* keyword) {
  if (keyword != NULL) {
    set_has_keyword();
  } else {
    clear_has_keyword();
  }
  keyword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyword);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.keyword)
}

// repeated int32 selected_style_type = 2;
inline int BidResponse_Ad_LinkUnitKeyword::selected_style_type_size() const {
  return selected_style_type_.size();
}
inline void BidResponse_Ad_LinkUnitKeyword::clear_selected_style_type() {
  selected_style_type_.Clear();
}
inline ::google::protobuf::int32 BidResponse_Ad_LinkUnitKeyword::selected_style_type(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.selected_style_type)
  return selected_style_type_.Get(index);
}
inline void BidResponse_Ad_LinkUnitKeyword::set_selected_style_type(int index, ::google::protobuf::int32 value) {
  selected_style_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.selected_style_type)
}
inline void BidResponse_Ad_LinkUnitKeyword::add_selected_style_type(::google::protobuf::int32 value) {
  selected_style_type_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.selected_style_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BidResponse_Ad_LinkUnitKeyword::selected_style_type() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.selected_style_type)
  return selected_style_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BidResponse_Ad_LinkUnitKeyword::mutable_selected_style_type() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidResponse.Ad.LinkUnitKeyword.selected_style_type)
  return &selected_style_type_;
}

inline const BidResponse_Ad_LinkUnitKeyword* BidResponse_Ad_LinkUnitKeyword::internal_default_instance() {
  return &BidResponse_Ad_LinkUnitKeyword_default_instance_.get();
}
// -------------------------------------------------------------------

// BidResponse_Ad_ExpandCreativeInfo

// optional int32 creative_width = 1;
inline bool BidResponse_Ad_ExpandCreativeInfo::has_creative_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_has_creative_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_has_creative_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_creative_width() {
  creative_width_ = 0;
  clear_has_creative_width();
}
inline ::google::protobuf::int32 BidResponse_Ad_ExpandCreativeInfo::creative_width() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_width)
  return creative_width_;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_width(::google::protobuf::int32 value) {
  set_has_creative_width();
  creative_width_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_width)
}

// optional int32 creative_height = 2;
inline bool BidResponse_Ad_ExpandCreativeInfo::has_creative_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_has_creative_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_has_creative_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_creative_height() {
  creative_height_ = 0;
  clear_has_creative_height();
}
inline ::google::protobuf::int32 BidResponse_Ad_ExpandCreativeInfo::creative_height() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_height)
  return creative_height_;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_height(::google::protobuf::int32 value) {
  set_has_creative_height();
  creative_height_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_height)
}

// optional string creative_landing_page = 3;
inline bool BidResponse_Ad_ExpandCreativeInfo::has_creative_landing_page() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_has_creative_landing_page() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_has_creative_landing_page() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_creative_landing_page() {
  creative_landing_page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creative_landing_page();
}
inline const ::std::string& BidResponse_Ad_ExpandCreativeInfo::creative_landing_page() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
  return creative_landing_page_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_landing_page(const ::std::string& value) {
  set_has_creative_landing_page();
  creative_landing_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_landing_page(const char* value) {
  set_has_creative_landing_page();
  creative_landing_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_landing_page(const char* value, size_t size) {
  set_has_creative_landing_page();
  creative_landing_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
}
inline ::std::string* BidResponse_Ad_ExpandCreativeInfo::mutable_creative_landing_page() {
  set_has_creative_landing_page();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
  return creative_landing_page_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad_ExpandCreativeInfo::release_creative_landing_page() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
  clear_has_creative_landing_page();
  return creative_landing_page_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_allocated_creative_landing_page(::std::string* creative_landing_page) {
  if (creative_landing_page != NULL) {
    set_has_creative_landing_page();
  } else {
    clear_has_creative_landing_page();
  }
  creative_landing_page_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creative_landing_page);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_landing_page)
}

// optional int32 creative_type = 4;
inline bool BidResponse_Ad_ExpandCreativeInfo::has_creative_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_has_creative_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_has_creative_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse_Ad_ExpandCreativeInfo::clear_creative_type() {
  creative_type_ = 0;
  clear_has_creative_type();
}
inline ::google::protobuf::int32 BidResponse_Ad_ExpandCreativeInfo::creative_type() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_type)
  return creative_type_;
}
inline void BidResponse_Ad_ExpandCreativeInfo::set_creative_type(::google::protobuf::int32 value) {
  set_has_creative_type();
  creative_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.ExpandCreativeInfo.creative_type)
}

inline const BidResponse_Ad_ExpandCreativeInfo* BidResponse_Ad_ExpandCreativeInfo::internal_default_instance() {
  return &BidResponse_Ad_ExpandCreativeInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// BidResponse_Ad_DeeplinkInfo

// optional string deeplink_url = 1;
inline bool BidResponse_Ad_DeeplinkInfo::has_deeplink_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad_DeeplinkInfo::set_has_deeplink_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad_DeeplinkInfo::clear_has_deeplink_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad_DeeplinkInfo::clear_deeplink_url() {
  deeplink_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deeplink_url();
}
inline const ::std::string& BidResponse_Ad_DeeplinkInfo::deeplink_url() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.DeeplinkInfo.deeplink_url)
  return deeplink_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_DeeplinkInfo::set_deeplink_url(const ::std::string& value) {
  set_has_deeplink_url();
  deeplink_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.DeeplinkInfo.deeplink_url)
}
inline void BidResponse_Ad_DeeplinkInfo::set_deeplink_url(const char* value) {
  set_has_deeplink_url();
  deeplink_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.DeeplinkInfo.deeplink_url)
}
inline void BidResponse_Ad_DeeplinkInfo::set_deeplink_url(const char* value, size_t size) {
  set_has_deeplink_url();
  deeplink_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.DeeplinkInfo.deeplink_url)
}
inline ::std::string* BidResponse_Ad_DeeplinkInfo::mutable_deeplink_url() {
  set_has_deeplink_url();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.DeeplinkInfo.deeplink_url)
  return deeplink_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad_DeeplinkInfo::release_deeplink_url() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.DeeplinkInfo.deeplink_url)
  clear_has_deeplink_url();
  return deeplink_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_DeeplinkInfo::set_allocated_deeplink_url(::std::string* deeplink_url) {
  if (deeplink_url != NULL) {
    set_has_deeplink_url();
  } else {
    clear_has_deeplink_url();
  }
  deeplink_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deeplink_url);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.DeeplinkInfo.deeplink_url)
}

// optional uint32 app_version = 2;
inline bool BidResponse_Ad_DeeplinkInfo::has_app_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse_Ad_DeeplinkInfo::set_has_app_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse_Ad_DeeplinkInfo::clear_has_app_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse_Ad_DeeplinkInfo::clear_app_version() {
  app_version_ = 0u;
  clear_has_app_version();
}
inline ::google::protobuf::uint32 BidResponse_Ad_DeeplinkInfo::app_version() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.DeeplinkInfo.app_version)
  return app_version_;
}
inline void BidResponse_Ad_DeeplinkInfo::set_app_version(::google::protobuf::uint32 value) {
  set_has_app_version();
  app_version_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.DeeplinkInfo.app_version)
}

// optional string fallback_url = 3;
inline bool BidResponse_Ad_DeeplinkInfo::has_fallback_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse_Ad_DeeplinkInfo::set_has_fallback_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse_Ad_DeeplinkInfo::clear_has_fallback_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse_Ad_DeeplinkInfo::clear_fallback_url() {
  fallback_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fallback_url();
}
inline const ::std::string& BidResponse_Ad_DeeplinkInfo::fallback_url() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.DeeplinkInfo.fallback_url)
  return fallback_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_DeeplinkInfo::set_fallback_url(const ::std::string& value) {
  set_has_fallback_url();
  fallback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.DeeplinkInfo.fallback_url)
}
inline void BidResponse_Ad_DeeplinkInfo::set_fallback_url(const char* value) {
  set_has_fallback_url();
  fallback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.DeeplinkInfo.fallback_url)
}
inline void BidResponse_Ad_DeeplinkInfo::set_fallback_url(const char* value, size_t size) {
  set_has_fallback_url();
  fallback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.DeeplinkInfo.fallback_url)
}
inline ::std::string* BidResponse_Ad_DeeplinkInfo::mutable_fallback_url() {
  set_has_fallback_url();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.DeeplinkInfo.fallback_url)
  return fallback_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad_DeeplinkInfo::release_fallback_url() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.DeeplinkInfo.fallback_url)
  clear_has_fallback_url();
  return fallback_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_DeeplinkInfo::set_allocated_fallback_url(::std::string* fallback_url) {
  if (fallback_url != NULL) {
    set_has_fallback_url();
  } else {
    clear_has_fallback_url();
  }
  fallback_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fallback_url);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.DeeplinkInfo.fallback_url)
}

// optional uint32 fallback_type = 4;
inline bool BidResponse_Ad_DeeplinkInfo::has_fallback_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse_Ad_DeeplinkInfo::set_has_fallback_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse_Ad_DeeplinkInfo::clear_has_fallback_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse_Ad_DeeplinkInfo::clear_fallback_type() {
  fallback_type_ = 0u;
  clear_has_fallback_type();
}
inline ::google::protobuf::uint32 BidResponse_Ad_DeeplinkInfo::fallback_type() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.DeeplinkInfo.fallback_type)
  return fallback_type_;
}
inline void BidResponse_Ad_DeeplinkInfo::set_fallback_type(::google::protobuf::uint32 value) {
  set_has_fallback_type();
  fallback_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.DeeplinkInfo.fallback_type)
}

inline const BidResponse_Ad_DeeplinkInfo* BidResponse_Ad_DeeplinkInfo::internal_default_instance() {
  return &BidResponse_Ad_DeeplinkInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// BidResponse_Ad_NativeAd_Image

// optional string url = 1;
inline bool BidResponse_Ad_NativeAd_Image::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad_NativeAd_Image::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad_NativeAd_Image::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad_NativeAd_Image::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& BidResponse_Ad_NativeAd_Image::url() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.NativeAd.Image.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_NativeAd_Image::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.NativeAd.Image.url)
}
inline void BidResponse_Ad_NativeAd_Image::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.NativeAd.Image.url)
}
inline void BidResponse_Ad_NativeAd_Image::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.NativeAd.Image.url)
}
inline ::std::string* BidResponse_Ad_NativeAd_Image::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.NativeAd.Image.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad_NativeAd_Image::release_url() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.NativeAd.Image.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_NativeAd_Image::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.NativeAd.Image.url)
}

// optional int32 width = 2;
inline bool BidResponse_Ad_NativeAd_Image::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse_Ad_NativeAd_Image::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse_Ad_NativeAd_Image::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse_Ad_NativeAd_Image::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 BidResponse_Ad_NativeAd_Image::width() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.NativeAd.Image.width)
  return width_;
}
inline void BidResponse_Ad_NativeAd_Image::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.NativeAd.Image.width)
}

// optional int32 height = 3;
inline bool BidResponse_Ad_NativeAd_Image::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse_Ad_NativeAd_Image::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse_Ad_NativeAd_Image::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse_Ad_NativeAd_Image::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 BidResponse_Ad_NativeAd_Image::height() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.NativeAd.Image.height)
  return height_;
}
inline void BidResponse_Ad_NativeAd_Image::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.NativeAd.Image.height)
}

inline const BidResponse_Ad_NativeAd_Image* BidResponse_Ad_NativeAd_Image::internal_default_instance() {
  return &BidResponse_Ad_NativeAd_Image_default_instance_.get();
}
// -------------------------------------------------------------------

// BidResponse_Ad_NativeAd

// optional bytes title = 1;
inline bool BidResponse_Ad_NativeAd::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad_NativeAd::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad_NativeAd::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad_NativeAd::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& BidResponse_Ad_NativeAd::title() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.NativeAd.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_NativeAd::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.NativeAd.title)
}
inline void BidResponse_Ad_NativeAd::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.NativeAd.title)
}
inline void BidResponse_Ad_NativeAd::set_title(const void* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.NativeAd.title)
}
inline ::std::string* BidResponse_Ad_NativeAd::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.NativeAd.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad_NativeAd::release_title() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.NativeAd.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_NativeAd::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.NativeAd.title)
}

// optional bytes desc = 2;
inline bool BidResponse_Ad_NativeAd::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse_Ad_NativeAd::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse_Ad_NativeAd::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse_Ad_NativeAd::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& BidResponse_Ad_NativeAd::desc() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.NativeAd.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_NativeAd::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.NativeAd.desc)
}
inline void BidResponse_Ad_NativeAd::set_desc(const char* value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.NativeAd.desc)
}
inline void BidResponse_Ad_NativeAd::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.NativeAd.desc)
}
inline ::std::string* BidResponse_Ad_NativeAd::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.NativeAd.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad_NativeAd::release_desc() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.NativeAd.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad_NativeAd::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.NativeAd.desc)
}

// repeated .protocol.baidu.BidResponse.Ad.NativeAd.Image image = 3;
inline int BidResponse_Ad_NativeAd::image_size() const {
  return image_.size();
}
inline void BidResponse_Ad_NativeAd::clear_image() {
  image_.Clear();
}
inline const ::protocol::baidu::BidResponse_Ad_NativeAd_Image& BidResponse_Ad_NativeAd::image(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.NativeAd.image)
  return image_.Get(index);
}
inline ::protocol::baidu::BidResponse_Ad_NativeAd_Image* BidResponse_Ad_NativeAd::mutable_image(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.NativeAd.image)
  return image_.Mutable(index);
}
inline ::protocol::baidu::BidResponse_Ad_NativeAd_Image* BidResponse_Ad_NativeAd::add_image() {
  // @@protoc_insertion_point(field_add:protocol.baidu.BidResponse.Ad.NativeAd.image)
  return image_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidResponse_Ad_NativeAd_Image >*
BidResponse_Ad_NativeAd::mutable_image() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidResponse.Ad.NativeAd.image)
  return &image_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidResponse_Ad_NativeAd_Image >&
BidResponse_Ad_NativeAd::image() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidResponse.Ad.NativeAd.image)
  return image_;
}

// optional .protocol.baidu.BidResponse.Ad.NativeAd.Image logo_icon = 4;
inline bool BidResponse_Ad_NativeAd::has_logo_icon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse_Ad_NativeAd::set_has_logo_icon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse_Ad_NativeAd::clear_has_logo_icon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse_Ad_NativeAd::clear_logo_icon() {
  if (logo_icon_ != NULL) logo_icon_->::protocol::baidu::BidResponse_Ad_NativeAd_Image::Clear();
  clear_has_logo_icon();
}
inline const ::protocol::baidu::BidResponse_Ad_NativeAd_Image& BidResponse_Ad_NativeAd::logo_icon() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.NativeAd.logo_icon)
  return logo_icon_ != NULL ? *logo_icon_
                         : *::protocol::baidu::BidResponse_Ad_NativeAd_Image::internal_default_instance();
}
inline ::protocol::baidu::BidResponse_Ad_NativeAd_Image* BidResponse_Ad_NativeAd::mutable_logo_icon() {
  set_has_logo_icon();
  if (logo_icon_ == NULL) {
    logo_icon_ = new ::protocol::baidu::BidResponse_Ad_NativeAd_Image;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.NativeAd.logo_icon)
  return logo_icon_;
}
inline ::protocol::baidu::BidResponse_Ad_NativeAd_Image* BidResponse_Ad_NativeAd::release_logo_icon() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.NativeAd.logo_icon)
  clear_has_logo_icon();
  ::protocol::baidu::BidResponse_Ad_NativeAd_Image* temp = logo_icon_;
  logo_icon_ = NULL;
  return temp;
}
inline void BidResponse_Ad_NativeAd::set_allocated_logo_icon(::protocol::baidu::BidResponse_Ad_NativeAd_Image* logo_icon) {
  delete logo_icon_;
  logo_icon_ = logo_icon;
  if (logo_icon) {
    set_has_logo_icon();
  } else {
    clear_has_logo_icon();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.NativeAd.logo_icon)
}

// optional int32 app_size = 5;
inline bool BidResponse_Ad_NativeAd::has_app_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidResponse_Ad_NativeAd::set_has_app_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidResponse_Ad_NativeAd::clear_has_app_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidResponse_Ad_NativeAd::clear_app_size() {
  app_size_ = 0;
  clear_has_app_size();
}
inline ::google::protobuf::int32 BidResponse_Ad_NativeAd::app_size() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.NativeAd.app_size)
  return app_size_;
}
inline void BidResponse_Ad_NativeAd::set_app_size(::google::protobuf::int32 value) {
  set_has_app_size();
  app_size_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.NativeAd.app_size)
}

inline const BidResponse_Ad_NativeAd* BidResponse_Ad_NativeAd::internal_default_instance() {
  return &BidResponse_Ad_NativeAd_default_instance_.get();
}
// -------------------------------------------------------------------

// BidResponse_Ad

// optional int32 sequence_id = 1;
inline bool BidResponse_Ad::has_sequence_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse_Ad::set_has_sequence_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse_Ad::clear_has_sequence_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse_Ad::clear_sequence_id() {
  sequence_id_ = 0;
  clear_has_sequence_id();
}
inline ::google::protobuf::int32 BidResponse_Ad::sequence_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.sequence_id)
  return sequence_id_;
}
inline void BidResponse_Ad::set_sequence_id(::google::protobuf::int32 value) {
  set_has_sequence_id();
  sequence_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.sequence_id)
}

// optional int64 creative_id = 2;
inline bool BidResponse_Ad::has_creative_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BidResponse_Ad::set_has_creative_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BidResponse_Ad::clear_has_creative_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BidResponse_Ad::clear_creative_id() {
  creative_id_ = GOOGLE_LONGLONG(0);
  clear_has_creative_id();
}
inline ::google::protobuf::int64 BidResponse_Ad::creative_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.creative_id)
  return creative_id_;
}
inline void BidResponse_Ad::set_creative_id(::google::protobuf::int64 value) {
  set_has_creative_id();
  creative_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.creative_id)
}

// optional string html_snippet = 7;
inline bool BidResponse_Ad::has_html_snippet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse_Ad::set_has_html_snippet() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse_Ad::clear_has_html_snippet() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse_Ad::clear_html_snippet() {
  html_snippet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_html_snippet();
}
inline const ::std::string& BidResponse_Ad::html_snippet() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.html_snippet)
  return html_snippet_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_html_snippet(const ::std::string& value) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.html_snippet)
}
inline void BidResponse_Ad::set_html_snippet(const char* value) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.html_snippet)
}
inline void BidResponse_Ad::set_html_snippet(const char* value, size_t size) {
  set_has_html_snippet();
  html_snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.html_snippet)
}
inline ::std::string* BidResponse_Ad::mutable_html_snippet() {
  set_has_html_snippet();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.html_snippet)
  return html_snippet_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad::release_html_snippet() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.html_snippet)
  clear_has_html_snippet();
  return html_snippet_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_allocated_html_snippet(::std::string* html_snippet) {
  if (html_snippet != NULL) {
    set_has_html_snippet();
  } else {
    clear_has_html_snippet();
  }
  html_snippet_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), html_snippet);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.html_snippet)
}

// optional .protocol.baidu.BidResponse.Ad.LinkUnitKeyword link_unit_keyword = 18;
inline bool BidResponse_Ad::has_link_unit_keyword() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse_Ad::set_has_link_unit_keyword() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse_Ad::clear_has_link_unit_keyword() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse_Ad::clear_link_unit_keyword() {
  if (link_unit_keyword_ != NULL) link_unit_keyword_->::protocol::baidu::BidResponse_Ad_LinkUnitKeyword::Clear();
  clear_has_link_unit_keyword();
}
inline const ::protocol::baidu::BidResponse_Ad_LinkUnitKeyword& BidResponse_Ad::link_unit_keyword() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.link_unit_keyword)
  return link_unit_keyword_ != NULL ? *link_unit_keyword_
                         : *::protocol::baidu::BidResponse_Ad_LinkUnitKeyword::internal_default_instance();
}
inline ::protocol::baidu::BidResponse_Ad_LinkUnitKeyword* BidResponse_Ad::mutable_link_unit_keyword() {
  set_has_link_unit_keyword();
  if (link_unit_keyword_ == NULL) {
    link_unit_keyword_ = new ::protocol::baidu::BidResponse_Ad_LinkUnitKeyword;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.link_unit_keyword)
  return link_unit_keyword_;
}
inline ::protocol::baidu::BidResponse_Ad_LinkUnitKeyword* BidResponse_Ad::release_link_unit_keyword() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.link_unit_keyword)
  clear_has_link_unit_keyword();
  ::protocol::baidu::BidResponse_Ad_LinkUnitKeyword* temp = link_unit_keyword_;
  link_unit_keyword_ = NULL;
  return temp;
}
inline void BidResponse_Ad::set_allocated_link_unit_keyword(::protocol::baidu::BidResponse_Ad_LinkUnitKeyword* link_unit_keyword) {
  delete link_unit_keyword_;
  link_unit_keyword_ = link_unit_keyword;
  if (link_unit_keyword) {
    set_has_link_unit_keyword();
  } else {
    clear_has_link_unit_keyword();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.link_unit_keyword)
}

// optional .protocol.baidu.BidResponse.Ad.ExpandCreativeInfo expand_creative_info = 19;
inline bool BidResponse_Ad::has_expand_creative_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BidResponse_Ad::set_has_expand_creative_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BidResponse_Ad::clear_has_expand_creative_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BidResponse_Ad::clear_expand_creative_info() {
  if (expand_creative_info_ != NULL) expand_creative_info_->::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo::Clear();
  clear_has_expand_creative_info();
}
inline const ::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo& BidResponse_Ad::expand_creative_info() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.expand_creative_info)
  return expand_creative_info_ != NULL ? *expand_creative_info_
                         : *::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo::internal_default_instance();
}
inline ::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo* BidResponse_Ad::mutable_expand_creative_info() {
  set_has_expand_creative_info();
  if (expand_creative_info_ == NULL) {
    expand_creative_info_ = new ::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.expand_creative_info)
  return expand_creative_info_;
}
inline ::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo* BidResponse_Ad::release_expand_creative_info() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.expand_creative_info)
  clear_has_expand_creative_info();
  ::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo* temp = expand_creative_info_;
  expand_creative_info_ = NULL;
  return temp;
}
inline void BidResponse_Ad::set_allocated_expand_creative_info(::protocol::baidu::BidResponse_Ad_ExpandCreativeInfo* expand_creative_info) {
  delete expand_creative_info_;
  expand_creative_info_ = expand_creative_info;
  if (expand_creative_info) {
    set_has_expand_creative_info();
  } else {
    clear_has_expand_creative_info();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.expand_creative_info)
}

// optional uint64 advertiser_id = 8;
inline bool BidResponse_Ad::has_advertiser_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BidResponse_Ad::set_has_advertiser_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BidResponse_Ad::clear_has_advertiser_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BidResponse_Ad::clear_advertiser_id() {
  advertiser_id_ = GOOGLE_ULONGLONG(0);
  clear_has_advertiser_id();
}
inline ::google::protobuf::uint64 BidResponse_Ad::advertiser_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.advertiser_id)
  return advertiser_id_;
}
inline void BidResponse_Ad::set_advertiser_id(::google::protobuf::uint64 value) {
  set_has_advertiser_id();
  advertiser_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.advertiser_id)
}

// optional int32 width = 9;
inline bool BidResponse_Ad::has_width() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BidResponse_Ad::set_has_width() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BidResponse_Ad::clear_has_width() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BidResponse_Ad::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 BidResponse_Ad::width() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.width)
  return width_;
}
inline void BidResponse_Ad::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.width)
}

// optional int32 height = 10;
inline bool BidResponse_Ad::has_height() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BidResponse_Ad::set_has_height() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BidResponse_Ad::clear_has_height() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BidResponse_Ad::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 BidResponse_Ad::height() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.height)
  return height_;
}
inline void BidResponse_Ad::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.height)
}

// optional int32 category = 11;
inline bool BidResponse_Ad::has_category() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BidResponse_Ad::set_has_category() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BidResponse_Ad::clear_has_category() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BidResponse_Ad::clear_category() {
  category_ = 0;
  clear_has_category();
}
inline ::google::protobuf::int32 BidResponse_Ad::category() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.category)
  return category_;
}
inline void BidResponse_Ad::set_category(::google::protobuf::int32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.category)
}

// optional int32 type = 12;
inline bool BidResponse_Ad::has_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BidResponse_Ad::set_has_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BidResponse_Ad::clear_has_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BidResponse_Ad::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 BidResponse_Ad::type() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.type)
  return type_;
}
inline void BidResponse_Ad::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.type)
}

// optional string landing_page = 13;
inline bool BidResponse_Ad::has_landing_page() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BidResponse_Ad::set_has_landing_page() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BidResponse_Ad::clear_has_landing_page() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BidResponse_Ad::clear_landing_page() {
  landing_page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_landing_page();
}
inline const ::std::string& BidResponse_Ad::landing_page() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.landing_page)
  return landing_page_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_landing_page(const ::std::string& value) {
  set_has_landing_page();
  landing_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.landing_page)
}
inline void BidResponse_Ad::set_landing_page(const char* value) {
  set_has_landing_page();
  landing_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.landing_page)
}
inline void BidResponse_Ad::set_landing_page(const char* value, size_t size) {
  set_has_landing_page();
  landing_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.landing_page)
}
inline ::std::string* BidResponse_Ad::mutable_landing_page() {
  set_has_landing_page();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.landing_page)
  return landing_page_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad::release_landing_page() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.landing_page)
  clear_has_landing_page();
  return landing_page_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_allocated_landing_page(::std::string* landing_page) {
  if (landing_page != NULL) {
    set_has_landing_page();
  } else {
    clear_has_landing_page();
  }
  landing_page_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), landing_page);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.landing_page)
}

// repeated string target_url = 14;
inline int BidResponse_Ad::target_url_size() const {
  return target_url_.size();
}
inline void BidResponse_Ad::clear_target_url() {
  target_url_.Clear();
}
inline const ::std::string& BidResponse_Ad::target_url(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.target_url)
  return target_url_.Get(index);
}
inline ::std::string* BidResponse_Ad::mutable_target_url(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.target_url)
  return target_url_.Mutable(index);
}
inline void BidResponse_Ad::set_target_url(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.target_url)
  target_url_.Mutable(index)->assign(value);
}
inline void BidResponse_Ad::set_target_url(int index, const char* value) {
  target_url_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.target_url)
}
inline void BidResponse_Ad::set_target_url(int index, const char* value, size_t size) {
  target_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.target_url)
}
inline ::std::string* BidResponse_Ad::add_target_url() {
  // @@protoc_insertion_point(field_add_mutable:protocol.baidu.BidResponse.Ad.target_url)
  return target_url_.Add();
}
inline void BidResponse_Ad::add_target_url(const ::std::string& value) {
  target_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidResponse.Ad.target_url)
}
inline void BidResponse_Ad::add_target_url(const char* value) {
  target_url_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.baidu.BidResponse.Ad.target_url)
}
inline void BidResponse_Ad::add_target_url(const char* value, size_t size) {
  target_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.baidu.BidResponse.Ad.target_url)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidResponse_Ad::target_url() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidResponse.Ad.target_url)
  return target_url_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidResponse_Ad::mutable_target_url() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidResponse.Ad.target_url)
  return &target_url_;
}

// repeated string monitor_urls = 17;
inline int BidResponse_Ad::monitor_urls_size() const {
  return monitor_urls_.size();
}
inline void BidResponse_Ad::clear_monitor_urls() {
  monitor_urls_.Clear();
}
inline const ::std::string& BidResponse_Ad::monitor_urls(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.monitor_urls)
  return monitor_urls_.Get(index);
}
inline ::std::string* BidResponse_Ad::mutable_monitor_urls(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.monitor_urls)
  return monitor_urls_.Mutable(index);
}
inline void BidResponse_Ad::set_monitor_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.monitor_urls)
  monitor_urls_.Mutable(index)->assign(value);
}
inline void BidResponse_Ad::set_monitor_urls(int index, const char* value) {
  monitor_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.monitor_urls)
}
inline void BidResponse_Ad::set_monitor_urls(int index, const char* value, size_t size) {
  monitor_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.monitor_urls)
}
inline ::std::string* BidResponse_Ad::add_monitor_urls() {
  // @@protoc_insertion_point(field_add_mutable:protocol.baidu.BidResponse.Ad.monitor_urls)
  return monitor_urls_.Add();
}
inline void BidResponse_Ad::add_monitor_urls(const ::std::string& value) {
  monitor_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.baidu.BidResponse.Ad.monitor_urls)
}
inline void BidResponse_Ad::add_monitor_urls(const char* value) {
  monitor_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.baidu.BidResponse.Ad.monitor_urls)
}
inline void BidResponse_Ad::add_monitor_urls(const char* value, size_t size) {
  monitor_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.baidu.BidResponse.Ad.monitor_urls)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BidResponse_Ad::monitor_urls() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidResponse.Ad.monitor_urls)
  return monitor_urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BidResponse_Ad::mutable_monitor_urls() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidResponse.Ad.monitor_urls)
  return &monitor_urls_;
}

// optional int32 max_cpm = 3;
inline bool BidResponse_Ad::has_max_cpm() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BidResponse_Ad::set_has_max_cpm() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BidResponse_Ad::clear_has_max_cpm() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BidResponse_Ad::clear_max_cpm() {
  max_cpm_ = 0;
  clear_has_max_cpm();
}
inline ::google::protobuf::int32 BidResponse_Ad::max_cpm() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.max_cpm)
  return max_cpm_;
}
inline void BidResponse_Ad::set_max_cpm(::google::protobuf::int32 value) {
  set_has_max_cpm();
  max_cpm_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.max_cpm)
}

// optional string extdata = 5;
inline bool BidResponse_Ad::has_extdata() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BidResponse_Ad::set_has_extdata() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BidResponse_Ad::clear_has_extdata() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BidResponse_Ad::clear_extdata() {
  extdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extdata();
}
inline const ::std::string& BidResponse_Ad::extdata() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.extdata)
  return extdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_extdata(const ::std::string& value) {
  set_has_extdata();
  extdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.extdata)
}
inline void BidResponse_Ad::set_extdata(const char* value) {
  set_has_extdata();
  extdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.extdata)
}
inline void BidResponse_Ad::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  extdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.extdata)
}
inline ::std::string* BidResponse_Ad::mutable_extdata() {
  set_has_extdata();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.extdata)
  return extdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad::release_extdata() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.extdata)
  clear_has_extdata();
  return extdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_allocated_extdata(::std::string* extdata) {
  if (extdata != NULL) {
    set_has_extdata();
  } else {
    clear_has_extdata();
  }
  extdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extdata);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.extdata)
}

// optional bool is_cookie_matching = 6;
inline bool BidResponse_Ad::has_is_cookie_matching() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BidResponse_Ad::set_has_is_cookie_matching() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BidResponse_Ad::clear_has_is_cookie_matching() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BidResponse_Ad::clear_is_cookie_matching() {
  is_cookie_matching_ = false;
  clear_has_is_cookie_matching();
}
inline bool BidResponse_Ad::is_cookie_matching() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.is_cookie_matching)
  return is_cookie_matching_;
}
inline void BidResponse_Ad::set_is_cookie_matching(bool value) {
  set_has_is_cookie_matching();
  is_cookie_matching_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.is_cookie_matching)
}

// optional string preferred_order_id = 15;
inline bool BidResponse_Ad::has_preferred_order_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BidResponse_Ad::set_has_preferred_order_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BidResponse_Ad::clear_has_preferred_order_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BidResponse_Ad::clear_preferred_order_id() {
  preferred_order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_preferred_order_id();
}
inline const ::std::string& BidResponse_Ad::preferred_order_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.preferred_order_id)
  return preferred_order_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_preferred_order_id(const ::std::string& value) {
  set_has_preferred_order_id();
  preferred_order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.preferred_order_id)
}
inline void BidResponse_Ad::set_preferred_order_id(const char* value) {
  set_has_preferred_order_id();
  preferred_order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.Ad.preferred_order_id)
}
inline void BidResponse_Ad::set_preferred_order_id(const char* value, size_t size) {
  set_has_preferred_order_id();
  preferred_order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.Ad.preferred_order_id)
}
inline ::std::string* BidResponse_Ad::mutable_preferred_order_id() {
  set_has_preferred_order_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.preferred_order_id)
  return preferred_order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse_Ad::release_preferred_order_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.preferred_order_id)
  clear_has_preferred_order_id();
  return preferred_order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse_Ad::set_allocated_preferred_order_id(::std::string* preferred_order_id) {
  if (preferred_order_id != NULL) {
    set_has_preferred_order_id();
  } else {
    clear_has_preferred_order_id();
  }
  preferred_order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preferred_order_id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.preferred_order_id)
}

// optional uint32 guaranteed_order_id = 20;
inline bool BidResponse_Ad::has_guaranteed_order_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BidResponse_Ad::set_has_guaranteed_order_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BidResponse_Ad::clear_has_guaranteed_order_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BidResponse_Ad::clear_guaranteed_order_id() {
  guaranteed_order_id_ = 0u;
  clear_has_guaranteed_order_id();
}
inline ::google::protobuf::uint32 BidResponse_Ad::guaranteed_order_id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.guaranteed_order_id)
  return guaranteed_order_id_;
}
inline void BidResponse_Ad::set_guaranteed_order_id(::google::protobuf::uint32 value) {
  set_has_guaranteed_order_id();
  guaranteed_order_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.Ad.guaranteed_order_id)
}

// optional .protocol.baidu.BidResponse.Ad.DeeplinkInfo deeplink_info = 21;
inline bool BidResponse_Ad::has_deeplink_info() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BidResponse_Ad::set_has_deeplink_info() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BidResponse_Ad::clear_has_deeplink_info() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BidResponse_Ad::clear_deeplink_info() {
  if (deeplink_info_ != NULL) deeplink_info_->::protocol::baidu::BidResponse_Ad_DeeplinkInfo::Clear();
  clear_has_deeplink_info();
}
inline const ::protocol::baidu::BidResponse_Ad_DeeplinkInfo& BidResponse_Ad::deeplink_info() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.deeplink_info)
  return deeplink_info_ != NULL ? *deeplink_info_
                         : *::protocol::baidu::BidResponse_Ad_DeeplinkInfo::internal_default_instance();
}
inline ::protocol::baidu::BidResponse_Ad_DeeplinkInfo* BidResponse_Ad::mutable_deeplink_info() {
  set_has_deeplink_info();
  if (deeplink_info_ == NULL) {
    deeplink_info_ = new ::protocol::baidu::BidResponse_Ad_DeeplinkInfo;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.deeplink_info)
  return deeplink_info_;
}
inline ::protocol::baidu::BidResponse_Ad_DeeplinkInfo* BidResponse_Ad::release_deeplink_info() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.deeplink_info)
  clear_has_deeplink_info();
  ::protocol::baidu::BidResponse_Ad_DeeplinkInfo* temp = deeplink_info_;
  deeplink_info_ = NULL;
  return temp;
}
inline void BidResponse_Ad::set_allocated_deeplink_info(::protocol::baidu::BidResponse_Ad_DeeplinkInfo* deeplink_info) {
  delete deeplink_info_;
  deeplink_info_ = deeplink_info;
  if (deeplink_info) {
    set_has_deeplink_info();
  } else {
    clear_has_deeplink_info();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.deeplink_info)
}

// optional .protocol.baidu.BidResponse.Ad.NativeAd native_ad = 22;
inline bool BidResponse_Ad::has_native_ad() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BidResponse_Ad::set_has_native_ad() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BidResponse_Ad::clear_has_native_ad() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BidResponse_Ad::clear_native_ad() {
  if (native_ad_ != NULL) native_ad_->::protocol::baidu::BidResponse_Ad_NativeAd::Clear();
  clear_has_native_ad();
}
inline const ::protocol::baidu::BidResponse_Ad_NativeAd& BidResponse_Ad::native_ad() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.Ad.native_ad)
  return native_ad_ != NULL ? *native_ad_
                         : *::protocol::baidu::BidResponse_Ad_NativeAd::internal_default_instance();
}
inline ::protocol::baidu::BidResponse_Ad_NativeAd* BidResponse_Ad::mutable_native_ad() {
  set_has_native_ad();
  if (native_ad_ == NULL) {
    native_ad_ = new ::protocol::baidu::BidResponse_Ad_NativeAd;
  }
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.Ad.native_ad)
  return native_ad_;
}
inline ::protocol::baidu::BidResponse_Ad_NativeAd* BidResponse_Ad::release_native_ad() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.Ad.native_ad)
  clear_has_native_ad();
  ::protocol::baidu::BidResponse_Ad_NativeAd* temp = native_ad_;
  native_ad_ = NULL;
  return temp;
}
inline void BidResponse_Ad::set_allocated_native_ad(::protocol::baidu::BidResponse_Ad_NativeAd* native_ad) {
  delete native_ad_;
  native_ad_ = native_ad;
  if (native_ad) {
    set_has_native_ad();
  } else {
    clear_has_native_ad();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.Ad.native_ad)
}

inline const BidResponse_Ad* BidResponse_Ad::internal_default_instance() {
  return &BidResponse_Ad_default_instance_.get();
}
// -------------------------------------------------------------------

// BidResponse

// required string id = 1;
inline bool BidResponse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BidResponse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BidResponse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BidResponse::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& BidResponse::id() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.id)
}
inline void BidResponse::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.id)
}
inline void BidResponse::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.id)
}
inline ::std::string* BidResponse::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse::release_id() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.id)
}

// repeated .protocol.baidu.BidResponse.Ad ad = 2;
inline int BidResponse::ad_size() const {
  return ad_.size();
}
inline void BidResponse::clear_ad() {
  ad_.Clear();
}
inline const ::protocol::baidu::BidResponse_Ad& BidResponse::ad(int index) const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.ad)
  return ad_.Get(index);
}
inline ::protocol::baidu::BidResponse_Ad* BidResponse::mutable_ad(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.ad)
  return ad_.Mutable(index);
}
inline ::protocol::baidu::BidResponse_Ad* BidResponse::add_ad() {
  // @@protoc_insertion_point(field_add:protocol.baidu.BidResponse.ad)
  return ad_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidResponse_Ad >*
BidResponse::mutable_ad() {
  // @@protoc_insertion_point(field_mutable_list:protocol.baidu.BidResponse.ad)
  return &ad_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::baidu::BidResponse_Ad >&
BidResponse::ad() const {
  // @@protoc_insertion_point(field_list:protocol.baidu.BidResponse.ad)
  return ad_;
}

// optional string debug_string = 3;
inline bool BidResponse::has_debug_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BidResponse::set_has_debug_string() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BidResponse::clear_has_debug_string() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BidResponse::clear_debug_string() {
  debug_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_debug_string();
}
inline const ::std::string& BidResponse::debug_string() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.debug_string)
  return debug_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse::set_debug_string(const ::std::string& value) {
  set_has_debug_string();
  debug_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.debug_string)
}
inline void BidResponse::set_debug_string(const char* value) {
  set_has_debug_string();
  debug_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.baidu.BidResponse.debug_string)
}
inline void BidResponse::set_debug_string(const char* value, size_t size) {
  set_has_debug_string();
  debug_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.baidu.BidResponse.debug_string)
}
inline ::std::string* BidResponse::mutable_debug_string() {
  set_has_debug_string();
  // @@protoc_insertion_point(field_mutable:protocol.baidu.BidResponse.debug_string)
  return debug_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidResponse::release_debug_string() {
  // @@protoc_insertion_point(field_release:protocol.baidu.BidResponse.debug_string)
  clear_has_debug_string();
  return debug_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidResponse::set_allocated_debug_string(::std::string* debug_string) {
  if (debug_string != NULL) {
    set_has_debug_string();
  } else {
    clear_has_debug_string();
  }
  debug_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debug_string);
  // @@protoc_insertion_point(field_set_allocated:protocol.baidu.BidResponse.debug_string)
}

// optional int32 processing_time_ms = 4;
inline bool BidResponse::has_processing_time_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BidResponse::set_has_processing_time_ms() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BidResponse::clear_has_processing_time_ms() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BidResponse::clear_processing_time_ms() {
  processing_time_ms_ = 0;
  clear_has_processing_time_ms();
}
inline ::google::protobuf::int32 BidResponse::processing_time_ms() const {
  // @@protoc_insertion_point(field_get:protocol.baidu.BidResponse.processing_time_ms)
  return processing_time_ms_;
}
inline void BidResponse::set_processing_time_ms(::google::protobuf::int32 value) {
  set_has_processing_time_ms();
  processing_time_ms_ = value;
  // @@protoc_insertion_point(field_set:protocol.baidu.BidResponse.processing_time_ms)
}

inline const BidResponse* BidResponse::internal_default_instance() {
  return &BidResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace baidu
}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protocol::baidu::BidRequest_Geo_Coordinate_Standard> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_Geo_Coordinate_Standard>() {
  return ::protocol::baidu::BidRequest_Geo_Coordinate_Standard_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_Mobile_MobileID_IDType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_Mobile_MobileID_IDType>() {
  return ::protocol::baidu::BidRequest_Mobile_MobileID_IDType_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID_IDType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID_IDType>() {
  return ::protocol::baidu::BidRequest_Mobile_ForAdvertisingID_IDType_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType>() {
  return ::protocol::baidu::BidRequest_Mobile_MobileApp_AppInteractionType_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_Mobile_MobileDeviceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_Mobile_MobileDeviceType>() {
  return ::protocol::baidu::BidRequest_Mobile_MobileDeviceType_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_Mobile_OS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_Mobile_OS>() {
  return ::protocol::baidu::BidRequest_Mobile_OS_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_Mobile_WirelessNetworkType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_Mobile_WirelessNetworkType>() {
  return ::protocol::baidu::BidRequest_Mobile_WirelessNetworkType_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType>() {
  return ::protocol::baidu::BidRequest_AdSlot_GuaranteedOrder_Charge_ChargeType_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType>() {
  return ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_ActionType_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_Direction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_Direction>() {
  return ::protocol::baidu::BidRequest_AdSlot_ExpandCreativeInfo_Direction_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_Fields> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_Fields>() {
  return ::protocol::baidu::BidRequest_AdSlot_NativeAdParam_Fields_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_AdSlot_CreativeDescType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_AdSlot_CreativeDescType>() {
  return ::protocol::baidu::BidRequest_AdSlot_CreativeDescType_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_AdSlot_AdSlotLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_AdSlot_AdSlotLevel>() {
  return ::protocol::baidu::BidRequest_AdSlot_AdSlotLevel_descriptor();
}
template <> struct is_proto_enum< ::protocol::baidu::BidRequest_Gender> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::baidu::BidRequest_Gender>() {
  return ::protocol::baidu::BidRequest_Gender_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_baidu_5fbidding_2eproto__INCLUDED
